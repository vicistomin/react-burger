{"version":3,"sources":["components/burger-ingredients-category/burger-ingredients-category.module.css","components/modal-overlay/modal-overlay.module.css","components/form/form.module.css","pages/reset-password.module.css","components/orders-list/orders-list.module.css","pages/not-found.module.css","services/hooks.ts","services/constants.ts","services/slices/items.ts","services/slices/burger-constructor.ts","components/draggable-constructor-element/draggable-constructor-element.tsx","services/utils.ts","services/slices/websocket.ts","services/slices/feed.ts","services/slices/user.ts","services/slices/order.ts","components/burger-constructor/burger-constructor.tsx","components/burger-ingredients-card/burger-ingredients-card.tsx","components/burger-ingredients-category/burger-ingredients-category.tsx","components/burger-ingredients/burger-ingredients.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/order-accepted.gif","images/logo.png","components/loader/loader.tsx","components/order-details/order-details.tsx","pages/home.tsx","components/form/form.tsx","pages/login.tsx","pages/register.tsx","pages/forgot-password.tsx","pages/reset-password.tsx","components/orders-card/orders-card.tsx","components/orders-list/orders-list.tsx","components/feed-info-panel/feed-info-panel.tsx","pages/feed.tsx","components/order-detailed-view/order-detailed-view.tsx","pages/order.tsx","pages/order-modal.tsx","components/sidebar-link/sidebar-link.tsx","components/sidebar/sidebar.tsx","pages/profile.tsx","pages/history.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient.tsx","pages/ingredient-modal.tsx","pages/not-found.tsx","components/protected-route.tsx","components/protected-reset-route.tsx","components/protected-guest-route.tsx","components/menu-item/menu-item.tsx","components/app-header/app-header.tsx","components/app/app.tsx","services/slices/index.ts","services/middleware/ws-middleware.ts","services/store.ts","index.tsx","components/orders-card/orders-card.module.css","components/order-detailed-view/order-detailed-view.module.css","components/burger-constructor/burger-constructor.module.css","components/feed-info-panel/feed-info-panel.module.css","components/ingredient-details/ingredient-details.module.css","components/app-header/app-header.module.css","components/draggable-constructor-element/draggable-constructor-element.module.css","components/modal/modal.module.css","pages/feed.module.css","components/menu-item/menu-item.module.css","pages/home.module.css","components/order-details/order-details.module.css","pages/profile.module.css","components/sidebar-link/sidebar-link.module.css","components/burger-ingredients/burger-ingredients.module.css","components/burger-ingredients-card/burger-ingredients-card.module.css","components/loader/loader.module.css","components/sidebar/sidebar.module.css","pages/history.module.css"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","ITEMS_API_URL","ORDER_API_URL","FORGOT_PASSWORD_API_URL","RESET_PASSWORD_API_URL","REGISTER_API_URL","LOGIN_API_URL","LOGOUT_API_URL","USER_API_URL","ALL_ORDERS_WS_URL","USER_ORDERS_WS_URL","itemsSlice","createSlice","name","initialState","items","itemsRequest","itemsFailed","itemsSuccess","reducers","request","state","failed","success","action","payload","increaseQuantityValue","map","item","_id","__v","decreaseQuantityValue","clearValues","burgerConstructorSlice","bunItem","middleItems","totalPrice","setBunItem","addMiddleItem","push","moveMiddleItem","movedItem","splice","oldIndex","newIndex","deleteMiddleItem","clearMiddleItems","calcTotalPrice","price","reduce","acc","p","length","DraggableConstructorElement","index","dispatch","actions","dndItemRef","useRef","useState","isItemHigher","setIsItemHigher","isItemLower","setIsItemLower","useDrop","accept","drop","collect","monitor","targetId","getHandlerId","isItemHover","isOver","offset","getDifferenceFromInitialOffset","dropItemTarget","useDrag","type","sourceId","isItemDragging","isDragging","end","didDrop","getDropResult","dragItemSource","useEffect","y","className","draggableConstructorElementStyles","draggable_list_item","dragged","pushedUp","pushedDown","ref","data-source-id","data-target-id","drag_icon","image","text","thumbnail","handleClose","itemId","handleItemDelete","formatDateTime","time","n","dateTime","Date","daysFromToday","today","now","utcDateTime","UTC","getFullYear","getMonth","getDate","utcToday","Math","floor","getDaysFromToday","day","hours","getHours","toString","padStart","mins","getMinutes","timeZone","Intl","NumberFormat","signDisplay","format","getTimezoneOffset","getCookie","matches","document","cookie","match","RegExp","replace","decodeURIComponent","setCookie","value","props","expires","d","setTime","getTime","toUTCString","propName","cookieValue","encodeURIComponent","updatedCookie","propValue","deleteCookie","path","wsSlice","wsConnected","wsError","wsConnectionStart","wsConnectionStop","wsConnectionSuccess","wsConnectionError","wsConnectionClosed","startFeed","url","feedSlice","stopFeed","orders","feedRequest","feedFailed","feedSuccess","ordersTotal","ordersTotalToday","setOrdersData","sort","a","b","updatedAt","keyA","valueOf","total","totalToday","getUser","accessToken","userRequestHeaders","Headers","append","userSlice","fetch","method","headers","then","res","ok","status","Error","statusText","json","data","setName","user","setEmail","email","setAuthorization","message","refreshToken","refresh_res","refresh_data","delete","catch","error","console","log","body","JSON","stringify","startHistory","token","stopHistory","fakePassword","password","userRequest","userFailed","userSuccess","isAuthorized","setPassword","resetStatus","resetUserData","checkAuthorization","orderSlice","orderData","orderRequest","orderFailed","orderSuccess","isOrderModalOpen","id","number","openOrderModal","closeOrderModal","BurgerConstructor","burgerConstructor","history","useHistory","handleBunItemDrop","newBunItem","dropTopBunTarget","dropBottomBunTarget","dropMiddleItemTarget","burgerConstructorStyles","burger_constructor_list","isLocked","emptyBun","burger_constructor_draggable_list","random","warningText","burger_constructor_order","disabled","size","onClick","Authorization","order","finally","placeOrder","pathname","from","BurgerIngredientsCard","memo","opacity","dragRef","burgerIngredientsCardStyles","ingredient_card","background","location","style","count","src","alt","title","ingredient_name","BurgerIngredientsCategory","forwardRef","categoryId","heading","burgerIngredientsCategoryStyles","burger_ingredients_list","BurgerIngredients","current","setCurrent","setTab","tabName","getElementById","scrollIntoView","behavior","inViewOptions","threshold","trackVisibility","delay","useInView","bunRef","inViewBun","mainRef","inViewMain","sauceRef","inViewSauce","burgerIngredientsStyles","tab_selector","active","scroll_container","filter","ModalOverlay","closeModal","modalOverlayStyles","modal_overlay","modalRoot","Modal","children","header","isFancyCloseIcon","isOrderModal","handleEscKey","e","key","stopImmediatePropagation","addEventListener","removeEventListener","ReactDOM","createPortal","modalStyles","modal_container","modal_header","close_icon","fancy_icon","Loader","loaderStyles","loader","logo","spinner","OrderDetails","orderDetailsStyles","order_details_container","loader_container","order_id","orderAcceptedImage","height","HomePage","styles","container","DndProvider","backend","HTML5Backend","container_left","container_right","Form","formStyles","form_container","autoComplete","onSubmit","onFormSubmit","actionName","LoginPage","useLocation","resetError","emailValue","setEmailValue","isEmailValid","setEmailValid","passwordValue","setPasswordValue","isPasswordEmpty","setPasswordEmpty","emailInputRef","emailRegExp","validateForm","useCallback","validFields","test","redirectOnSuccess","onLoginClick","redirectCallback","preventDefault","placeholder","onChange","target","errorText","RegisterPage","nameValue","setNameValue","isNameEmpty","setNameEmpty","nameInputRef","onRegisterClick","ForgotPasswordPage","onResetPasswordClick","ResetPasswordPage","codeValue","setCodeValue","isCodeEmpty","setCodeEmpty","codeInputRef","code","reset_password_container","OrdersCard","source","orderStatusName","setOrderStatusName","orderStatusClass","setOrderStatusClass","ordersCardStyles","status_completed","status_canceled","getOrderDateTime","createdAt","orderedIngredients","ingredients","item_id","find","filteredOrderedIngredients","orderedBun","orderedMiddleItems","renderIngredientIcons","itemsToRender","ingredient","ingredient_icon_wrapper","zIndex","image_mobile","width","more_ingredients_icon","more_icon_text","more_icon_wrapper","calculateOrderPrice","order_card","currentUrl","order_info","ingredient_icons_container","compareOrders","prevProps","nextProps","OrdersList","ordersListStyles","orders_list","FeedInfoPanel","feed","renderCompletedOrders","slice","renderPreparingOrders","feedInfoPanelStyles","panel_container","orders_list_container","orders_list_column","orders_list_completed","orders_list_preparing","toLocaleString","FeedPage","ws","feed_title","feed_container","feed_orders_container","feed_info_container","OrderDetailedView","orderDetailedViewStyles","uniqueCountedItems","renderedItems","ingredient_wrapper","ingredient_price","orderIngredients","orderedItem","order_container","ingredients_container","OrderPage","isFeedPage","split","currentOrder","setCurrentOrder","currentOrderId","useParams","OrderModalPage","replaceState","undefined","window","SidebarLink","sidebarLinkStyles","sidebar_list_item","sidebar_link","sidebar_link_active","Sidebar","isProfilePage","setProfilePage","isHistoryPage","setHistoryPage","sidebarStyles","sidebar_container","sidebar_list","ProfilePage","isNameInputDisabled","setNameInputDisabled","isNameInputEmpty","setNameInputEmpty","isPasswordInputDisabled","setPasswordInputDisabled","isPasswordInputEmpty","setPasswordInputEmpty","hasFormChanged","setFormChanged","passwordInputRef","profile_container","icon","onIconClick","focus","onBlur","buttons_container","setUser","HistoryPage","history_container","history_orders_container","IngredientDetails","ingredientDetailsStyles","ingredient_details_container","image_large","ingredient_nutrition_list","ingredient_nutrition_list_item","calories","proteins","fat","carbohydrates","IngredientPage","currentIngredientId","IngredientModalPage","currentItemId","currentItem","NotFound404","fullscreen_message","ProtectedRoute","rest","render","to","ProtectedResetRoute","ProtectedGuestRoute","MenuItem","menuItemStyles","menu_list_item","menu_list_item_active","menu_list_item_icon","menu_list_item_text","AppHeader","isHomePage","setHomePage","setFeedPage","appHeaderStyles","menu_container","menu_list","menu_list_left","menu_list_left_items","menu_list_center","menu_list_right","App","exact","rootReducer","combineReducers","reducer","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","socket","next","wsUrl","WebSocket","close","onopen","event","onerror","onmessage","parsedData","parse","restParsedData","wsToken","onclose","devTools","process","StrictMode","basename"],"mappings":"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","file":"static/js/main.474ab085.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger_ingredients_list\":\"burger-ingredients-category_burger_ingredients_list__3k6bD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_overlay\":\"modal-overlay_modal_overlay__1YYVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"form_form_container__3oY74 flex_column\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset_password_container\":\"reset-password_reset_password_container__3kj-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders_list\":\"orders-list_orders_list__2iTPK flex_column pr-2 scroll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreen_message\":\"not-found_fullscreen_message__1QgaT fullscreen_message\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport type { RootState, AppDispatch } from './store'\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","export const ITEMS_API_URL: string = 'https://norma.nomoreparties.space/api/ingredients';\r\nexport const ORDER_API_URL: string = 'https://norma.nomoreparties.space/api/orders';\r\nexport const FORGOT_PASSWORD_API_URL: string = 'https://norma.nomoreparties.space/api/password-reset';\r\nexport const RESET_PASSWORD_API_URL: string = 'https://norma.nomoreparties.space/api/password-reset/reset';\r\nexport const REGISTER_API_URL: string = 'https://norma.nomoreparties.space/api/auth/register';\r\nexport const LOGIN_API_URL: string = 'https://norma.nomoreparties.space/api/auth/login';\r\nexport const LOGOUT_API_URL: string = 'https://norma.nomoreparties.space/api/auth/logout';\r\nexport const TOKEN_API_URL: string = 'https://norma.nomoreparties.space/api/auth/token';\r\nexport const USER_API_URL: string = 'https://norma.nomoreparties.space/api/auth/user';\r\nexport const ALL_ORDERS_WS_URL: string = 'wss://norma.nomoreparties.space/orders/all';\r\nexport const USER_ORDERS_WS_URL: string = 'wss://norma.nomoreparties.space/orders';\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { useAppDispatch } from '../hooks'\r\nimport { ITEMS_API_URL } from \"../constants\";\r\nimport { IIngredient } from '../types';\r\n\r\nexport const getItems = () => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(itemsSlice.actions.request());\r\n    // getting data from API\r\n    fetch(ITEMS_API_URL)  \r\n      .then(res => {\r\n        if (!res.ok) {\r\n          // we don't need to set state vars here as we will do that in catch\r\n          throw Error(res.statusText);\r\n        }\r\n        return res.json();\r\n      })\r\n      .then(({data}) => {\r\n        dispatch(itemsSlice.actions.success(data));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        dispatch(itemsSlice.actions.failed());\r\n      })\r\n  }\r\n}\r\n\r\ninterface itemsState {\r\n  items: Array<IIngredient>,\r\n  itemsRequest: boolean,\r\n  itemsFailed: boolean,\r\n  itemsSuccess: boolean,\r\n}\r\n\r\nconst initialState: itemsState = {\r\n  items: [],\r\n  itemsRequest: false,\r\n  itemsFailed: false,\r\n  itemsSuccess: false,\r\n}\r\n\r\nexport const itemsSlice = createSlice({\r\n  name: 'items',\r\n  initialState,\r\n  reducers: {\r\n    request(state) {\r\n      state.itemsRequest = true;\r\n      state.itemsFailed = false;\r\n      state.itemsSuccess = false;\r\n    },\r\n    failed(state) {\r\n      state.itemsFailed = true;\r\n      state.itemsRequest = false;\r\n      state.itemsSuccess = false;\r\n    },\r\n    success(state, action: PayloadAction<Array<IIngredient>>) {\r\n      state.itemsSuccess = true;\r\n      state.itemsRequest = false;\r\n      state.itemsFailed = false;\r\n      state.items = action.payload;\r\n    },\r\n    increaseQuantityValue(state, action: PayloadAction<string>) {\r\n      state.items = [...state.items].map(item =>\r\n        item._id === action.payload ? {\r\n          ...item,\r\n          __v: (item.__v || 0) + 1\r\n        } : item\r\n      );\r\n    },\r\n    decreaseQuantityValue(state, action: PayloadAction<string>) {\r\n      state.items = [...state.items].map(item =>\r\n        item._id === action.payload ? {\r\n          ...item,\r\n          __v: (item.__v || 1) - 1\r\n        } : item\r\n      );\r\n    },\r\n    clearValues(state) {\r\n      state.items = [...state.items].map(item => ({\r\n          ...item,\r\n          __v: 0\r\n      }));\r\n    }\r\n  }\r\n}) \r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { IIngredient } from '../types'\r\n\r\ninterface burgerConstructorState {\r\n  bunItem: IIngredient,\r\n  middleItems: Array<IIngredient>,\r\n  totalPrice: number\r\n}\r\n\r\n// Define the initial state using that type\r\nconst initialState: burgerConstructorState = {\r\n  bunItem: {},\r\n  middleItems: [],\r\n  totalPrice: 0\r\n}\r\n\r\nexport const burgerConstructorSlice = createSlice({\r\n  name: 'burgerConstructor',\r\n  initialState,\r\n  reducers: {\r\n    setBunItem(state, action: PayloadAction<IIngredient>) {\r\n      state.bunItem = action.payload;\r\n    },\r\n    addMiddleItem(state, action: PayloadAction<IIngredient>) {\r\n      state.middleItems.push(action.payload);\r\n    },\r\n    moveMiddleItem(state, action: PayloadAction<{ oldIndex: number, newIndex: number }>) {\r\n      const movedItem = state.middleItems.splice(action.payload.oldIndex, 1);\r\n      state.middleItems.splice(action.payload.newIndex, 0, movedItem[0]);\r\n    },\r\n    deleteMiddleItem(state, action: PayloadAction<number>) {\r\n      state.middleItems.splice(action.payload, 1);\r\n    },\r\n    clearMiddleItems(state) {\r\n      state.middleItems = [];\r\n    },\r\n    calcTotalPrice(state) {\r\n      !!state.bunItem.name && !!state.bunItem.price ? (\r\n        // buns can be only of one type so there are 2 buns:\r\n        state.totalPrice = state.bunItem.price * 2 + state.middleItems.reduce(\r\n          (acc, p) => acc + (p.price || 0), 0\r\n        )\r\n      ) : ( state.middleItems.length ? (\r\n        state.totalPrice = state.middleItems.reduce((acc, p) => acc + (p.price || 0), 0)\r\n        ) : (\r\n          state.totalPrice = 0\r\n        )\r\n      );\r\n    }\r\n  }\r\n}) \r\n","import { FC, useRef, useEffect, useState } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppDispatch } from '../../services/hooks';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport draggableConstructorElementStyles from './draggable-constructor-element.module.css';\r\n// importing components from library\r\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { burgerConstructorSlice } from '../../services/slices/burger-constructor';\r\nimport { itemsSlice } from '../../services/slices/items';\r\nimport { IIngredient } from '../../services/types';\r\n\r\ninterface IDraggedItem {\r\n  item: IIngredient,\r\n  index: number\r\n}\r\n\r\nconst DraggableConstructorElement: FC<IDraggedItem> = ({\r\n  item,\r\n  index\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n  const { decreaseQuantityValue } = itemsSlice.actions;\r\n  const { moveMiddleItem, deleteMiddleItem } = burgerConstructorSlice.actions\r\n\r\n  const dndItemRef = useRef<HTMLLIElement>(null);\r\n  const [isItemHigher, setIsItemHigher] = useState<boolean>(false);\r\n  const [isItemLower, setIsItemLower] = useState<boolean>(false);\r\n\r\n  const [{targetId, isItemHover, offset}, dropItemTarget] = useDrop({\r\n      accept: 'sortedIngredient',\r\n      drop() {\r\n          return ({index});\r\n      },\r\n      collect: monitor => ({\r\n          targetId: monitor.getHandlerId(),\r\n          isItemHover: monitor.isOver(),\r\n          offset: monitor.getDifferenceFromInitialOffset()\r\n      })\r\n    });\r\n\r\n  const [{sourceId, isItemDragging}, dragItemSource] = useDrag({\r\n      type: 'sortedIngredient',\r\n      item: item,\r\n      collect: monitor => ({\r\n          sourceId: monitor.getHandlerId(),\r\n          isItemDragging: monitor.isDragging()\r\n      }),\r\n      end(item, monitor) {\r\n        // reorder only, not for new ingredients\r\n        if(monitor.didDrop() && monitor.getDropResult<IDraggedItem>() !== null) {            \r\n          dispatch(moveMiddleItem({\r\n            oldIndex: index,\r\n            newIndex: monitor.getDropResult<IDraggedItem>()?.index || 0\r\n          }));\r\n        }\r\n      }\r\n  });\r\n\r\n  const handleItemDelete = (itemId: string, index: number) => {   \r\n    dispatch(deleteMiddleItem(index));\r\n    dispatch(decreaseQuantityValue(itemId));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(!!offset) {\r\n      setIsItemHigher(offset.y < 0);\r\n      setIsItemLower(offset.y > 0);    \r\n    }\r\n  }, [offset]);\r\n\r\n  dragItemSource(dropItemTarget(dndItemRef))\r\n\r\n  return (\r\n      <>\r\n        <li \r\n            className={\r\n                `${draggableConstructorElementStyles.draggable_list_item}\r\n                ${isItemDragging ? draggableConstructorElementStyles.dragged : null}\r\n                ${isItemHover && isItemHigher ? (\r\n                  draggableConstructorElementStyles.pushedUp\r\n                  ) : isItemHover && isItemLower ? (\r\n                    draggableConstructorElementStyles.pushedDown\r\n                  ) : null }`\r\n                }\r\n            ref={dndItemRef}\r\n            data-source-id={sourceId}\r\n            data-target-id={targetId}\r\n        >\r\n            <span className={draggableConstructorElementStyles.drag_icon}>\r\n                <DragIcon type='primary' />\r\n            </span>\r\n            {\r\n              !!item.name &&\r\n              !!item.image &&\r\n              !!item.price &&\r\n              <ConstructorElement \r\n                  text={item.name}\r\n                  thumbnail={item.image}\r\n                  price={item.price}\r\n                  handleClose={() => \r\n                    !!item._id && handleItemDelete(item._id, index)\r\n                  }\r\n              />\r\n            }\r\n        </li>\r\n      </>\r\n  ) \r\n}\r\n\r\nexport default DraggableConstructorElement\r\n","import { ICookieProps } from './types'\r\n\r\nconst getDaysFromToday = (dateTime: Date): number => {\r\n  const MILLISECONDS_PER_DAY: number = 1000 * 60 * 60 * 24;\r\n  const today: Date = new Date(Date.now());\r\n\r\n  // discard the time and time-zone information.\r\n  const utcDateTime: number = Date.UTC (\r\n    dateTime.getFullYear(),\r\n    dateTime.getMonth(),\r\n    dateTime.getDate()\r\n  );\r\n  const utcToday: number = Date.UTC (\r\n    today.getFullYear(),\r\n    today.getMonth(),\r\n    today.getDate()\r\n  );\r\n\r\n  return Math.floor((utcToday - utcDateTime) / MILLISECONDS_PER_DAY);\r\n}\r\n\r\nexport const formatDateTime = (time: string): string => {\r\n  const dateTime: Date = new Date(time);\r\n  const daysFromToday: number = getDaysFromToday(dateTime);\r\n\r\n  const getPluralDayForm = (n: number): string => (\r\n    (n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)) ?\r\n      'дня' : 'дней'\r\n  );\r\n  \r\n  const day: string = (\r\n    daysFromToday === 0 ?\r\n      'Сегодня' :\r\n      daysFromToday === 1 ?\r\n        'Вчера' : \r\n        `${daysFromToday} ${getPluralDayForm(daysFromToday)} назад`\r\n  );\r\n  const hours: string = dateTime.getHours().toString().padStart(2, '0');\r\n  const mins: string = dateTime.getMinutes().toString().padStart(2, '0');\r\n  const timeZone: string = new Intl.NumberFormat(\"ru-RU\", {\r\n    // always display the plus sign\r\n    signDisplay: \"exceptZero\"\r\n  }).format(\r\n    0 - dateTime.getTimezoneOffset() / 60\r\n  );\r\n\r\n  return (`${day}, ${hours}:${mins} i-GMT${timeZone}`);\r\n}\r\n\r\nexport function getCookie(name: string): string {\r\n  const matches: RegExpMatchArray | null = document.cookie.match(\r\n    new RegExp('(?:^|; )' + name.replace(/([$?*|{}\\]\\\\^])/g, '\\\\$1') + '=([^;]*)')\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : '';\r\n}\r\n\r\nexport function setCookie(\r\n  name: string,\r\n  value: string | number | boolean,\r\n  props: ICookieProps = {}\r\n): void {\r\n  if (typeof props.expires == 'number' && props.expires) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + props.expires * 1000);\r\n    props.expires = d;\r\n  }\r\n  if (props.expires instanceof Date && props.expires) {\r\n    props.expires = props.expires.toUTCString();\r\n  }\r\n  const cookieValue: string = encodeURIComponent(value);\r\n  let updatedCookie: string = name + '=' + cookieValue;\r\n  let propName: keyof ICookieProps;\r\n  for (propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string): void {\r\n  setCookie(name, '', { path: '/', expires: -1 });\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\ninterface wsState {\r\n  wsConnected: boolean,\r\n  wsError: boolean\r\n}\r\n\r\nconst initialState: wsState = {\r\n  wsConnected: false,\r\n  wsError: false\r\n}\r\n\r\nexport const wsSlice = createSlice({\r\n  name: 'ws',\r\n  initialState,\r\n  reducers: {\r\n    wsConnectionStart(state, action: PayloadAction<{url: string, token?: string}>) {},\r\n\r\n    wsConnectionStop(state) {\r\n      state.wsConnected = false;\r\n      state.wsError = false;\r\n    },\r\n\r\n    wsConnectionSuccess(state) {\r\n      state.wsConnected = true;\r\n      state.wsError = false;\r\n    },\r\n\r\n    wsConnectionError(state) {\r\n      state.wsConnected = false;\r\n      state.wsError = true;\r\n    },\r\n\r\n    wsConnectionClosed(state) {\r\n      state.wsConnected = false;\r\n      state.wsError = false;\r\n    }\r\n  }\r\n}) \r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { IOrder } from '../types'\r\nimport { useAppDispatch } from '../hooks'\r\nimport { wsSlice } from './websocket';\r\nimport { ALL_ORDERS_WS_URL } from '../constants';\r\n\r\nexport const startFeed = () => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(wsSlice.actions.wsConnectionStart({ url: ALL_ORDERS_WS_URL }));\r\n    dispatch(feedSlice.actions.request());\r\n  }\r\n}\r\n\r\nexport const stopFeed = () => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(wsSlice.actions.wsConnectionStop());\r\n  }\r\n}\r\n\r\n// for some reason in profile page orders came up sorted backwards in time\r\nconst sortOrdersByDate = (orders: Array<IOrder>): Array<IOrder> => {\r\n  orders.sort(function(a: IOrder, b: IOrder): number {\r\n    if (!!a.updatedAt && !!b.updatedAt) {\r\n      const keyA: Date = new Date(a.updatedAt);\r\n      const keyB: Date = new Date(b.updatedAt);\r\n      return keyB.valueOf() - keyA.valueOf();\r\n    }\r\n    else return 0;\r\n  });\r\n  return orders;\r\n}\r\n\r\ninterface feedState {\r\n  orders: Array<IOrder>,\r\n  feedRequest: boolean,\r\n  feedFailed: boolean,\r\n  feedSuccess: boolean,\r\n  ordersTotal: number,\r\n  ordersTotalToday: number\r\n}\r\n\r\nconst initialState: feedState = {\r\n  orders: [],\r\n  feedRequest: false,\r\n  feedFailed: false,\r\n  feedSuccess: false,\r\n  ordersTotal: 0,\r\n  ordersTotalToday: 0\r\n}\r\n\r\nexport const feedSlice = createSlice({\r\n  name: 'feed',\r\n  initialState,\r\n  reducers: {\r\n    request(state) {\r\n      state.feedRequest = true;\r\n      state.feedFailed = false;\r\n      state.feedSuccess = false;\r\n    },\r\n    failed(state) {\r\n      state.feedFailed = true;\r\n      state.feedRequest = false;\r\n      state.feedSuccess = false;\r\n    },\r\n    success(state) {\r\n      state.feedSuccess = true;\r\n      state.feedRequest = false;\r\n      state.feedFailed = false;\r\n    },\r\n    setOrdersData(state, action: PayloadAction<{\r\n      orders: Array<IOrder>,\r\n      total: number,\r\n      totalToday: number\r\n    }>) {\r\n      state.orders = sortOrdersByDate(action.payload.orders);\r\n      state.ordersTotal = action.payload.total;\r\n      state.ordersTotalToday = action.payload.totalToday;\r\n    }\r\n  }\r\n}) \r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { useAppDispatch } from '../hooks'\r\nimport { IUser } from '../types'\r\nimport { LOGIN_API_URL } from \"../constants\";\r\nimport { REGISTER_API_URL } from \"../constants\";\r\nimport { FORGOT_PASSWORD_API_URL } from \"../constants\";\r\nimport { RESET_PASSWORD_API_URL } from \"../constants\";\r\nimport { LOGOUT_API_URL } from \"../constants\";\r\nimport { TOKEN_API_URL } from \"../constants\";\r\nimport { USER_API_URL } from \"../constants\";\r\nimport { wsSlice } from './websocket';\r\nimport { USER_ORDERS_WS_URL } from '../constants';\r\nimport { getCookie, setCookie, deleteCookie } from '../utils';\r\nimport { feedSlice } from './feed';\r\n\r\ntype TRedirectCallback = () => void;\r\n\r\nexport const getUser = () => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    const accessToken: string = getCookie('accessToken') || '';\r\n\r\n    const userRequestHeaders: Headers = new Headers();\r\n    userRequestHeaders.append('Content-Type', 'application/json');\r\n    userRequestHeaders.append('Authorization', accessToken);\r\n\r\n    dispatch(userSlice.actions.request());\r\n    // get user data from the API\r\n    fetch(USER_API_URL, {\r\n      method: 'GET',\r\n      headers: userRequestHeaders\r\n    })\r\n    .then(res => {\r\n      if (!res.ok && res.status >= 500) {\r\n        throw Error(res.statusText);\r\n        }\r\n      return res.json();\r\n      })\r\n    .then((data) => {\r\n      if (data.success === true) {\r\n        dispatch(userSlice.actions.setName(data.user.name));\r\n        dispatch(userSlice.actions.setEmail(data.user.email));\r\n\r\n        dispatch(userSlice.actions.setAuthorization(true));\r\n\r\n        dispatch(userSlice.actions.success());\r\n      }\r\n      else if (data.message === 'You should be authorised') {\r\n        // force redirect to login page\r\n        dispatch(userSlice.actions.setAuthorization(false));\r\n        dispatch(userSlice.actions.success());\r\n      }\r\n      else if (data.message === 'jwt expired') {\r\n        refreshToken()\r\n        .then((refresh_res) => {\r\n          if (!refresh_res.ok && refresh_res.status >= 500) {\r\n            throw Error(refresh_res.statusText);\r\n          }\r\n          return refresh_res.json();\r\n        })\r\n        .then((refresh_data) => {\r\n          if (refresh_data.success === true) {\r\n            setCookie('accessToken', refresh_data.accessToken, { path: '/' });\r\n            setCookie('refreshToken', refresh_data.refreshToken, { path: '/' });\r\n            \r\n            userRequestHeaders.delete('Authorization');\r\n            userRequestHeaders.append('Authorization', refresh_data.accessToken || '');\r\n            \r\n            fetch(USER_API_URL, {\r\n              method: 'GET',\r\n              headers: userRequestHeaders\r\n            })\r\n            .then(res => {\r\n              if (!res.ok && res.status >= 500) {\r\n                throw Error(res.statusText);\r\n                }\r\n              return res.json();\r\n              })\r\n            .then((data) => {\r\n              if (data.success) {\r\n                dispatch(userSlice.actions.setName(data.user.name));\r\n                dispatch(userSlice.actions.setEmail(data.user.email));\r\n                \r\n                dispatch(userSlice.actions.setAuthorization(true));\r\n\r\n                dispatch(userSlice.actions.success());\r\n              }\r\n              else if (data.message === 'You should be authorised') {\r\n                // force redirect to login page\r\n                dispatch(userSlice.actions.setAuthorization(false));\r\n                dispatch(userSlice.actions.success());\r\n              }\r\n              else {\r\n                throw Error(data.message);\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              dispatch(userSlice.actions.setAuthorization(false));\r\n              dispatch(userSlice.actions.failed())\r\n              console.log(error);\r\n            })\r\n          }\r\n          else {\r\n            throw Error(refresh_data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          dispatch(userSlice.actions.setAuthorization(false));\r\n          dispatch(userSlice.actions.failed())\r\n          console.log(error);\r\n        });\r\n      }\r\n      else {\r\n        throw Error(data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(userSlice.actions.setAuthorization(false));\r\n      dispatch(userSlice.actions.failed())\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n\r\nexport const setUser = (user: IUser) => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    const accessToken: string = getCookie('accessToken') || '';\r\n\r\n    const userRequestHeaders: Headers = new Headers();\r\n    userRequestHeaders.append('Content-Type', 'application/json');\r\n    userRequestHeaders.append('Authorization', accessToken);\r\n\r\n    dispatch(userSlice.actions.request());\r\n    // get user data from the API\r\n    fetch(USER_API_URL, {\r\n      method: 'PATCH',\r\n      headers: userRequestHeaders,\r\n      body: JSON.stringify({\r\n        \"email\": user.email,\r\n        \"password\": user.password,\r\n        \"name\": user.name,\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (!res.ok && res.status >= 500) {\r\n        throw Error(res.statusText);\r\n        }\r\n      return res.json();\r\n      })\r\n    .then((data) => {\r\n      if (data.success === true) {\r\n        dispatch(userSlice.actions.setName(data.user.name));\r\n        dispatch(userSlice.actions.setEmail(data.user.email));\r\n        dispatch(userSlice.actions.success());\r\n      }\r\n      else if (data.message === 'jwt expired') {\r\n        refreshToken()\r\n        .then((refresh_res) => {\r\n          if (!refresh_res.ok && refresh_res.status >= 500) {\r\n            throw Error(refresh_res.statusText);\r\n          }\r\n          return refresh_res.json();\r\n        })\r\n        .then((refresh_data) => {\r\n          if (refresh_data.success === true) {\r\n            setCookie('accessToken', refresh_data.accessToken, { path: '/' });\r\n            setCookie('refreshToken', refresh_data.refreshToken, { path: '/' });\r\n            \r\n            userRequestHeaders.delete('Authorization');\r\n            userRequestHeaders.append('Authorization', refresh_data.accessToken || '');\r\n            \r\n            fetch(USER_API_URL, {\r\n              method: 'GET',\r\n              headers: userRequestHeaders,\r\n              body: JSON.stringify({\r\n                \"email\": user.email,\r\n                \"password\": user.password,\r\n                \"name\": user.name,\r\n              })\r\n            })\r\n            .then(res => {\r\n              if (!res.ok && res.status >= 500) {\r\n                throw Error(res.statusText);\r\n                }\r\n              return res.json();\r\n              })\r\n            .then((data) => {\r\n              if (data.success) {\r\n                dispatch(userSlice.actions.setName(data.user.name));\r\n                dispatch(userSlice.actions.setEmail(data.user.email));\r\n                dispatch(userSlice.actions.success());\r\n              }\r\n              else {\r\n                throw Error(data.message);\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              dispatch(userSlice.actions.failed())\r\n              console.log(error);\r\n            })\r\n          }\r\n          else {\r\n            throw Error(refresh_data.message);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          dispatch(userSlice.actions.failed())\r\n          console.log(error);\r\n        });\r\n      }\r\n      else {\r\n        throw Error(data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(userSlice.actions.failed())\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n\r\nexport const register = (user: IUser, redirectCallback: TRedirectCallback) => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(userSlice.actions.request());\r\n    // send user data to the API\r\n    fetch(REGISTER_API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \"email\": user.email,\r\n        \"password\": user.password,\r\n        \"name\": user.name,\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (!res.ok && res.status >= 500) {\r\n        throw Error(res.statusText);\r\n        }\r\n      return res.json();\r\n      })\r\n    .then((data) => {\r\n      if (data.success) {\r\n        dispatch(userSlice.actions.setEmail(data.user.email));\r\n        dispatch(userSlice.actions.setName(data.user.name));\r\n\r\n        setCookie('accessToken', data.accessToken, { path: '/' });\r\n        setCookie('refreshToken', data.refreshToken, { path: '/' });\r\n\r\n        dispatch(userSlice.actions.setAuthorization(true));\r\n        dispatch(userSlice.actions.success());\r\n        redirectCallback();\r\n      }\r\n      else {\r\n        throw Error(data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(userSlice.actions.setAuthorization(false));\r\n      dispatch(userSlice.actions.failed())\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n\r\nexport const login = (user: IUser, redirectCallback: TRedirectCallback) => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(userSlice.actions.request());\r\n    // send user data to the API\r\n    fetch(LOGIN_API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \"email\": user.email,\r\n        \"password\": user.password\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (!res.ok && res.status >= 500) {\r\n        throw Error(res.statusText);\r\n        }\r\n      return res.json();\r\n      })\r\n    .then((data) => {\r\n      if (data.success) {\r\n        dispatch(userSlice.actions.setEmail(data.user.email));\r\n        dispatch(userSlice.actions.setName(data.user.name));\r\n\r\n        setCookie('accessToken', data.accessToken, { path: '/' });\r\n        setCookie('refreshToken', data.refreshToken, { path: '/' });\r\n\r\n        dispatch(userSlice.actions.setAuthorization(true));\r\n        dispatch(userSlice.actions.success());\r\n        redirectCallback();\r\n      }\r\n      else {\r\n        throw Error(data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(userSlice.actions.setAuthorization(false));\r\n      dispatch(userSlice.actions.failed())\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n\r\nexport const forgotPassword = (\r\n  email: string,\r\n  redirectCallback: TRedirectCallback\r\n) => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(userSlice.actions.request());\r\n    // send user data to the API\r\n    fetch(FORGOT_PASSWORD_API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \"email\": email\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (!res.ok && res.status >= 500) {\r\n        throw Error(res.statusText);\r\n        }\r\n      return res.json();\r\n      })\r\n    .then((data) => {\r\n      if (data.success) {\r\n        dispatch(userSlice.actions.success());\r\n        redirectCallback();\r\n      }\r\n      else {\r\n        throw Error(data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(userSlice.actions.failed())\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n\r\nexport const resetPassword = (\r\n  code: string,\r\n  password: string,\r\n  redirectCallback: TRedirectCallback\r\n) => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(userSlice.actions.request());\r\n    // send user data to the API\r\n    fetch(RESET_PASSWORD_API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \"password\": password,\r\n        \"token\": code\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (!res.ok && res.status >= 500) {\r\n        throw Error(res.statusText);\r\n        }\r\n      return res.json();\r\n      })\r\n    .then((data) => {\r\n      if (data.success) {\r\n        dispatch(userSlice.actions.success());\r\n        redirectCallback();\r\n      }\r\n      else {\r\n        throw Error(data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(userSlice.actions.failed())\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(userSlice.actions.request());\r\n    fetch(LOGOUT_API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \"token\": getCookie('refreshToken')\r\n      })\r\n    })\r\n    .then(res => {\r\n      if (!res.ok && res.status >= 500) {\r\n        throw Error(res.statusText);\r\n        }\r\n      return res.json();\r\n      })\r\n    .then((data) => {\r\n      if (data.success) {\r\n        deleteCookie('accessToken');\r\n        deleteCookie('refreshToken');\r\n  \r\n        dispatch(userSlice.actions.resetUserData());\r\n\r\n        dispatch(userSlice.actions.setAuthorization(false));\r\n        dispatch(userSlice.actions.success());\r\n      }\r\n      else {\r\n        throw Error(data.message);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(userSlice.actions.failed())\r\n      console.log(error);\r\n    })\r\n  }\r\n}\r\n\r\nexport const refreshToken = () => {\r\n  return fetch(TOKEN_API_URL, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      \"token\": getCookie('refreshToken')\r\n    })\r\n  })\r\n}\r\n\r\nexport const startHistory = () => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(wsSlice.actions.wsConnectionStart({\r\n      url: USER_ORDERS_WS_URL,\r\n      token: (getCookie('accessToken') || '').replace('Bearer ', '')\r\n    }));\r\n    // saving user orders in feedSlice\r\n    dispatch(feedSlice.actions.request());\r\n  }\r\n}\r\n\r\nexport const stopHistory = () => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(wsSlice.actions.wsConnectionStop());\r\n  }\r\n}\r\n\r\n// TODO: get password hash from server\r\nconst fakePassword: string = '123456';\r\n\r\ninterface userState {\r\n  user: IUser,\r\n  userRequest: boolean,\r\n  userFailed: boolean,\r\n  userSuccess: boolean,\r\n  isAuthorized: boolean\r\n}\r\n\r\nconst initialState: userState = {\r\n  user: {\r\n    password: fakePassword,\r\n  },\r\n  userRequest: false,\r\n  userFailed: false,\r\n  userSuccess: false,\r\n  isAuthorized: false\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    request(state) {\r\n      state.userRequest = true;\r\n      state.userFailed = false;\r\n      state.userSuccess = false;\r\n    },\r\n    failed(state) {\r\n      state.userFailed = true;\r\n      state.userRequest = false;\r\n      state.userSuccess = false;\r\n    },\r\n    success(state) {\r\n      state.userSuccess = true;\r\n      state.userRequest = false;\r\n      state.userFailed = false;\r\n    },\r\n    setName(state, action: PayloadAction<string>) {\r\n      state.user = {\r\n        ...state.user,\r\n        name: action.payload\r\n        }\r\n    },\r\n    setPassword(state, action: PayloadAction<string>) {\r\n      state.user = {\r\n        ...state.user,\r\n        password: action.payload\r\n        }\r\n    },\r\n    setEmail(state, action: PayloadAction<string>) {\r\n      state.user = {\r\n        ...state.user,\r\n        email: action.payload\r\n      }\r\n    },\r\n    resetStatus(state) {\r\n      // resetting only errors\r\n      state.userFailed = false;\r\n    },\r\n    resetUserData(state) {\r\n      state.user.name = '';\r\n      state.user.email = '';\r\n      // TODO: get password hash from server\r\n      state.user.password = fakePassword;\r\n    },\r\n    setAuthorization(state, action: PayloadAction<boolean>) {\r\n      state.isAuthorized = action.payload;\r\n    },\r\n    checkAuthorization(state) {\r\n      state.isAuthorized = ((getCookie('accessToken') !== '') &&\r\n        (getCookie('refreshToken') !== ''));\r\n    }\r\n  }\r\n}) \r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { useAppDispatch } from '../hooks'\r\nimport { INewOrder } from '../types'\r\nimport { ORDER_API_URL } from \"../constants\";\r\nimport { burgerConstructorSlice } from './burger-constructor';\r\nimport { itemsSlice } from './items';\r\nimport { setCookie, getCookie } from '../utils';\r\nimport { refreshToken } from './user';\r\n\r\nexport const placeOrder = (items: Array<string>) => {\r\n  return (dispatch = useAppDispatch()) => {\r\n    dispatch(orderSlice.actions.request());\r\n\r\n    // show modal right from request start to show loader\r\n    dispatch(orderSlice.actions.openOrderModal());\r\n    \r\n    // get new order ID from API:\r\n    fetch(ORDER_API_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: getCookie('accessToken')\r\n      },\r\n      body: JSON.stringify({\r\n        \"ingredients\": items\r\n      })\r\n    })\r\n      .then(res => {\r\n        if (!res.ok && res.status >= 500) {\r\n          throw Error(res.statusText);\r\n          }\r\n        return res.json();\r\n        })\r\n      .then((data) => {\r\n        if (data.success) {\r\n          dispatch(orderSlice.actions.success({\r\n            name: data.name,\r\n            number: data.order.number,\r\n            success: data.success\r\n          }))\r\n        }\r\n        // if accessToken has gone stale we're need to refresh it first\r\n        else if (data.message && data.message === 'jwt expired') {\r\n          dispatch(orderSlice.actions.request());\r\n          refreshToken()\r\n          .then((refresh_res) => {\r\n            if (!refresh_res.ok && refresh_res.status >= 500) {\r\n              throw Error(refresh_res.statusText);\r\n            }\r\n            return refresh_res.json();\r\n          })\r\n          .then((refresh_data) => {\r\n            if (refresh_data.success === true) {\r\n              setCookie('accessToken', refresh_data.accessToken, { path: '/' });\r\n              setCookie('refreshToken', refresh_data.refreshToken, { path: '/' });\r\n              dispatch(orderSlice.actions.request());\r\n              fetch(ORDER_API_URL, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                  Authorization: getCookie('accessToken')\r\n                },\r\n                body: JSON.stringify({\r\n                  \"ingredients\": items\r\n                })\r\n              })\r\n              .then(res => {\r\n                if (!res.ok && res.status >= 500) {\r\n                  throw Error(res.statusText);\r\n                  }\r\n                return res.json();\r\n                })\r\n              .then((data) => {\r\n                if (data.success) {\r\n                  dispatch(orderSlice.actions.success({\r\n                    name: data.name,\r\n                    number: data.order.number,\r\n                    success: data.success\r\n                  }))\r\n                }\r\n                else {\r\n                  throw Error(data.message);\r\n                }\r\n              })\r\n              .catch((error) => {\r\n                dispatch(orderSlice.actions.failed());\r\n                console.log(error);\r\n              })\r\n            }\r\n            else {\r\n              throw Error(refresh_data.message);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            dispatch(orderSlice.actions.failed());\r\n            console.log(error);\r\n          });\r\n        }\r\n        else {\r\n          throw Error(data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(orderSlice.actions.failed());\r\n        console.log(error);\r\n      })\r\n     .finally(() => {\r\n        // clearing ordered ingredients from BurgerConstructor\r\n        dispatch(burgerConstructorSlice.actions.setBunItem({}));\r\n        dispatch(burgerConstructorSlice.actions.clearMiddleItems());\r\n        dispatch(itemsSlice.actions.clearValues());\r\n      })\r\n  }\r\n}\r\n\r\ninterface orderState {\r\n  orderData: INewOrder,\r\n  orderRequest: boolean,\r\n  orderFailed: boolean,\r\n  orderSuccess: boolean,\r\n  isOrderModalOpen: boolean,\r\n}\r\n\r\nconst initialState: orderState = {\r\n  orderData: {},\r\n  orderRequest: false,\r\n  orderFailed: false,\r\n  orderSuccess: false,\r\n  isOrderModalOpen: false,\r\n}\r\n\r\nexport const orderSlice = createSlice({\r\n  name: 'order',\r\n  initialState,\r\n  reducers: {\r\n    request(state) {\r\n      state.orderRequest = true;\r\n      state.orderFailed = false;\r\n      state.orderSuccess = false;\r\n      state.orderData = {};\r\n    },\r\n    failed(state) {\r\n      state.orderFailed = true;\r\n      state.orderRequest = false;\r\n      state.orderSuccess = false;\r\n      state.orderData = {\r\n        success: false\r\n      }\r\n    },\r\n    success(state, action: PayloadAction<INewOrder>) {\r\n      state.orderSuccess = true;\r\n      state.orderRequest = false;\r\n      state.orderFailed = false;\r\n      state.orderData = {\r\n        name: action.payload.name,\r\n        id: action.payload.number,\r\n        success: action.payload.success\r\n      }\r\n    },\r\n    openOrderModal(state) {\r\n      state.isOrderModalOpen = true;\r\n    },\r\n    closeOrderModal(state) {\r\n      state.isOrderModalOpen = false;\r\n    }\r\n  }\r\n}) \r\n","import React, { useEffect } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport burgerConstructorStyles from './burger-constructor.module.css';\r\n// importing components from library\r\nimport { ConstructorElement, CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport DraggableConstructorElement from '../draggable-constructor-element/draggable-constructor-element';\r\nimport { placeOrder } from '../../services/slices/order';\r\nimport { burgerConstructorSlice } from '../../services/slices/burger-constructor';\r\nimport { itemsSlice } from '../../services/slices/items';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IIngredient } from '../../services/types';\r\n\r\nconst BurgerConstructor: React.FC = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { increaseQuantityValue, decreaseQuantityValue } = itemsSlice.actions;\r\n    const { setBunItem, calcTotalPrice } = burgerConstructorSlice.actions\r\n    const { bunItem, middleItems, totalPrice } = useAppSelector(state => state.burgerConstructor);\r\n    const { isAuthorized } = useAppSelector(state => state.user);\r\n\r\n    const history = useHistory();\r\n\r\n    const onOrderButtonClick = () => {\r\n        if (isAuthorized) {\r\n            if (!!bunItem._id) {\r\n                const items:Array<string> = [bunItem._id];\r\n                middleItems.map(item => \r\n                    item._id && items.push(item._id));\r\n                // get new order ID from API:\r\n                dispatch(placeOrder(items));\r\n            }\r\n        }\r\n        // redirect guests to login page\r\n        else {\r\n            history.replace({\r\n                pathname: '/login',\r\n                state: { from: '/' }\r\n            });\r\n        }\r\n      };\r\n\r\n    // recalculating total price\r\n    useEffect(() => {\r\n        dispatch(calcTotalPrice());\r\n    }, [dispatch, bunItem, middleItems, calcTotalPrice]);\r\n\r\n    const handleBunItemDrop = (newBunItem: IIngredient) => {\r\n        dispatch(setBunItem(newBunItem));\r\n        if (!!bunItem._id) {\r\n            dispatch(decreaseQuantityValue(bunItem._id));\r\n            dispatch(decreaseQuantityValue(bunItem._id));\r\n        }\r\n        if (!!newBunItem._id) {\r\n            dispatch(increaseQuantityValue(newBunItem._id));\r\n            dispatch(increaseQuantityValue(newBunItem._id));\r\n        }\r\n    };\r\n\r\n    // Buns can be only be of one type\r\n    // (user can't choose different buns for top and bottom)\r\n    const [, dropTopBunTarget] = useDrop({\r\n        accept: 'bun',\r\n        drop(newBunItem: IIngredient) {\r\n            handleBunItemDrop(newBunItem);\r\n        }\r\n      });\r\n    \r\n    const [, dropBottomBunTarget] = useDrop({\r\n        accept: 'bun',\r\n        drop(newBunItem: IIngredient) {\r\n            handleBunItemDrop(newBunItem);\r\n        }\r\n      });\r\n    \r\n    const [, dropMiddleItemTarget] = useDrop({\r\n        accept: ['sauce', 'main']\r\n      });\r\n\r\n    const generateItemHash = () => (\r\n        Math.floor(Math.random() * 10000)\r\n    );\r\n\r\n    return(\r\n        <>\r\n            <ul className={burgerConstructorStyles.burger_constructor_list + ' ml-4 mt-25 mb-10 pr-4'}>\r\n                <li className='pl-8' ref={dropTopBunTarget}>\r\n                    {!!bunItem.name ? (\r\n                        <ConstructorElement \r\n                            type='top'\r\n                            isLocked={true}\r\n                            text={bunItem.name + ' (верх)'}\r\n                            thumbnail={bunItem.image || ''}\r\n                            price={bunItem.price || 0}\r\n                        />\r\n                    ) : (\r\n                        <div \r\n                            className={\r\n                                burgerConstructorStyles.emptyBun +\r\n                                ' constructor-element constructor-element_pos_top'\r\n                            }\r\n                        >\r\n                            &nbsp;\r\n                        </div>\r\n                    )}\r\n                </li>\r\n                <li ref={dropMiddleItemTarget}>\r\n                    {/* when inner items aren't chosen, show warning message */}\r\n                    {(middleItems.length > 0 ?\r\n                        <ul \r\n                            className={burgerConstructorStyles.burger_constructor_draggable_list + ' pr-2'}\r\n                            key='middle_items'\r\n                        >\r\n                            {middleItems.map((item, index) => (\r\n                                <DraggableConstructorElement \r\n                                    item={item}\r\n                                    index={index}\r\n                                    // key should have random generated hash or timestamp added to '_id'\r\n                                    key={(item._id || '')+generateItemHash()}\r\n                                />\r\n                            ))}\r\n                        </ul>\r\n                    : \r\n                        <h3 \r\n                            className={burgerConstructorStyles.warningText + \r\n                            ' text text_type_main-default text_color_inactive pt-6 pb-6'}\r\n                            \r\n                        >\r\n                            {totalPrice === 0 ? (\r\n                                'Добавьте булку и ингредиенты'\r\n                            ) : (\r\n                                'Добавьте ингредиенты'\r\n                            )}\r\n                        </h3>\r\n                    )}\r\n                </li>\r\n                <li className='pl-8' ref={dropBottomBunTarget}>\r\n                    {!!bunItem.name ? (\r\n                        <ConstructorElement \r\n                            isLocked={true}\r\n                            type='bottom'\r\n                            text={bunItem.name + ' (низ)'}\r\n                            thumbnail={bunItem.image || ''}\r\n                            price={bunItem.price || 0}\r\n                        />\r\n                    ) : (\r\n                        <div \r\n                            className={\r\n                                burgerConstructorStyles.emptyBun +\r\n                                ' constructor-element constructor-element_pos_bottom'\r\n                            }\r\n                        >\r\n                            &nbsp;\r\n                        </div>\r\n                    )}\r\n                </li>\r\n            </ul>\r\n            <div className={\r\n                    `${burgerConstructorStyles.burger_constructor_order}\r\n                    mr-4 mb-10\r\n                    ${!bunItem.name ? burgerConstructorStyles.disabled : null}`\r\n                }\r\n            >\r\n                <p className='text text_type_digits-medium'>\r\n                    {totalPrice}\r\n                </p>\r\n                <span className='ml-2 mr-10'>\r\n                    <CurrencyIcon type='primary' />\r\n                </span>\r\n                <Button \r\n                    type=\"primary\"\r\n                    size=\"medium\"\r\n                    onClick={bunItem.name ? onOrderButtonClick : () => {}}\r\n                >\r\n                        Оформить заказ\r\n                </Button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BurgerConstructor;\r\n","import { memo } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppDispatch } from '../../services/hooks';\r\nimport { useDrag } from 'react-dnd';\r\nimport burgerIngredientsCardStyles from './burger-ingredients-card.module.css';\r\n// importing components from library\r\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { burgerConstructorSlice } from '../../services/slices/burger-constructor';\r\nimport { itemsSlice } from '../../services/slices/items';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IIngredient } from '../../services/types';\r\n\r\nconst BurgerIngredientsCard = memo<IIngredient>(\r\n    ( item ) => {\r\n    const dispatch = useAppDispatch();\r\n    const { increaseQuantityValue } = itemsSlice.actions;\r\n    const { addMiddleItem } = burgerConstructorSlice.actions\r\n    \r\n    const history = useHistory();\r\n\r\n    const handleIngredientClick = () => {\r\n        history.replace({ \r\n            pathname: `/ingredients/${item._id}`,\r\n            state: { background: history.location }\r\n        });\r\n    }\r\n\r\n    const [{opacity}, dragRef] = useDrag({\r\n        type: item.type || '',\r\n        item: item,\r\n        collect: monitor => ({\r\n          opacity: monitor.isDragging() ? 0.5 : 1\r\n        }),\r\n        end(item, monitor) {\r\n            // adding only new ingredients, not when reorder items in Constructor\r\n            if(monitor.didDrop() && item.type !== 'bun' && !!item._id) {\r\n                dispatch(addMiddleItem(item));\r\n                dispatch(increaseQuantityValue(item._id));\r\n            }\r\n        }\r\n      });\r\n    \r\n    return(\r\n        <li>\r\n            <div \r\n                className={burgerIngredientsCardStyles.ingredient_card} \r\n                onClick={handleIngredientClick} \r\n                ref={dragRef}\r\n                style={{opacity}}\r\n            >\r\n                {item.__v ? <Counter count={item.__v}/> : null}\r\n                <img src={item.image} alt={item.name} title={item.name} className=\"ml-4 mr-4\"/>\r\n                    <div className={'flex_row mt-1 mb-1 '}>\r\n                        <p className='pr-2 text text_type_digits-default'>{item.price}</p>\r\n                        <CurrencyIcon type='primary'/>\r\n                    </div>\r\n                <p className={burgerIngredientsCardStyles.ingredient_name + ' text text_type_main-default'}>\r\n                    {item.name}\r\n                </p>\r\n            </div>\r\n        </li>\r\n    );\r\n});\r\n\r\nexport default BurgerIngredientsCard;\r\n","import { forwardRef } from 'react';\r\nimport burgerIngredientsCategoryStyles from './burger-ingredients-category.module.css';\r\n// importing components from project\r\nimport BurgerIngredientsCard from '../burger-ingredients-card/burger-ingredients-card';\r\nimport { IIngredient } from '../../services/types';\r\n\r\ninterface IIngredientCategory {\r\n    heading: string,\r\n    categoryId: string,\r\n    items: Array<IIngredient>\r\n}\r\n\r\nconst BurgerIngredientsCategory = forwardRef<HTMLElement, IIngredientCategory>(\r\n    (props, ref) => (\r\n    <section id={props.categoryId} ref={ref}>\r\n        <h2 className=\"text text_type_main-medium pt-10 mb-6\">\r\n            {props.heading}\r\n        </h2>\r\n        {/* when items aren't received, show 'Empty category' message */}\r\n        {(props.items.length > 0 ? \r\n            <ul className={burgerIngredientsCategoryStyles.burger_ingredients_list + ' ml-4 mt-6 mr-2 mb-10'}>\r\n                {props.items.map((item) => (\r\n                    <BurgerIngredientsCard\r\n                        key={item._id}\r\n                        {...item}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        : <h3 className='text text_type_main-default text_color_inactive pb-6'>\r\n                    Категория пуста\r\n            </h3>)}\r\n    </section>\r\n));\r\n\r\nexport default BurgerIngredientsCategory;\r\n","import { FC, useState, useEffect } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector} from '../../services/hooks';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport burgerIngredientsStyles from './burger-ingredients.module.css';\r\n// importing components from project\r\nimport BurgerIngredientsCategory from '../burger-ingredients-category/burger-ingredients-category';\r\n// importing components from library\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IInviewOptions {\r\n    threshold: number,\r\n    trackVisibility: boolean,\r\n    delay: number\r\n}\r\n\r\nconst BurgerIngredients: FC = () => {\r\n    const [current, setCurrent] = useState<string>('bun')\r\n    const { items } = useAppSelector(state => state.items);\r\n\r\n    const setTab = (tabName: string): void => {\r\n        setCurrent(tabName);\r\n        document.getElementById(tabName)?.scrollIntoView({behavior:\"smooth\"})\r\n    }\r\n    const handleBunTabClick = (): void => {\r\n        setTab('bun');\r\n    };\r\n    const handleSauceTabClick = (): void => {\r\n        setTab('sauce');\r\n    };\r\n    const handleMainTabClick = (): void => {\r\n        setTab('main');\r\n    };\r\n    \r\n    const inViewOptions: IInviewOptions = {\r\n        threshold: 0,\r\n        trackVisibility: true,\r\n        delay: 100\r\n    };\r\n    const [bunRef, inViewBun] = useInView(inViewOptions);\r\n    const [mainRef, inViewMain] = useInView(inViewOptions);\r\n    const [sauceRef, inViewSauce] = useInView(inViewOptions);\r\n\r\n    useEffect(() => {\r\n        if (inViewBun) {\r\n          setCurrent('bun');\r\n        }\r\n        else if (inViewSauce) {\r\n          setCurrent('sauce');\r\n        } \r\n        else if (inViewMain) {\r\n          setCurrent('main');\r\n        } \r\n      }, [inViewBun, inViewMain, inViewSauce]);\r\n\r\n    return(\r\n        <>\r\n            <h1 className=\"text text_type_main-large mt-10 mb-5\">\r\n                Соберите бургер\r\n            </h1>\r\n            <div className={burgerIngredientsStyles.tab_selector}>\r\n                <Tab \r\n                    active={current === 'bun'} \r\n                    onClick={handleBunTabClick}\r\n                    value='Булки'\r\n                >\r\n                    Булки\r\n                </Tab>\r\n                <Tab \r\n                    active={current === 'sauce'} \r\n                    onClick={handleSauceTabClick}\r\n                    value='Соусы'\r\n                >\r\n                    Соусы\r\n                </Tab>\r\n                <Tab \r\n                    active={current === 'main'} \r\n                    onClick={handleMainTabClick}\r\n                    value='Начинки'\r\n                >\r\n                    Начинки\r\n                </Tab>\r\n            </div>\r\n            <div \r\n                className={burgerIngredientsStyles.scroll_container} \r\n            >\r\n                <BurgerIngredientsCategory \r\n                    heading=\"Булки\"\r\n                    categoryId='bun'\r\n                    items={items.filter(item => item.type === 'bun')}\r\n                    ref={bunRef}\r\n                />\r\n                <BurgerIngredientsCategory \r\n                    heading=\"Соусы\"\r\n                    categoryId='sauce' \r\n                    items={items.filter(item => item.type === 'sauce')}\r\n                    ref={sauceRef}\r\n                />\r\n                <BurgerIngredientsCategory \r\n                    heading=\"Начинки\"\r\n                    categoryId='main'\r\n                    items={items.filter(item => item.type === 'main')}\r\n                    ref={mainRef}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default BurgerIngredients;\r\n","import { FC } from 'react';\r\nimport modalOverlayStyles from './modal-overlay.module.css';\r\n\r\ninterface IModalOverlay {\r\n    closeModal: () => void\r\n}\r\n\r\nconst ModalOverlay: FC<IModalOverlay> = ({ closeModal }) => {\r\n    return(\r\n            <div \r\n                className={modalOverlayStyles.modal_overlay}\r\n                onClick={closeModal}>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default ModalOverlay;\r\n","import { FC, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport modalStyles from './modal.module.css';\r\n// importing components from project\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\n// importing components from library\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nconst modalRoot = document.getElementById('modal-root') as HTMLElement;\r\n\r\ninterface IModal {\r\n    children: JSX.Element,\r\n    header: string | null,\r\n    closeModal: () => void,\r\n    isFancyCloseIcon?: boolean,\r\n    isOrderModal?: boolean\r\n}\r\n\r\nconst Modal: FC<IModal> = ({\r\n    children,\r\n    header,\r\n    closeModal,\r\n    isFancyCloseIcon=false,\r\n    isOrderModal=false\r\n}) => {\r\n    \r\n    // closing modals with the \"Esc\" key:\r\n    const handleEscKey = (e: KeyboardEvent): void => {\r\n        if (e.key === 'Escape') \r\n            closeModal();\r\n        e.stopImmediatePropagation();\r\n    }\r\n\r\n    // FIXME: for some reason keydown EventListener won't work with modalRoot or divs in modal body\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', handleEscKey);\r\n        return () => {\r\n            document.removeEventListener('keydown', handleEscKey);\r\n        };\r\n    }, []); \r\n\r\n    return ReactDOM.createPortal(\r\n        <>\r\n            <ModalOverlay closeModal={closeModal} />\r\n            <div className={modalStyles.modal_container + ' pl-10 pt-10 pr-10 pb-15'}>\r\n                <h3 className={\r\n                    `${modalStyles.modal_header} ${isOrderModal ? (\r\n                        'text text_type_digits-default'\r\n                    ) : (\r\n                        'text text_type_main-large'\r\n                    )}`\r\n                }>\r\n                    {header}\r\n                </h3>\r\n                {/* adding box-shadow only in OrderDetailsModal (as in Figma) */}\r\n                <span className={ `${modalStyles.close_icon} ${isFancyCloseIcon ? modalStyles.fancy_icon : null}` } >\r\n                    <CloseIcon onClick={closeModal} type='primary' />\r\n                </span>\r\n                {children}\r\n            </div>\r\n        </>, \r\n        modalRoot\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","export default __webpack_public_path__ + \"static/media/order-accepted.5cbcff83.gif\";","export default __webpack_public_path__ + \"static/media/logo.9edb13be.png\";","import { FC } from 'react';\r\nimport loaderStyles from './loader.module.css';\r\nimport logo from '../../images/logo.png';\r\n\r\nconst Loader: FC = () => {\r\n  return(\r\n    <div className={loaderStyles.loader}>\r\n      <img src={logo} alt='' title ='' className={loaderStyles.spinner} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import orderDetailsStyles from './order-details.module.css';\r\nimport orderAcceptedImage from '../../images/order-accepted.gif'\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport Loader from '../loader/loader';\r\nimport { FC } from 'react';\r\n\r\nconst OrderDetails: FC = () => {\r\n    const {\r\n        orderData,\r\n        orderRequest,\r\n        orderSuccess,\r\n        orderFailed\r\n      } = useAppSelector(\r\n        state => state.order\r\n      );\r\n\r\n    return(\r\n        <div className={orderDetailsStyles.order_details_container + ' mt-20 mb-15'}>\r\n            {\r\n                orderRequest && \r\n                !orderFailed && \r\n                !orderSuccess && (\r\n                <div className={orderDetailsStyles.loader_container}>\r\n                    <Loader />\r\n                </div>\r\n            )}\r\n            {\r\n                orderFailed && \r\n                !orderRequest && \r\n                !orderSuccess && (\r\n                <>\r\n                    <p className='text text_type_main-large'>\r\n                        Произошла ошибка\r\n                    </p>\r\n                    <p className='text text_type_main-default text_color_inactive mt-8 mb-15'>\r\n                        Пожалуйста, попробуйте оформить заказ позже\r\n                    </p>\r\n                </>\r\n            )}\r\n            {\r\n                orderSuccess && \r\n                !orderFailed && \r\n                !orderRequest && (\r\n                <>\r\n                    <p className={orderDetailsStyles.order_id + ' text text_type_digits-large'}>\r\n                        {orderData.id}\r\n                    </p>\r\n                    <p className='text text_type_main-medium mt-8 mb-15'>\r\n                        идентификатор заказа\r\n                    </p>\r\n                    <img \r\n                        // gif image will be played only once (not in loop)\r\n                        // random parameter at the end of gif url makes it play every time modal is open \r\n                        src={orderAcceptedImage + '?v=' + Math.floor(Math.random()*100)}\r\n                        alt=\"Заказ принят\"\r\n                        title=\"Заказ принят\"\r\n                        height=\"120\"\r\n                    />\r\n                    <p className='text text_type_main-default mt-15 mb-2'>\r\n                        Ваш заказ начали готовить\r\n                    </p>\r\n                    <p className='text text_type_main-default text_color_inactive'>\r\n                        Дождитесь готовности на орбитальной станции\r\n                    </p>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrderDetails;\r\n","import styles from './home.module.css';\r\n// importing components from project\r\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\r\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\r\nimport Modal from '../components/modal/modal';\r\nimport OrderDetails from '../components/order-details/order-details';\r\nimport Loader from '../components/loader/loader';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { FC, useEffect } from \"react\";\r\n// import slices and their functions\r\nimport { orderSlice } from '../services/slices/order';\r\nimport { userSlice } from '../services/slices/user';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { DndProvider } from 'react-dnd';\r\n\r\nconst HomePage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { closeOrderModal } = orderSlice.actions;\r\n  const { checkAuthorization } = userSlice.actions;\r\n\r\n  const {\r\n    itemsRequest,\r\n    itemsSuccess,\r\n    itemsFailed\r\n  } = useAppSelector(\r\n    state => state.items\r\n  );\r\n\r\n  const {\r\n    isOrderModalOpen\r\n  } = useAppSelector(\r\n    state => state.order\r\n  );\r\n\r\n    const closeModal = () => {\r\n      dispatch(closeOrderModal());\r\n    };\r\n\r\n  useEffect(() => {\r\n    // check cookies with tokens for correct order placement of authorized user\r\n    dispatch(checkAuthorization());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n        {\r\n          itemsFailed && \r\n          !itemsRequest && \r\n          !itemsSuccess && (\r\n            <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\r\n              Ошибка загрузки\r\n            </h2>\r\n        )}\r\n        {\r\n          itemsRequest && \r\n          !itemsFailed && \r\n          !itemsSuccess && (\r\n            <Loader />\r\n        )}\r\n        {\r\n          itemsSuccess && \r\n          !itemsFailed && \r\n          !itemsRequest && (\r\n            <div className={styles.container}>\r\n              <DndProvider backend={HTML5Backend}>\r\n                <section className={styles.container_left + ' mr-5'}>\r\n                  <BurgerIngredients />\r\n                </section>\r\n                <section className={styles.container_right + ' ml-5'}>\r\n                  <BurgerConstructor />\r\n                </section>\r\n              </DndProvider>\r\n            </div>\r\n        )}\r\n        {\r\n          isOrderModalOpen && (\r\n            <Modal \r\n              header={null}\r\n              closeModal={closeModal}\r\n              isFancyCloseIcon >\r\n                <OrderDetails />\r\n            </Modal>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import { FC, FormEventHandler } from 'react';\r\nimport formStyles from './form.module.css';\r\n// importing components from library\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IForm {\r\n  title?: string,\r\n  actionName?: string,\r\n  onFormSubmit?: FormEventHandler<HTMLFormElement>\r\n}\r\n\r\nconst Form: FC<IForm> = (props) => {\r\n  return(\r\n    <form\r\n      className={formStyles.form_container}\r\n      autoComplete=\"on\"\r\n      onSubmit={props.onFormSubmit}\r\n    >\r\n      {props.title &&\r\n        <label className=\"text text_type_main-medium\">\r\n          {props.title}\r\n        </label>\r\n      }\r\n      {props.children}\r\n      {\r\n        props.actionName &&\r\n          <Button type=\"primary\" size=\"medium\">\r\n            {props.actionName}\r\n          </Button>\r\n        }\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import { FC, useState, useRef, useCallback, useEffect, ChangeEvent, FormEvent } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\n// importing components from project\r\nimport Form from '../components/form/form';\r\nimport Loader from '../components/loader/loader';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\n// import slices and their functions\r\nimport { login, userSlice } from '../services/slices/user';\r\n\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { ILocation } from '../services/types';\r\n\r\nexport const LoginPage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n const {\r\n    userRequest,\r\n    userSuccess,\r\n    userFailed\r\n  } = useAppSelector(\r\n    state => state.user\r\n  );\r\n  const { resetStatus } = userSlice.actions;\r\n   \r\n  const history = useHistory();\r\n  const location = useLocation<ILocation>();\r\n\r\n  const resetError = (): void => {\r\n    dispatch(resetStatus());\r\n  }  \r\n\r\n  // reset status and errors on page load\r\n  useEffect(() => {\r\n    resetError();\r\n  }, [])\r\n\r\n  // TODO: rewrite form input vars to 'form' object fields\r\n  const [emailValue, setEmailValue] = useState<string>('');\r\n  const [isEmailValid, setEmailValid] = useState<boolean>(true);\r\n  const [passwordValue, setPasswordValue] = useState<string>('');\r\n  const [isPasswordEmpty, setPasswordEmpty] = useState<boolean>(false);\r\n\r\n  const emailInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const emailRegExp: RegExp = /.+@.+\\.[A-Za-z]+$/;\r\n\r\n  const onEmailChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // hide the error message if user writed correct email in the field\r\n    if (emailRegExp.test(e.target.value)) {\r\n      setEmailValid(true);\r\n    }\r\n    setEmailValue(e.target.value);\r\n  };\r\n  \r\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // TODO: find a way to trigger PasswordInput error status\r\n    if (e.target.value.length !== 0) {\r\n      setPasswordEmpty(false);\r\n    }\r\n    setPasswordValue(e.target.value);\r\n  };\r\n\r\n  // TODO: move form/inputs validation function to separate file in /utils?\r\n\r\n  interface IFormFields {\r\n    email: boolean,\r\n    password: boolean\r\n  }\r\n\r\n  const validateForm = useCallback((): boolean => {\r\n    // TODO: check is better be done when focus is out of input, before the form submit action\r\n  \r\n    const validFields: IFormFields = {\r\n      email: false,\r\n      password: false\r\n    }\r\n    \r\n    // performing email field check\r\n    if (!emailRegExp.test(emailValue)) {\r\n      setEmailValid(false);\r\n    }\r\n    else {\r\n      validFields.email = true;\r\n    }\r\n\r\n    // performing password field check    \r\n    if (passwordValue.length < 6) {\r\n      // TODO: find a way to trigger PasswordInput error status\r\n      if (passwordValue.length === 0) {\r\n        setPasswordEmpty(true);\r\n      }\r\n    }\r\n    else {\r\n      validFields.password = true;\r\n    }\r\n\r\n    if (validFields.email && validFields.password) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }, [emailValue, passwordValue]);\r\n\r\n  // FIXME: This callback is needed for redirecting in correct time\r\n  // (after userSuccess will be set)\r\n  // Async/await didn't worked in this case for some reason.\r\n  // Maybe CreateAsyncThunk should be used in userSlice?\r\n  const redirectOnSuccess = (): void => {\r\n    // redirecting to the page which unauthed user tried to reach\r\n    // in other cases redirect to HomePage\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n    history.replace(from);\r\n  }\r\n\r\n  const onLoginClick = useCallback((e: FormEvent<HTMLFormElement>): void => {\r\n      e.preventDefault();\r\n      const isFormCorrect: boolean = validateForm();\r\n      if(!isFormCorrect) {\r\n        return;\r\n      }\r\n      else {\r\n        // if form fields are correct then start login action\r\n        // won't call API if user data is already in process\r\n        if (!userRequest) {\r\n          dispatch(login({\r\n            email: emailValue,\r\n            password: passwordValue\r\n          }, redirectOnSuccess));\r\n      }\r\n    }\r\n  }, [emailValue, passwordValue, userRequest]);\r\n\r\n  const onRegisterClick = (): void => {\r\n    history.replace({ pathname: '/register' });\r\n  }\r\n\r\n  const onForgotPasswordClick = (): void => {\r\n    history.replace({ pathname: '/forgot-password' });\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {\r\n        userRequest && \r\n        !userFailed && (\r\n          <Loader />\r\n      )}\r\n      <div className='fullscreen_message'>\r\n        {\r\n          userFailed && \r\n          !userRequest && \r\n          !userSuccess && (\r\n            <div className='flex_column mb-30'>\r\n              <h2 className='mb-10 text text_type_main-large text_color_inactive'>\r\n                Ошибка авторизации\r\n              </h2>\r\n              <Button \r\n                type=\"primary\"\r\n                size=\"medium\"\r\n                onClick={resetError}\r\n              >\r\n                Попробовать снова\r\n              </Button>\r\n            </div>\r\n        )}\r\n        {\r\n          !userFailed && (\r\n          <Form\r\n            title='Вход'\r\n            actionName='Войти'\r\n            onFormSubmit={onLoginClick}\r\n          >\r\n            <Input\r\n              type={'email'}\r\n              placeholder={'E-mail'}\r\n              onChange={onEmailChange}\r\n              value={emailValue}\r\n              name={'email'}\r\n              error={!isEmailValid}\r\n              ref={emailInputRef}\r\n              errorText={'Неправильно введен e-mail'}\r\n              size={'default'}\r\n            />\r\n            <div className={isPasswordEmpty ? 'password_error' : ''}>\r\n              <PasswordInput\r\n                onChange={onPasswordChange}\r\n                value={passwordValue}\r\n                name={'password'}\r\n              />\r\n            </div>\r\n          </Form>\r\n        )}\r\n        <div className='bottom_navigation'>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Вы — новый пользователь?\r\n          </p>\r\n          <Button \r\n            type=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={onRegisterClick}\r\n          >\r\n            Зарегистрироваться\r\n          </Button>\r\n        </div>\r\n        <div className='bottom_navigation mt-4'>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Забыли пароль?\r\n          </p>\r\n          <Button \r\n            type=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={onForgotPasswordClick}\r\n          >\r\n            Восстановить пароль\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import { FC, useState, useRef, useCallback, useEffect, ChangeEvent, FormEvent } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\n// importing components from project\r\nimport Form from '../components/form/form';\r\nimport Loader from '../components/loader/loader';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\n// import slices and their functions\r\nimport { register, userSlice } from '../services/slices/user';\r\n\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { ILocation } from '../services/types';\r\n\r\nexport const RegisterPage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    userRequest,\r\n    userSuccess,\r\n    userFailed\r\n  } = useAppSelector(\r\n    state => state.user\r\n  );\r\n  const { resetStatus } = userSlice.actions;\r\n\r\n  const history = useHistory();\r\n  const location = useLocation<ILocation>();\r\n\r\n  const resetError = (): void => {\r\n    dispatch(resetStatus());\r\n  }  \r\n\r\n  // reset status and errors on page load\r\n  useEffect(() => {\r\n    resetError();\r\n  }, [])\r\n\r\n  const [nameValue, setNameValue] = useState<string>('');\r\n  const [isNameEmpty, setNameEmpty] = useState<boolean>(false);\r\n  const [emailValue, setEmailValue] = useState<string>('');\r\n  const [isEmailValid, setEmailValid] = useState<boolean>(true);\r\n  const [passwordValue, setPasswordValue] = useState<string>('');\r\n  const [isPasswordEmpty, setPasswordEmpty] = useState<boolean>(false);\r\n\r\n  const nameInputRef = useRef<HTMLInputElement>(null);\r\n  const emailInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const emailRegExp: RegExp = /.+@.+\\.[A-Za-z]+$/;\r\n\r\n  const onNameChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // hide the error message if user is writing something in the name field\r\n    if (e.target.value.length > 0) {\r\n      setNameEmpty(false);\r\n    }\r\n    setNameValue(e.target.value);\r\n  };\r\n\r\n  const onEmailChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // hide the error message if user writed correct email in the field\r\n    if (emailRegExp.test(e.target.value)) {\r\n      setEmailValid(true);\r\n    }\r\n    setEmailValue(e.target.value);\r\n  };\r\n  \r\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // TODO: find a way to trigger PasswordInput error status\r\n    if (e.target.value.length !== 0) {\r\n      setPasswordEmpty(false);\r\n    }\r\n    setPasswordValue(e.target.value);\r\n  };\r\n\r\n  // TODO: move form/inputs validation function to separate file in /utils?\r\n\r\n  interface IFormFields {\r\n    email: boolean,\r\n    password: boolean,\r\n    name: boolean\r\n  }\r\n\r\n  const validateForm = useCallback(() => {\r\n    // TODO: check is better be done when focus is out of input, before the form submit action\r\n    \r\n    const validFields: IFormFields = {\r\n      email: false,\r\n      password: false,\r\n      name: false\r\n    }\r\n    \r\n    // performing email field check\r\n    if (!emailRegExp.test(emailValue)) {\r\n      setEmailValid(false);\r\n    }\r\n    else {\r\n      validFields.email = true;\r\n    }\r\n\r\n    // performing password field check    \r\n    if (passwordValue.length < 6) {\r\n      // TODO: find a way to trigger PasswordInput error status\r\n      if (passwordValue.length === 0) {\r\n        setPasswordEmpty(true);\r\n      }\r\n    }\r\n    else {\r\n      validFields.password = true;\r\n    }\r\n\r\n    // performing name field check \r\n    if (nameValue.length === 0) {\r\n      setNameEmpty(true);\r\n    }\r\n    else {\r\n      validFields.name = true;\r\n    }\r\n\r\n    if (validFields.email && validFields.password && validFields.name) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }, [emailValue, passwordValue, nameValue]);\r\n\r\n  const redirectOnSuccess = (): void => {\r\n    // redirecting to the page which unauthed user tried to reach\r\n    // in other cases redirect to HomePage\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n    history.replace(from);\r\n  }\r\n\r\n  const onRegisterClick = useCallback((e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormCorrect: boolean = validateForm();\r\n    if(!isFormCorrect) {\r\n      return;\r\n    }\r\n    else {\r\n      // if form fields are correct then start registration action\r\n      // won't call API if user data is already in process\r\n      if (!userRequest) {\r\n        dispatch(register({\r\n          name: nameValue,\r\n          email: emailValue,\r\n          password: passwordValue\r\n        }, redirectOnSuccess))\r\n      }\r\n    }\r\n  }, [emailValue, nameValue, passwordValue, userRequest]);\r\n\r\n  const onLoginClick = (): void => {\r\n    history.replace({ pathname: '/login' });\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {\r\n        (userRequest) && \r\n        !userFailed && (\r\n          <Loader />\r\n      )}\r\n      <div className='fullscreen_message'>\r\n        {\r\n          userFailed && \r\n          !userRequest && \r\n          !userSuccess && (\r\n            <div className='flex_column mb-30'>\r\n              <h2 className='mb-10 text text_type_main-large text_color_inactive'>\r\n                Ошибка при регистрации\r\n              </h2>\r\n              <Button \r\n                type=\"primary\"\r\n                size=\"medium\"\r\n                onClick={resetError}\r\n              >\r\n                Попробовать снова\r\n              </Button>\r\n            </div>\r\n        )}\r\n        {\r\n          !userFailed && (\r\n          <Form\r\n            title='Регистрация'\r\n            actionName='Зарегистрироваться'\r\n            onFormSubmit={onRegisterClick}\r\n          >\r\n            <Input\r\n              type={'text'}\r\n              placeholder={'Имя'}\r\n              onChange={onNameChange}\r\n              value={nameValue}\r\n              name={'name'}\r\n              error={isNameEmpty}\r\n              ref={nameInputRef}\r\n              errorText={'Поле не может быть пустым'}\r\n              size={'default'}\r\n            />\r\n            <Input\r\n              type={'email'}\r\n              placeholder={'E-mail'}\r\n              onChange={onEmailChange}\r\n              value={emailValue}\r\n              name={'email'}\r\n              error={!isEmailValid}\r\n              ref={emailInputRef}\r\n              errorText={'Неправильно введен e-mail'}\r\n              size={'default'}\r\n            />\r\n            {/* TODO: find a way to trigger PasswordInput error status */}\r\n            <div className={isPasswordEmpty ? 'password_error' : ''}>\r\n              <PasswordInput\r\n                onChange={onPasswordChange}\r\n                value={passwordValue}\r\n                name={'password'}\r\n              />\r\n            </div>\r\n          </Form>\r\n        )}\r\n        <div className='bottom_navigation'>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Уже зарегистрированы?\r\n          </p>\r\n          <Button \r\n            type=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={onLoginClick}\r\n          >\r\n            Войти\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import { FC, useState, useRef, useCallback, useEffect, ChangeEvent, FormEvent } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\n// importing components from project\r\nimport Form from '../components/form/form';\r\nimport Loader from '../components/loader/loader';\r\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\n// import slices and their functions\r\nimport { forgotPassword, userSlice } from '../services/slices/user';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const ForgotPasswordPage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    userRequest,\r\n    userSuccess,\r\n    userFailed\r\n  } = useAppSelector(\r\n    state => state.user\r\n  );\r\n  const { resetStatus } = userSlice.actions;\r\n\r\n  const history = useHistory();\r\n\r\n  const resetError = (): void => {\r\n    dispatch(resetStatus());\r\n  }  \r\n\r\n  // reset status and errors on page load\r\n  useEffect(() => {\r\n    resetError();\r\n  }, [])\r\n\r\n  const [emailValue, setEmailValue] = useState<string>('');\r\n  const [isEmailValid, setEmailValid] = useState<boolean>(true);\r\n\r\n  const emailInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const emailRegExp: RegExp = /.+@.+\\.[A-Za-z]+$/;\r\n\r\n  const onEmailChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // hide the error message if user writed correct email in the field\r\n    if (emailRegExp.test(e.target.value)) {\r\n      setEmailValid(true);\r\n    }\r\n    setEmailValue(e.target.value);\r\n  };\r\n\r\n  // TODO: move form/inputs validation function to separate file in /utils?\r\n\r\n  interface IFormFields {\r\n    email: boolean\r\n  }\r\n\r\n  const validateForm = (): boolean => {\r\n    // TODO: check is better be done when focus is out of input, before the form submit action\r\n    \r\n    const validFields:IFormFields = {\r\n      email: false\r\n    }\r\n\r\n    // performing email field check\r\n    if (!emailRegExp.test(emailValue)) {\r\n      setEmailValid(false);\r\n    }\r\n    else {\r\n      validFields.email = true;\r\n    }\r\n\r\n    if (validFields.email) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const redirectOnSuccess = (): void => {\r\n    history.replace({ \r\n      pathname: '/reset-password',\r\n      state: { from: '/forgot-password' }\r\n    });\r\n  }\r\n\r\n  const onResetPasswordClick = useCallback((e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormCorrect: boolean = validateForm();\r\n    if(!isFormCorrect) {\r\n      return;\r\n    }\r\n    else {\r\n      // if form field are correct then start reset password action\r\n      // won't call API if user data is already in process\r\n      if (!userRequest) {\r\n        dispatch(forgotPassword(emailValue, redirectOnSuccess));\r\n      }\r\n    }\r\n  }, [emailValue, userRequest]);\r\n\r\n  const onLoginClick = (): void => {\r\n    history.replace({ pathname: '/login' });\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {\r\n        userRequest && \r\n        !userFailed && (\r\n          <Loader />\r\n      )}\r\n      <div className='fullscreen_message'>\r\n        {\r\n          userFailed && \r\n          !userRequest && \r\n          !userSuccess && (\r\n            <div className='flex_column mb-30'>\r\n              <h2 className='mb-10 text text_type_main-large text_color_inactive'>\r\n                Ошибка восстановления пароля\r\n              </h2>\r\n              <Button \r\n                type=\"primary\"\r\n                size=\"medium\"\r\n                onClick={resetError}\r\n              >\r\n                Попробовать снова\r\n              </Button>\r\n            </div>\r\n        )}\r\n        {\r\n          !userFailed && (\r\n          <Form\r\n            title='Восстановление пароля'\r\n            actionName='Восстановить'\r\n            onFormSubmit={onResetPasswordClick}\r\n          >\r\n            <Input\r\n              type={'email'}\r\n              placeholder={'Укажите e-mail'}\r\n              onChange={onEmailChange}\r\n              value={emailValue}\r\n              name={'email'}\r\n              error={!isEmailValid}\r\n              ref={emailInputRef}\r\n              errorText={'Неправильно введен e-mail'}\r\n              size={'default'}\r\n            />\r\n          </Form>\r\n        )}\r\n        <div className='bottom_navigation mt-4'>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Вспомнили пароль?\r\n          </p>\r\n          <Button \r\n            type=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={onLoginClick}\r\n          >\r\n            Войти\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default ForgotPasswordPage;\r\n","import styles from './reset-password.module.css';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { FC, useState, useRef, useCallback, useEffect, ChangeEvent, FormEvent } from 'react';\r\n// importing components from project\r\nimport Form from '../components/form/form';\r\nimport Loader from '../components/loader/loader';\r\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\n// import slices and their functions\r\nimport { resetPassword, userSlice } from '../services/slices/user';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const ResetPasswordPage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    userRequest,\r\n    userSuccess,\r\n    userFailed\r\n  } = useAppSelector(\r\n    state => state.user\r\n  );\r\n  const { resetStatus } = userSlice.actions;\r\n\r\n  const history = useHistory();\r\n\r\n  const resetError = (): void => {\r\n    dispatch(resetStatus());\r\n  }  \r\n\r\n  // reset status and errors on page load\r\n  useEffect(() => {\r\n    resetError();\r\n  }, [])\r\n  \r\n  const [passwordValue, setPasswordValue] = useState<string>('');\r\n  const [isPasswordEmpty, setPasswordEmpty] = useState<boolean>(false);\r\n  const [codeValue, setCodeValue] = useState<string>('');\r\n  const [isCodeEmpty, setCodeEmpty] = useState<boolean>(false);\r\n\r\n  const codeInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const onCodeChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // hide the error message if user is writing something in the code field\r\n    if (e.target.value.length > 0) {\r\n      setCodeEmpty(false);\r\n    }\r\n    setCodeValue(e.target.value);\r\n  };\r\n\r\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // TODO: find a way to trigger PasswordInput error status\r\n    if (e.target.value.length !== 0) {\r\n      setPasswordEmpty(false);\r\n    }\r\n    setPasswordValue(e.target.value);\r\n  };\r\n\r\n  // TODO: move form/inputs validation function to separate file in /utils?\r\n  \r\n  interface IFormFields {\r\n    password: boolean\r\n    code: boolean\r\n  }\r\n\r\n  const validateForm = useCallback((): boolean => {\r\n    // TODO: check is better be done when focus is out of input, before the form submit action\r\n    \r\n    const validFields: IFormFields = {\r\n      password: false,\r\n      code: false\r\n    }\r\n\r\n    // performing password field check    \r\n    if (passwordValue.length < 6) {\r\n      // TODO: find a way to trigger PasswordInput error status\r\n      if (passwordValue.length === 0) {\r\n        setPasswordEmpty(true);\r\n      }\r\n    }\r\n    else {\r\n      validFields.password = true;\r\n    }\r\n\r\n    // performing code field check \r\n    if (codeValue.length === 0) {\r\n      setCodeEmpty(true);\r\n    }\r\n    else {\r\n      validFields.code = true;\r\n    }    \r\n\r\n    if (validFields.password && validFields.code) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }, [codeValue, passwordValue]);\r\n\r\n  const redirectOnSuccess = (): void => {\r\n    history.replace({ pathname: '/login' });\r\n  }\r\n\r\n  const onResetPasswordClick = useCallback((e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const isFormCorrect: boolean = validateForm();\r\n    if(!isFormCorrect) {\r\n      return;\r\n    }\r\n    else {\r\n      // if form fields are correct then start reset password action\r\n      // won't call API if user data is already in process\r\n      if (!userRequest) {\r\n        dispatch(resetPassword(\r\n          codeValue,\r\n          passwordValue,\r\n          redirectOnSuccess\r\n        ));\r\n      }\r\n    }\r\n  }, [codeValue, passwordValue, userRequest]);\r\n\r\n  const onLoginClick = (): void => {\r\n    history.replace({ pathname: '/login' });\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {\r\n        userRequest && \r\n        !userFailed && (\r\n          <Loader />\r\n      )}\r\n      <div \r\n        className={styles.reset_password_container + ' fullscreen_message'}>\r\n        {\r\n          userFailed && \r\n          !userRequest && \r\n          !userSuccess && (\r\n            <div className='flex_column mb-30'>\r\n              <h2 className='mb-10 text text_type_main-large text_color_inactive'>\r\n                Ошибка восстановления пароля\r\n              </h2>\r\n              <Button \r\n                type=\"primary\"\r\n                size=\"medium\"\r\n                onClick={resetError}\r\n              >\r\n                Попробовать снова\r\n              </Button>\r\n            </div>\r\n        )}\r\n        {\r\n          !userFailed && (\r\n          <Form\r\n            title='Восстановление пароля'\r\n            actionName='Сохранить'\r\n            onFormSubmit={onResetPasswordClick}\r\n          >\r\n            {/* TODO: find a way to trigger PasswordInput error status */}\r\n            <div className={isPasswordEmpty ? 'password_error' : ''}>\r\n              <PasswordInput\r\n                onChange={onPasswordChange}\r\n                value={passwordValue}\r\n                name={'password'}\r\n              />\r\n            </div>\r\n            <Input\r\n              type={'text'}\r\n              placeholder={'Введите код из письма'}\r\n              onChange={onCodeChange}\r\n              value={codeValue}\r\n              name={'code'}\r\n              error={isCodeEmpty}\r\n              ref={codeInputRef}\r\n              errorText={'Поле не может быть пустым'}\r\n              size={'default'}\r\n            />\r\n          </Form>\r\n        )}\r\n        <div className='bottom_navigation mt-4'>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            Вспомнили пароль?\r\n          </p>\r\n          <Button \r\n            type=\"secondary\"\r\n            size=\"medium\"\r\n            onClick={onLoginClick}\r\n          >\r\n            Войти\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordPage;\r\n","// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport ordersCardStyles from './orders-card.module.css';\r\n// importing components from library\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { formatDateTime } from '../../services/utils'\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FC, useCallback, useEffect, useState, memo } from 'react';\r\nimport { IOrder } from '../../services/types';\r\n\r\ninterface IOrdersCardProps {\r\n  order: IOrder,\r\n  source: string\r\n}\r\n\r\nconst OrdersCard: FC<IOrdersCardProps> = ({ order, source }) => {\r\n  const history = useHistory();\r\n\r\n  const {\r\n    items\r\n  } = useAppSelector(\r\n    state => state.items\r\n  );\r\n\r\n  const [orderStatusName, setOrderStatusName] = useState<string>('');\r\n  const [orderStatusClass, setOrderStatusClass] = useState<string>('');\r\n  \r\n  // defining the order status text and class based on status string from server\r\n  useEffect(() => {\r\n    switch (order.status) {\r\n      case 'created':\r\n        setOrderStatusName('Создан');\r\n        break;\r\n\r\n      case 'pending':\r\n        setOrderStatusName('Готовится');\r\n        break;\r\n\r\n      case 'done':\r\n        setOrderStatusName('Выполнен')\r\n        setOrderStatusClass(ordersCardStyles.status_completed);\r\n        break;\r\n\r\n      // TODO: find out what status string server will send on error\r\n      case 'canceled':\r\n        setOrderStatusName('Отменён')\r\n        setOrderStatusClass(ordersCardStyles.status_canceled);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [order.status]);\r\n\r\n  const handleOrderClick = () => {\r\n    const currentUrl = history.location.pathname;\r\n    history.replace({ \r\n      pathname: `${currentUrl}/${order._id}`,\r\n      state: { background: history.location }\r\n    });\r\n  }\r\n\r\n  // parsing data and time to specific format as in Figma\r\n  const getOrderDateTime = useCallback(() => (\r\n    order.createdAt && formatDateTime(order.createdAt)\r\n  ), [order.createdAt]);\r\n\r\n  const orderedIngredients = order.ingredients &&\r\n    order.ingredients.map(item_id => (\r\n      items.find(item => item._id === item_id)\r\n  ));\r\n\r\n  // skip if there empty or other falsy result instead of ingredient id\r\n  const filteredOrderedIngredients = orderedIngredients &&\r\n    orderedIngredients.filter(item => item);\r\n\r\n  const orderedBun = filteredOrderedIngredients &&\r\n    filteredOrderedIngredients.find(item => \r\n      item && item.type === 'bun');\r\n  const orderedMiddleItems = filteredOrderedIngredients &&\r\n    filteredOrderedIngredients.filter(item => \r\n      item && item.type !== 'bun');\r\n\r\n  const renderIngredientIcons = useCallback(() => {\r\n    const itemsToRender = orderedMiddleItems;\r\n    // adding bun in the first place\r\n    itemsToRender && itemsToRender.splice(0, 0, orderedBun);\r\n\r\n    if (!!itemsToRender)\r\n    return itemsToRender.map((ingredient, index) => {\r\n      const ingredientsToShow = 5;\r\n      if (index > ingredientsToShow) return null;\r\n\r\n      return (\r\n        // skip if there is no bun or other invalid ingredient\r\n        (ingredient && ingredient._id) &&\r\n        <li key={ingredient._id+index}>\r\n          <span \r\n            className={ordersCardStyles.ingredient_icon_wrapper}\r\n            style={{ zIndex: 10 - index }}\r\n          >\r\n            <img \r\n              src={ingredient.image_mobile}\r\n              alt={ingredient.name}\r\n              title={ingredient.name}\r\n              width='112px'\r\n              className='ingredient_icon'\r\n            />\r\n          </span>\r\n          {index === ingredientsToShow ? (\r\n            <span\r\n              className={ordersCardStyles.more_ingredients_icon}\r\n            >\r\n              <p className={\r\n                ordersCardStyles.more_icon_text +\r\n                ' text text_type_main-default'\r\n              }>\r\n                {!!itemsToRender && !!itemsToRender.length\r\n                  ? `+${itemsToRender.length - ingredientsToShow}`\r\n                  : null\r\n                }\r\n              </p>\r\n              <span className={ordersCardStyles.more_icon_wrapper}></span>\r\n            </span>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    })\r\n  }, [orderedMiddleItems, orderedBun]);\r\n\r\n  const calculateOrderPrice = useCallback(() => (\r\n    // skip if there is no bun\r\n    orderedBun && orderedBun.price && orderedMiddleItems ? \r\n      (\r\n        // select only 1st bun in a case when there are 2 buns in the order (there shouldn't be)\r\n        orderedBun.price + orderedMiddleItems.reduce((acc, p) =>\r\n          !!p ? (acc + (p.price || 0)) : 0, 0)\r\n      ) : ( 0 )\r\n  ), [orderedBun, orderedMiddleItems]);\r\n\r\n  return (\r\n    // skip if there is no bun\r\n    (!!orderedBun && !!orderedBun._id) ?\r\n      <li\r\n        className={ordersCardStyles.order_card} \r\n        onClick={handleOrderClick}\r\n      >\r\n        <div className={ordersCardStyles.order_info}>\r\n          <p className='text text_type_digits-default'>\r\n            {/* display order number in 6-digit format filled with zeros */}\r\n            {typeof order.number === 'number'\r\n              ? `#${order.number.toString().padStart(6, '0')}`\r\n              : null\r\n            }\r\n          </p>\r\n          <p className='text text_type_main-default text_color_inactive'>\r\n            {getOrderDateTime()}\r\n          </p>\r\n        </div>\r\n        <p className={'mt-6 text text_type_main-medium'}>\r\n          {order.name}\r\n        </p>\r\n        {/* order status is displayed only on HistoryPage, not on FeedPage */}\r\n        {source === 'history' ?\r\n          <p className={\r\n            `${orderStatusClass} mt-2 text text_type_main-default`\r\n          }>\r\n            {orderStatusName}\r\n          </p>\r\n          : null\r\n        }\r\n        <div className={ordersCardStyles.order_info + ' mt-6'}>\r\n          <ul className={ordersCardStyles.ingredient_icons_container}>\r\n            {renderIngredientIcons()}\r\n          </ul>\r\n          <div className={'flex_row ml-6'}>\r\n            <p className='text text_type_digits-default'>{calculateOrderPrice()}</p>\r\n            <CurrencyIcon type='primary'/>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    : null\r\n  );\r\n};\r\n\r\n// comparing updateAt field from server and from props\r\n// to check whether the order data was changed\r\nconst compareOrders = (\r\n  prevProps: IOrdersCardProps,\r\n  nextProps: IOrdersCardProps\r\n) => {\r\n  if (prevProps.order)\r\n    return prevProps.order.updatedAt !== nextProps.order.updatedAt;\r\n  else\r\n    return false\r\n}\r\n\r\n// memoizing component to avoid unnecessary renders\r\nexport default memo(OrdersCard, compareOrders);\r\n","import { FC } from 'react';\r\nimport ordersListStyles from './orders-list.module.css';\r\n// importing components from project\r\nimport OrdersCard from '../orders-card/orders-card';\r\nimport { IOrder } from '../../services/types';\r\n\r\ninterface IOrdersListProps {\r\n  orders: Array<IOrder>,\r\n  source: string\r\n}\r\n\r\nconst OrdersList: FC<IOrdersListProps> = ({ orders, source }) => {\r\n  return (\r\n    <>  \r\n      {\r\n        (orders.length > 0) && \r\n        <ul className={ordersListStyles.orders_list}>\r\n          {orders.map((order) => (\r\n            <OrdersCard\r\n              key={order._id}\r\n              source={source}\r\n              order={order}\r\n            />\r\n          ))}\r\n        </ul>\r\n      }\r\n      {/* \r\n        TODO: show this message only after orders are fully loaded from websocket and array is empty \r\n        <h3 className='text text_type_main-large text_color_inactive pb-6 ml-30'>   \r\n          Заказов нет\r\n        </h3>)\r\n        }\r\n      */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrdersList;\r\n","// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport feedInfoPanelStyles from './feed-info-panel.module.css';\r\nimport { FC, useCallback } from 'react';\r\nimport { IOrder } from '../../services/types';\r\n\r\nconst FeedInfoPanel: FC = () => {\r\n\r\n  const {\r\n    orders,\r\n    ordersTotal,\r\n    ordersTotalToday\r\n  } = useAppSelector(\r\n    state => state.feed\r\n  );\r\n\r\n  // showing max 20 last completed or pending orders in list\r\n  const maxDisplayedOrders: number = 20;\r\n\r\n  const renderCompletedOrders = useCallback(() => {\r\n    const completedOrders: Array<IOrder> = orders.filter((order) => (\r\n      order.status === 'done'\r\n    ));    \r\n    return (\r\n      completedOrders.slice(0, maxDisplayedOrders).map((order) => {\r\n        if(!!order.number) \r\n          return (\r\n            <li\r\n              className='text text_type_digits-default'\r\n              key={order._id}\r\n            >\r\n              {/* display order number in 6-digit format filled with zeros */}\r\n              {order.number.toString().padStart(6, '0')}\r\n            </li>\r\n          )\r\n        else\r\n          return null;\r\n        }\r\n      )\r\n    )\r\n  }, [orders]);\r\n\r\n  const renderPreparingOrders = useCallback(() => {\r\n    const pendingOrders = orders.filter((order) => (\r\n      order.status === 'pending'\r\n    ));    \r\n    return (\r\n      pendingOrders.slice(0, maxDisplayedOrders).map((order) => {\r\n        if(!!order.number) \r\n          return (\r\n            <li\r\n              className='text text_type_digits-default'\r\n              key={order._id}\r\n            >\r\n              {/* display order number in 6-digit format filled with zeros */}\r\n              {order.number.toString().padStart(6, '0')}\r\n            </li>\r\n          )\r\n        else\r\n          return null;\r\n        }\r\n      )\r\n    )\r\n  }, [orders]);\r\n\r\n  return(\r\n    <div className={feedInfoPanelStyles.panel_container}>\r\n      <div className={feedInfoPanelStyles.orders_list_container}>\r\n        <div className={feedInfoPanelStyles.orders_list_column}>\r\n          <p className='mb-6 text text_type_main-medium'>\r\n            Готовы:\r\n          </p>\r\n          <ul className={feedInfoPanelStyles.orders_list_completed}>\r\n            {renderCompletedOrders()}\r\n          </ul>\r\n        </div>\r\n        <div className={feedInfoPanelStyles.orders_list_column}>\r\n          <p className='mb-6 text text_type_main-medium'>\r\n            В работе:\r\n          </p>\r\n          <ul className={feedInfoPanelStyles.orders_list_preparing}>\r\n            {renderPreparingOrders()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <p className='mt-15 text text_type_main-medium'>\r\n        Выполнено за всё время:\r\n      </p>\r\n      <p className='text text_type_digits-large'>\r\n        {/* using space as a thousands separator */}\r\n        {ordersTotal.toLocaleString()}\r\n      </p>\r\n      <p className='mt-15 text text_type_main-medium'>\r\n        Выполнено за сегодня:\r\n      </p>\r\n      <p className='text text_type_digits-large'>\r\n        {ordersTotalToday.toLocaleString()}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedInfoPanel;\r\n","import { FC, useEffect } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport styles from './feed.module.css';\r\n// importing components from project\r\nimport OrdersList from '../components/orders-list/orders-list';\r\nimport FeedInfoPanel from '../components/feed-info-panel/feed-info-panel';\r\nimport Loader from '../components/loader/loader';\r\n// import slices and their functions\r\nimport { feedSlice, startFeed, stopFeed } from '../services/slices/feed';\r\n\r\nexport const FeedPage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    itemsRequest,\r\n    itemsSuccess,\r\n    itemsFailed\r\n  } = useAppSelector(\r\n    state => state.items\r\n  );\r\n  const {\r\n    orders,\r\n    feedRequest,\r\n    feedSuccess,\r\n    feedFailed\r\n  } = useAppSelector(\r\n    state => state.feed\r\n  );\r\n\r\n  const {\r\n    wsConnected,\r\n    wsError\r\n  } = useAppSelector(\r\n    state => state.ws\r\n  );\r\n\r\n  // we need to have feed from websocket in store to render orders data\r\n  useEffect(() => {\r\n    // open new websocket when the page is opened\r\n    dispatch(startFeed());\r\n    return () => {\r\n      // close the websocket when the page is closed\r\n      dispatch(stopFeed());\r\n    };  \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (wsConnected && orders.length > 0)\r\n      dispatch(feedSlice.actions.success());\r\n    else if (wsError)\r\n      dispatch(feedSlice.actions.failed());\r\n  }, [wsConnected, wsError, orders]);\r\n\r\n  return (\r\n    <>\r\n      {\r\n        (itemsRequest || feedRequest) && \r\n        (!itemsFailed || !feedFailed) && \r\n        (!itemsSuccess || !feedSuccess) && (\r\n          <Loader />\r\n      )}\r\n      {\r\n        (itemsFailed || feedFailed) && \r\n        (!itemsRequest || !feedRequest) && \r\n        (!itemsSuccess || !feedSuccess) && (\r\n          <div className='fullscreen_message'>\r\n            <h2 className='text text_type_main-large text_color_inactive'>\r\n              Ошибка загрузки\r\n            </h2>\r\n            <p className='pt-3 text text_type_main-default text_color_inactive'>\r\n              Пожалуйста, попробуйте отключить AdBlock на этом сайте\r\n            </p>\r\n          </div>\r\n      )}\r\n      {\r\n        (itemsSuccess && feedSuccess) && \r\n        (!itemsFailed || !feedFailed) && \r\n        (!itemsRequest || !feedRequest) && (\r\n          <>\r\n            <h1 className={\r\n              styles.feed_title +\r\n              ' mt-10 mb-5 text text_type_main-large text_color_default'\r\n            }>\r\n                Лента заказов\r\n            </h1>\r\n            <div className={styles.feed_container}>\r\n              <div className={styles.feed_orders_container}>\r\n                <OrdersList\r\n                  source='feed'\r\n                  orders={orders}\r\n                />\r\n              </div>\r\n              <div className={styles.feed_info_container}>\r\n                 <FeedInfoPanel />\r\n              </div>\r\n            </div>\r\n          </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FeedPage;\r\n","// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector } from '../../services/hooks';\r\nimport orderDetailedViewStyles from './order-detailed-view.module.css';\r\n// importing components from library\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { formatDateTime } from '../../services/utils'\r\n\r\nimport { FC, useCallback, useEffect, useState } from 'react';\r\nimport { IOrder, IIngredient } from '../../services/types';\r\n// import classNames from '../../../declarations/*.css';\r\n\r\ninterface IOrderDetailedView {\r\n  order: IOrder,\r\n  isOrderModal?: boolean\r\n}\r\n\r\ntype TOrderStatus = 'Создан' | 'Готовится' | 'Выполнен' | 'Отменён' | '';\r\n\r\nconst OrderDetailedView: FC<IOrderDetailedView> = ({ order, isOrderModal=false }) => {\r\n  const {\r\n    items\r\n  } = useAppSelector(\r\n    state => state.items\r\n  );\r\n\r\n  const [orderStatusName, setOrderStatusName] = useState<TOrderStatus>('');\r\n  // const [orderStatusClass, setOrderStatusClass] = useState<typeof classNames>({});\r\n  const [orderStatusClass, setOrderStatusClass] = useState<string>('');\r\n  \r\n  // defining the order status text and class based on status string from server\r\n  useEffect(() => {\r\n    switch (order.status) {\r\n      case 'created':\r\n        setOrderStatusName('Создан');\r\n        break;\r\n\r\n      case 'pending':\r\n        setOrderStatusName('Готовится');\r\n        break;\r\n\r\n      case 'done':\r\n        setOrderStatusName('Выполнен')\r\n        setOrderStatusClass(orderDetailedViewStyles.status_completed);\r\n        break;\r\n\r\n      // TODO: find out what status string server will send on error\r\n      case 'canceled':\r\n        setOrderStatusName('Отменён')\r\n        setOrderStatusClass(orderDetailedViewStyles.status_canceled);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [order.status]);\r\n\r\n  // parsing data and time to specific format as in Figma\r\n  const getOrderDateTime = useCallback(():string => (\r\n    !!order.createdAt ? formatDateTime(order.createdAt) : ''\r\n  ), [order.createdAt]);\r\n\r\n  const orderedIngredients: Array<IIngredient> = !!order.ingredients ? (\r\n    order.ingredients.map(item_id => (\r\n      items.find(item => item?._id === item_id)\r\n    ) || {})\r\n  ) : []\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const orderedBun: IIngredient = orderedIngredients.find(\r\n    item => item.type === 'bun'\r\n  ) || {};\r\n\r\n  const orderedMiddleItems: Array<IIngredient> = orderedIngredients.filter(\r\n    item => item.type !== 'bun'\r\n  );\r\n    \r\n  const renderIngredientIcons = useCallback((): Array<IIngredient> => {\r\n    const itemsToRender: Array<IIngredient> = orderedMiddleItems;\r\n    // adding bun in the first place\r\n    itemsToRender.splice(0, 0, orderedBun);\r\n\r\n    type TCountedItem = IIngredient & { count?: number };\r\n \r\n    type TUniqueCountedItems = {\r\n      [_id: string]: TCountedItem\r\n    }\r\n\r\n    const countedItems: Array<TCountedItem> = itemsToRender?.map((item) => {\r\n      return { count: 1, ...item }\r\n    });\r\n\r\n    const uniqueCountedItems:TUniqueCountedItems = countedItems.reduce<TUniqueCountedItems>(\r\n      (a:any, b:TCountedItem) => {\r\n        if (!!b._id) {\r\n          a[b._id] = \r\n            {\r\n              ...b,\r\n              // counting buns twice\r\n              count: ( !!a[b._id] ? a[b._id].count : 0) + (b.type === 'bun' ? 2 : 1),\r\n            }\r\n          return a\r\n        }\r\n        else return null\r\n      }, {});\r\n\r\n    const renderedItems: Array<JSX.Element> = [];\r\n    for (let item_id in uniqueCountedItems) {\r\n      renderedItems.push(\r\n        <li\r\n          className={orderDetailedViewStyles.ingredient_wrapper}\r\n          key={uniqueCountedItems[item_id]._id}>\r\n          <span \r\n            className='ingredient_icon_wrapper'\r\n          >\r\n            <img \r\n              src={uniqueCountedItems[item_id].image_mobile}\r\n              alt={uniqueCountedItems[item_id].name}\r\n              title={uniqueCountedItems[item_id].name}\r\n              width='112px'\r\n              className='ingredient_icon'\r\n            />\r\n          </span>\r\n          <p className={\r\n            orderDetailedViewStyles.ingredient_name +\r\n            ' text text_type_main-default'\r\n          }>\r\n            {uniqueCountedItems[item_id].name}\r\n          </p>\r\n          <span className={orderDetailedViewStyles.ingredient_price}>\r\n            <p className='text text_type_digits-default'>\r\n              {`${uniqueCountedItems[item_id].count} x ${uniqueCountedItems[item_id].price}`}\r\n            </p>\r\n            <CurrencyIcon type='primary'/>\r\n          </span>\r\n        </li>\r\n      )\r\n    };\r\n    return renderedItems;\r\n  }, [orderedMiddleItems, orderedBun]);\r\n\r\n  const calculateOrderPrice = useCallback((): number => {\r\n    const orderIngredients: Array<IIngredient> = order.ingredients?.map(item_id => {\r\n      const orderedItem: IIngredient = items.find(item => item._id === item_id) || {};\r\n      return ({\r\n        price: orderedItem.price,\r\n        type: orderedItem.type\r\n      })\r\n    }) || [];\r\n    // select only 1st bun in a case when there are 2 buns in the order (there shouldn't be)\r\n    const bunPrice: number = orderIngredients.find(item => item.type === 'bun')?.price || 0;\r\n    return(bunPrice * 2 + orderIngredients.reduce((acc, p) => (\r\n      acc + (p.type !== 'bun' ? (p.price || 0) : 0)), 0)\r\n    );\r\n  }, [items, order.ingredients]);\r\n\r\n  return(\r\n    <div className={orderDetailedViewStyles.order_container}>\r\n      {!isOrderModal &&\r\n        <p className={\r\n          orderDetailedViewStyles.order_id +\r\n          ' text text_type_digits-default'\r\n        }>\r\n        {/* display order number in 6-digit format filled with zeros */}\r\n        {`#${order.number?.toString().padStart(6, '0')}`}\r\n      </p>\r\n      }\r\n      <p className={'mt-10 mb-3 text text_type_main-medium'}>\r\n        {order.name}\r\n      </p>\r\n      <p className={\r\n        `${orderStatusClass} mt-2 text text_type_main-default`\r\n      }>\r\n        {orderStatusName}\r\n      </p>\r\n      <p className={'mt-15 mb-6 text text_type_main-medium'}>\r\n        Состав:\r\n      </p>\r\n      <ul className={orderDetailedViewStyles.ingredients_container + ' pr-6'}>\r\n        {renderIngredientIcons()}\r\n      </ul>\r\n      <div className={orderDetailedViewStyles.order_info + ' mt-10'}>\r\n        <p className='text text_type_main-default text_color_inactive'>\r\n          {getOrderDateTime()}\r\n        </p>  \r\n        <div className={'flex_row ml-6'}>\r\n          <p className='text text_type_digits-default'>{calculateOrderPrice()}</p>\r\n          <CurrencyIcon type='primary'/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderDetailedView;\r\n","import { FC, useEffect, useState } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { useParams, useLocation  } from 'react-router-dom';\r\n// importing components from project\r\nimport Loader from '../components/loader/loader';\r\nimport OrderDetailedView from '../components/order-detailed-view/order-detailed-view';\r\n// import slices and their functions\r\nimport { feedSlice, startFeed, stopFeed } from '../services/slices/feed';\r\nimport { startHistory, stopHistory } from '../services/slices/user';\r\nimport { IOrder } from '../services/types';\r\n\r\nexport const OrderPage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  // for user profile page we should open different websocket with auth token\r\n  // useRouteMatch for some reason returning always null here\r\n  const location = useLocation();\r\n  const isFeedPage: boolean = location.pathname.split('/')[1] === 'feed';\r\n  \r\n  const {\r\n    itemsRequest,\r\n    itemsSuccess,\r\n    itemsFailed\r\n  } = useAppSelector(\r\n    state => state.items\r\n  );\r\n  const {\r\n    orders,\r\n    feedRequest,\r\n    feedSuccess,\r\n    feedFailed\r\n  } = useAppSelector(\r\n    state => state.feed\r\n  );\r\n\r\n  const {\r\n    wsConnected,\r\n    wsError\r\n  } = useAppSelector(\r\n    state => state.ws\r\n  );\r\n\r\n  const [currentOrder, setCurrentOrder] = useState<IOrder>({});\r\n\r\n  // we need to have feed from websocket in store to render orders data\r\n  useEffect(() => {\r\n    // open new websocket when the page is opened\r\n    if(isFeedPage)\r\n      dispatch(startFeed());\r\n    else\r\n      dispatch(startHistory());\r\n    return () => {\r\n      // close the websocket when the page is closed\r\n      if(isFeedPage)\r\n        dispatch(stopFeed());\r\n      else\r\n        dispatch(stopHistory());\r\n    };  \r\n  }, []);\r\n\r\n  const currentOrderId:string = useParams<{ id: string }>().id;\r\n\r\n  useEffect(() => {\r\n    if (!!orders && orders.length > 0 && wsConnected) {\r\n      setCurrentOrder(orders.find(order => order._id === currentOrderId) || {})\r\n      dispatch(feedSlice.actions.success());\r\n    }\r\n    else if (wsError)\r\n      dispatch(feedSlice.actions.failed());\r\n    else \r\n      dispatch(feedSlice.actions.request());\r\n  }, [wsConnected, orders, wsError]);\r\n\r\n  return(\r\n    <>\r\n      {\r\n        (itemsRequest || feedRequest) && \r\n        (!itemsFailed || !feedFailed) && \r\n        (!itemsSuccess || !feedSuccess) && (\r\n          <Loader />\r\n      )}\r\n      {\r\n        (itemsFailed || feedFailed) && \r\n        (!itemsRequest || !feedRequest) && \r\n        (!itemsSuccess || !feedSuccess) && (\r\n          <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\r\n            Ошибка загрузки\r\n          </h2>\r\n      )}\r\n      {\r\n        (itemsSuccess && feedSuccess ) &&\r\n        (currentOrder !== {}) &&\r\n        (!itemsFailed || !feedFailed) && \r\n        (!itemsRequest || !feedRequest) && (\r\n          <div className='fullscreen_message'>\r\n            <OrderDetailedView\r\n              order={currentOrder}\r\n            />\r\n          </div>\r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderPage;\r\n","import { FC, useEffect, useCallback } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\r\n// importing components from project\r\nimport Modal from '../components/modal/modal';\r\nimport Loader from '../components/loader/loader';\r\nimport OrderDetailedView from '../components/order-detailed-view/order-detailed-view';\r\n// import slices and their functions\r\nimport { feedSlice } from '../services/slices/feed';\r\nimport { itemsSlice } from '../services/slices/items';\r\nimport { ILocation, IOrder } from '../services/types';\r\n\r\nexport const OrderModalPage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  \r\n  const {\r\n    itemsRequest,\r\n    itemsSuccess,\r\n    itemsFailed\r\n  } = useAppSelector(\r\n    state => state.items\r\n  );\r\n  const {\r\n    orders,\r\n    feedRequest,\r\n    feedSuccess,\r\n    feedFailed\r\n  } = useAppSelector(\r\n    state => state.feed\r\n  );\r\n\r\n  const {\r\n    wsConnected,\r\n    wsError\r\n  } = useAppSelector(\r\n    state => state.ws\r\n  );\r\n\r\n  const { request } = itemsSlice.actions;\r\n\r\n  const history = useHistory();\r\n  const location = useLocation<ILocation>();\r\n\r\n  useEffect(() => {\r\n    if (wsConnected)\r\n      dispatch(feedSlice.actions.success());\r\n    else if (wsError)\r\n      dispatch(feedSlice.actions.failed());\r\n    else \r\n      dispatch(feedSlice.actions.request());\r\n  }, [wsConnected, wsError]);\r\n\r\n  const currentOrderId: string = useParams<{ id: string }>().id;\r\n  const currentOrder: IOrder = orders.find(order => order._id === currentOrderId) || {};\r\n\r\n  const replaceState = useCallback(() => {\r\n    // hiding the content on page before the reload starts\r\n    dispatch(request())\r\n    // remove the background element to show ingredient page instead of a modal\r\n    history.replace({ \r\n      ...history.location,\r\n      state: { background: undefined }\r\n  });\r\n  }, [history]);\r\n\r\n  // return to parent page if modal is closed\r\n  const closeModal = (): void => {\r\n    history.replace({\r\n      pathname: location.state.background.pathname\r\n    });\r\n  }\r\n\r\n  // handle state cleaning in case of page refresh\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", replaceState);\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", replaceState);\r\n    };\r\n  }, []);\r\n\r\n  return(\r\n    <>\r\n      {\r\n        (itemsRequest || feedRequest) && \r\n        (!itemsFailed || !feedFailed) && \r\n        (!itemsSuccess || !feedSuccess) && (\r\n          <Loader />\r\n      )}\r\n      {\r\n        (itemsFailed || feedFailed) && \r\n        (!itemsRequest || !feedRequest) && \r\n        (!itemsSuccess || !feedSuccess) && (\r\n          <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\r\n            Ошибка загрузки\r\n          </h2>\r\n      )}\r\n      {\r\n        (itemsSuccess && feedSuccess) && \r\n        (!itemsFailed || !feedFailed) && \r\n        (!itemsRequest || !feedRequest) && (\r\n          <Modal\r\n            header={`#${currentOrder.number?.toString().padStart(6, '0')}`}\r\n            isOrderModal={true}\r\n            closeModal={closeModal} >\r\n            <OrderDetailedView\r\n              order={currentOrder}\r\n              isOrderModal={true}\r\n            />\r\n          </Modal> \r\n        )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderModalPage;\r\n","import { FC } from 'react';\r\nimport sidebarLinkStyles from './sidebar-link.module.css';\r\n\r\ninterface ISidebarLink {\r\n  active: boolean,\r\n  onClick: () => void,\r\n  text: string\r\n}\r\n\r\nconst SidebarLink: FC<ISidebarLink> = (props) => {\r\n  return(\r\n    <li className={sidebarLinkStyles.sidebar_list_item}>\r\n      <button className={\r\n        `${sidebarLinkStyles.sidebar_link}\r\n        text text_type_main-default text_color_inactive\r\n        ${props.active ? sidebarLinkStyles.sidebar_link_active : ''}`\r\n        }\r\n        onClick={props.onClick} \r\n        title={props.text}\r\n      >\r\n        {props.text}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default SidebarLink;\r\n","// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\r\nimport sidebarStyles from './sidebar.module.css';\r\n// importing components from project\r\nimport SidebarLink from '../sidebar-link/sidebar-link';\r\n// import slices and their functions\r\nimport { logout, userSlice } from '../../services/slices/user';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FC, useState, useEffect } from 'react';\r\n\r\nconst Sidebar: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { userRequest } = useAppSelector(state => state.user);\r\n  const { resetStatus } = userSlice.actions;\r\n  \r\n  // reset status and errors on page load\r\n  useEffect(() => {\r\n    dispatch(resetStatus());\r\n  }, [])\r\n  \r\n  const history = useHistory();\r\n\r\n  const [isProfilePage, setProfilePage] = useState<boolean>(false);\r\n  const [isHistoryPage, setHistoryPage] = useState<boolean>(false);\r\n\r\n  const currentUrl: string = history.location.pathname;\r\n    \r\n  useEffect(() => {\r\n    switch (currentUrl) {\r\n        case '/profile':\r\n          setProfilePage(true);\r\n          break;\r\n        case '/profile/orders':\r\n          setHistoryPage(true);\r\n          break;\r\n        default:\r\n          break;\r\n    }\r\n  }, [currentUrl]);\r\n\r\n  const onProfileClick = (): void => {\r\n    history.replace({ pathname: '/profile' });\r\n  };\r\n  const onHistoryClick = (): void => {\r\n    history.replace({ pathname: '/profile/orders' });\r\n  };\r\n\r\n  const onLogoutClick = (): void => {\r\n    // won't call API if user data is already in process\r\n    if (!userRequest) {\r\n      dispatch(logout());\r\n    }\r\n  };\r\n\r\n  return(\r\n    <aside className={sidebarStyles.sidebar_container}>\r\n      <ul className={sidebarStyles.sidebar_list}>\r\n        <SidebarLink\r\n          text={'Профиль'}\r\n          onClick={onProfileClick}\r\n          active={isProfilePage}\r\n        />\r\n        <SidebarLink\r\n          text={'История заказов'}\r\n          onClick={onHistoryClick}\r\n          active={isHistoryPage}\r\n        /> \r\n        <SidebarLink\r\n          text={'Выход'}\r\n          onClick={onLogoutClick}\r\n          active={false}\r\n        />\r\n      </ul>\r\n      <p className='text text_type_main-default text_color_inactive mt-20'>\r\n        В этом разделе вы можете изменить свои персональные данные\r\n      </p>\r\n    </aside>\r\n);\r\n}\r\n\r\nexport default Sidebar;\r\n","import { FC, useState, useRef, useEffect, ChangeEvent, FocusEvent } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport styles from './profile.module.css';\r\n// importing components from project\r\nimport Form from '../components/form/form';\r\nimport Sidebar from '../components/sidebar/sidebar';\r\nimport Loader from '../components/loader/loader';\r\nimport { Input, EmailInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\n// import slices and their functions\r\nimport { getUser, setUser, userSlice } from '../services/slices/user';\r\n\r\nexport const ProfilePage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    user,\r\n    userRequest,\r\n    userSuccess,\r\n    userFailed\r\n  } = useAppSelector(\r\n    state => state.user\r\n  );\r\n\r\n  const {\r\n    resetStatus\r\n  } = userSlice.actions\r\n\r\n  const [nameValue, setNameValue] = useState<string>('')\r\n  const [emailValue, setEmailValue] = useState<string>('')\r\n  const [passwordValue, setPasswordValue] = useState<string>('')\r\n\r\n  const resetError = (): void => {\r\n    dispatch(resetStatus());\r\n  }  \r\n\r\n  useEffect(() => {\r\n    // reset status and errors on page load\r\n    resetError();\r\n    \r\n    // we need to have user from API in store to render user data\r\n    // won't call API if user data is already in process\r\n    if (!userSuccess && !userRequest) {\r\n      dispatch(getUser());\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setNameValue(user.name || '');\r\n    setEmailValue(user.email || '');\r\n    setPasswordValue(user.password || '');\r\n  }, [user]);\r\n\r\n   // TODO: create EditableInput component and move there all this checks and handlers \r\n  const [isNameInputDisabled, setNameInputDisabled] = useState<boolean>(true)\r\n  const [isNameInputEmpty, setNameInputEmpty] = useState<boolean>(false)\r\n  const [isPasswordInputDisabled, setPasswordInputDisabled] = useState<boolean>(true)\r\n  const [isPasswordInputEmpty, setPasswordInputEmpty] = useState<boolean>(false)\r\n  \r\n  const [hasFormChanged, setFormChanged] = useState<boolean>(false)\r\n\r\n  const nameInputRef = useRef<HTMLInputElement>(null)\r\n  const passwordInputRef = useRef<HTMLInputElement>(null)\r\n\r\n  const onNameChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // hide the error message if user is writing something in the name field\r\n    if (e.target.value.length > 0) {\r\n      setNameInputEmpty(false);\r\n    }\r\n    setNameValue(e.target.value);\r\n    setFormChanged(true);\r\n  };\r\n\r\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // hide the error message if user is writing something in the password field\r\n    if (e.target.value.length > 0) {\r\n      setPasswordInputEmpty(false);\r\n    }\r\n    setPasswordValue(e.target.value);\r\n    setFormChanged(true);\r\n  };\r\n\r\n  const onEmailChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n    // hide the error message if user is writing something in the password field\r\n    setEmailValue(e.target.value);\r\n    setFormChanged(true);\r\n  };\r\n\r\n  const onNameIconClick = (): void => {\r\n    nameInputRef.current?.focus();\r\n    setNameInputDisabled(false);\r\n  }\r\n\r\n  const onPasswordIconClick = (): void => {\r\n    passwordInputRef.current?.focus();\r\n    setPasswordInputDisabled(false);\r\n  }\r\n\r\n  const onNameInputBlur = (e: FocusEvent<HTMLInputElement>): void => {\r\n    // show the error message if the name field is blank\r\n    if (e.target.value.length === 0) {\r\n      setNameInputEmpty(true);\r\n    }\r\n    setNameInputDisabled(true);\r\n  }\r\n\r\n  const onPasswordInputBlur = (e: FocusEvent<HTMLInputElement>): void => {\r\n    // show the error message if the password field is blank\r\n    if (e.target.value.length === 0) {\r\n      setPasswordInputEmpty(true);\r\n    }\r\n    setPasswordInputDisabled(true);\r\n  }\r\n\r\n  const onSubmitChanges = (): void => {\r\n    // won't call API if user data is already in process\r\n    if (!userRequest) {\r\n      dispatch(setUser({\r\n        name: nameValue,\r\n        email: emailValue,\r\n        password: passwordValue\r\n      }));\r\n    }\r\n    setFormChanged(false);\r\n  }\r\n\r\n  const onCancelChanges = (): void => {\r\n    setNameValue(user.name || '');\r\n    setEmailValue(user.email || '');\r\n    setPasswordValue(user.password || '');\r\n    setFormChanged(false);\r\n  }\r\n\r\n  return(\r\n    <>\r\n      {\r\n          userRequest && \r\n          !userFailed && \r\n          !userSuccess && (\r\n            <Loader />\r\n        )}\r\n      <div className={styles.profile_container + ' mt-30'}>\r\n        <Sidebar />\r\n        <div className={styles.form_container}>\r\n          {\r\n            userFailed && \r\n            !userRequest && \r\n            !userSuccess && (\r\n              <h2 className='ml-30 text text_type_main-large text_color_inactive'>\r\n                Ошибка загрузки\r\n              </h2>\r\n          )}\r\n          {\r\n            userSuccess && \r\n            !userFailed && \r\n            !userRequest && (\r\n              <Form>\r\n                <Input\r\n                  type={'text'}\r\n                  placeholder={'Имя'}\r\n                  onChange={onNameChange}\r\n                  value={nameValue}\r\n                  name={'name'}\r\n                  error={isNameInputEmpty}\r\n                  ref={nameInputRef}\r\n                  errorText={'Поле не может быть пустым'}\r\n                  size={'default'}\r\n                  icon={'EditIcon'}\r\n                  onIconClick={onNameIconClick}\r\n                  disabled={isNameInputDisabled}\r\n                  onBlur={onNameInputBlur}\r\n                />\r\n                <EmailInput\r\n                  onChange={onEmailChange}\r\n                  value={emailValue}\r\n                  name={'email'}\r\n                  size={'default'}\r\n                />            \r\n                <Input\r\n                  type={'password'}\r\n                  placeholder={'Пароль'}\r\n                  onChange={onPasswordChange}\r\n                  value={passwordValue}\r\n                  name={'password'}\r\n                  error={isPasswordInputEmpty}\r\n                  ref={passwordInputRef}\r\n                  errorText={'Поле не может быть пустым'}\r\n                  size={'default'}\r\n                  icon={'EditIcon'}\r\n                  onIconClick={onPasswordIconClick}\r\n                  disabled={isPasswordInputDisabled}\r\n                  onBlur={onPasswordInputBlur}\r\n                />\r\n                {hasFormChanged && \r\n                  <div className={styles.buttons_container}>\r\n                    <Button \r\n                      type=\"secondary\"\r\n                      size=\"medium\"\r\n                      onClick={onCancelChanges}\r\n                    >\r\n                      Отменить\r\n                    </Button>\r\n                    <Button \r\n                      type=\"primary\"\r\n                      size=\"medium\"\r\n                      onClick={onSubmitChanges}\r\n                    >\r\n                      Сохранить\r\n                    </Button>\r\n                  </div>\r\n                }\r\n              </Form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import { FC, useEffect } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport styles from './history.module.css';\r\n// importing components from project\r\nimport Sidebar from '../components/sidebar/sidebar';\r\nimport OrdersList from '../components/orders-list/orders-list';\r\nimport Loader from '../components/loader/loader';\r\n// import slices and their functions\r\nimport { feedSlice } from '../services/slices/feed';\r\nimport { getUser, userSlice, startHistory, stopHistory } from '../services/slices/user';\r\n\r\nexport const HistoryPage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    itemsRequest,\r\n    itemsSuccess,\r\n    itemsFailed\r\n  } = useAppSelector(\r\n    state => state.items\r\n  );\r\n  const {\r\n    userRequest,\r\n    userSuccess,\r\n    userFailed\r\n  } = useAppSelector(\r\n    state => state.user\r\n  );\r\n  const {\r\n    orders,\r\n    feedRequest,\r\n    feedSuccess,\r\n    feedFailed\r\n  } = useAppSelector(\r\n    state => state.feed\r\n  );\r\n  const {\r\n    resetStatus\r\n  } = userSlice.actions;\r\n\r\n  const {\r\n    wsConnected,\r\n    wsError\r\n  } = useAppSelector(\r\n    state => state.ws\r\n  );\r\n\r\n  useEffect(() => {\r\n    // reset errors on page load\r\n    dispatch(resetStatus());\r\n\r\n    // open new websocket when the page is opened\r\n    dispatch(startHistory());\r\n\r\n    // we need to have user from API in store to find user orders\r\n    // won't call API if user data is already in process\r\n    if (!userSuccess && !userRequest) {\r\n      dispatch(getUser());\r\n    }\r\n    return () => {\r\n      // close the websocket when the page is closed\r\n      dispatch(stopHistory());\r\n    };  \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (wsConnected)\r\n      dispatch(feedSlice.actions.success());\r\n    else if (wsError)\r\n      dispatch(feedSlice.actions.failed());\r\n  }, [wsConnected, wsError]);\r\n\r\n  return(\r\n    <>\r\n        {\r\n          (itemsRequest || userRequest || feedRequest) && \r\n          (!itemsFailed || !userFailed || !feedFailed) && \r\n          (!itemsSuccess || !userSuccess || !feedSuccess) && (\r\n            <Loader />\r\n        )}\r\n        <div className={styles.history_container + ' mt-30'}>\r\n        <Sidebar />\r\n        <div className={styles.history_orders_container}>\r\n          {\r\n            (itemsFailed || userFailed || feedFailed) && \r\n            (!itemsRequest || !userRequest || !feedRequest) && \r\n            (!itemsSuccess || !userSuccess || !feedSuccess) && (\r\n              <div className='mt-30 flex_column'>\r\n                <h2 className='text text_type_main-large text_color_inactive'>\r\n                  Ошибка загрузки\r\n                </h2>\r\n                <p className='pt-3 text text_type_main-default text_color_inactive'>\r\n                  Пожалуйста, попробуйте отключить AdBlock на этом сайте\r\n                </p>\r\n              </div>\r\n          )}\r\n          {\r\n            (itemsSuccess && userSuccess && feedSuccess) && \r\n            (!itemsFailed || !userFailed || !feedFailed) && \r\n            (!itemsRequest || !userRequest || !feedRequest) && (\r\n              <OrdersList \r\n                source='history'\r\n                orders={orders}\r\n              />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HistoryPage;\r\n","import { FC } from 'react';\r\nimport ingredientDetailsStyles from './ingredient-details.module.css';\r\nimport { IIngredient } from '../../services/types';\r\n\r\nconst IngredientDetails: FC<{ item: IIngredient }> = ({ item }) => {\r\n    return(\r\n        <div className={ingredientDetailsStyles.ingredient_details_container}>\r\n             <img \r\n                src={item.image_large}\r\n                alt={item.name}\r\n                title={item.name}\r\n            />           \r\n            <h4 className='text text_type_main-medium mt-4 mb-8'>\r\n                {item.name}\r\n            </h4>\r\n            <ul className={ingredientDetailsStyles.ingredient_nutrition_list}>\r\n                <li className={ingredientDetailsStyles.ingredient_nutrition_list_item}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">\r\n                        Калории, ккал\r\n                    </p>\r\n                    <p className=\"text text_type_digits-default text_color_inactive\">\r\n                        {item.calories}\r\n                    </p>\r\n                </li>\r\n                <li className={ingredientDetailsStyles.ingredient_nutrition_list_item}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">\r\n                        Белки, г\r\n                    </p>\r\n                    <p className=\"text text_type_digits-default text_color_inactive\">\r\n                        {item.proteins}\r\n                    </p>\r\n                </li>\r\n                <li className={ingredientDetailsStyles.ingredient_nutrition_list_item}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">\r\n                        Жиры, г\r\n                    </p>\r\n                    <p className=\"text text_type_digits-default text_color_inactive\">\r\n                        {item.fat}\r\n                    </p>\r\n                </li>\r\n                <li className={ingredientDetailsStyles.ingredient_nutrition_list_item}>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">\r\n                        Углеводы, г\r\n                    </p>\r\n                    <p className=\"text text_type_digits-default text_color_inactive\">\r\n                        {item.carbohydrates}\r\n                    </p>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IngredientDetails;\r\n","// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector } from '../services/hooks';\r\nimport { useParams } from 'react-router-dom';\r\n// importing components from project\r\nimport IngredientDetails from '../components/ingredient-details/ingredient-details';\r\nimport Loader from '../components/loader/loader';\r\nimport { FC } from 'react';\r\n\r\nexport const IngredientPage: FC = () => {\r\n  const {\r\n    items,\r\n    itemsRequest,\r\n    itemsSuccess,\r\n    itemsFailed\r\n  } = useAppSelector(\r\n    state => state.items\r\n  );\r\n\r\n  const currentIngredientId:string = useParams<{ id: string }>().id;\r\n\r\n  return (\r\n    <>\r\n    {\r\n      itemsRequest && \r\n      !itemsFailed && \r\n      !itemsSuccess && (\r\n        <Loader />\r\n    )}\r\n    {\r\n      itemsFailed && \r\n      !itemsRequest && \r\n      !itemsSuccess && (\r\n        <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\r\n          Ошибка загрузки\r\n        </h2>\r\n    )}\r\n    {\r\n      itemsSuccess && \r\n      !itemsFailed && \r\n      !itemsRequest && (\r\n        <div className='fullscreen_message'>\r\n          <p className=\"text text_type_main-large\">\r\n            Детали ингредиента\r\n          </p>\r\n          <IngredientDetails\r\n            item={items.find((item) => item._id === currentIngredientId) || {}}\r\n          />\r\n        </div>\r\n      )}\r\n  </>\r\n  );\r\n}\r\n\r\nexport default IngredientPage;\r\n","import { FC, useEffect, useCallback } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n// importing components from project\r\nimport Modal from '../components/modal/modal';\r\nimport IngredientDetails from '../components/ingredient-details/ingredient-details';\r\nimport Loader from '../components/loader/loader';\r\n// import slices and their functions\r\nimport { itemsSlice } from '../services/slices/items';\r\nimport { IIngredient } from '../services/types';\r\n\r\nexport const IngredientModalPage: FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  \r\n  const {\r\n    items,\r\n    itemsRequest,\r\n    itemsSuccess,\r\n    itemsFailed\r\n  } = useAppSelector(\r\n    state => state.items\r\n  );\r\n\r\n  const { request } = itemsSlice.actions;\r\n\r\n  const history = useHistory();\r\n\r\n  const currentItemId: string = useParams<{ id: string }>().id;\r\n  const currentItem: IIngredient = items.find((item) => item._id === currentItemId) || {};\r\n\r\n  const replaceState = useCallback(() => {\r\n    // hiding the content on page before the reload starts\r\n    dispatch(request())\r\n    // remove the background element to show ingredient page instead of a modal\r\n    history.replace({ \r\n      ...history.location,\r\n      state: { background: undefined }\r\n  });\r\n  }, [history]);\r\n\r\n  // return to HomePage if modal is closed\r\n  const closeModal = (): void => {\r\n    history.replace({\r\n      pathname: `/`\r\n    });\r\n  }\r\n\r\n  // handle state cleaning in case of page refresh\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", replaceState);\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", replaceState);\r\n    };\r\n  }, []);\r\n  \r\n  return (\r\n    <>\r\n      {\r\n        itemsRequest && \r\n        !itemsFailed && \r\n        !itemsSuccess && (\r\n          <Loader />\r\n      )}\r\n      {\r\n        itemsFailed && \r\n        !itemsRequest && \r\n        !itemsSuccess && (\r\n          <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\r\n            Ошибка загрузки\r\n          </h2>\r\n      )}\r\n      {\r\n        itemsSuccess && \r\n        !itemsFailed && \r\n        !itemsRequest && (\r\n          <Modal \r\n            header='Детали ингредиента'\r\n            closeModal={closeModal}\r\n          >\r\n            <IngredientDetails\r\n              item={currentItem} \r\n            />\r\n          </Modal> \r\n      )}\r\n  </>\r\n  );\r\n}\r\n\r\nexport default IngredientModalPage;\r\n","import { FC } from 'react';\r\nimport styles from './not-found.module.css';\r\n\r\nexport const NotFound404: FC = () => {\r\n  return(\r\n    <div className={styles.fullscreen_message}>\r\n      <p className='text text_type_digits-large text_color_inactive'>\r\n        404\r\n      </p>\r\n      <h1 className='text text_type_main-large text_color_inactive'>\r\n        Страница не найдена\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound404;\r\n","import { Redirect, Route, RouteProps } from 'react-router-dom';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { FC, useEffect } from \"react\";\r\n// import slices and their functions\r\nimport { userSlice } from '../services/slices/user';\r\n\r\nexport const ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    isAuthorized\r\n  } = useAppSelector(\r\n    state => state.user\r\n  );\r\n\r\n  const { checkAuthorization } = userSlice.actions;\r\n\r\n  useEffect(() => {\r\n    // check cookies with tokens\r\n    dispatch(checkAuthorization());\r\n  }, []);\r\n\r\n  // protect routes from unauthorized users\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthorized ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: { from: location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { FC } from 'react';\r\nimport { Redirect, Route, RouteProps, useLocation } from 'react-router-dom';\r\nimport { ILocation } from '../services/types';\r\n\r\nexport const ProtectedResetRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  const location = useLocation<ILocation>();\r\n\r\n  // guests can get to reset password only when they came from ForgotPassword page\r\n  const { from } = location.state || { from: { pathname: '/' } }\r\n\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          from === '/forgot-password' ? (\r\n            children\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/forgot-password'\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    )\r\n}\r\n","import { Redirect, Route, RouteProps, useLocation } from 'react-router-dom';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\r\nimport { FC, useEffect } from 'react';\r\n// import slices and their functions\r\nimport { userSlice } from '../services/slices/user';\r\nimport { ILocation } from '../services/types';\r\n\r\nexport const ProtectedGuestRoute: FC<RouteProps> = ({ children, ...rest }) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    isAuthorized\r\n  } = useAppSelector(\r\n    state => state.user\r\n  );\r\n\r\n  const { checkAuthorization } = userSlice.actions;\r\n\r\n  useEffect(() => {\r\n    // check cookies with tokens\r\n    dispatch(checkAuthorization());\r\n  }, []);\r\n\r\n  const location = useLocation<ILocation>();\r\n  \r\n  // protect routes from authorized users\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        isAuthorized ? (\r\n          <Redirect\r\n            // return to the page where user been before request\r\n            to={(!!location.state && location.state.from) || {pathname: \"/profile\"}}\r\n          />\r\n        ) : (\r\n          children\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n","import { FC } from 'react';\r\nimport menuItemStyles from './menu-item.module.css';\r\n\r\ninterface IMenuItem {\r\n    active: boolean,\r\n    onClick: () => void,\r\n    text: string,\r\n    icon: JSX.Element\r\n}\r\n\r\nconst MenuItem: FC<IMenuItem> = (props) => {\r\n    return(\r\n            <button className={\r\n                `${menuItemStyles.menu_list_item}\r\n                pl-5 pr-5 pt-4 pb-4 mt-4 mb-4\r\n                ${props.active ? menuItemStyles.menu_list_item_active : ''}`\r\n                }\r\n                onClick={props.onClick} \r\n                title={props.text}\r\n            >\r\n                <span className={menuItemStyles.menu_list_item_icon + ' mr-2'}>\r\n                    {props.icon}\r\n                </span>\r\n                <span className={menuItemStyles.menu_list_item_text +\r\n                    ' text text_type_main-default text_color_inactive'}\r\n                >\r\n                    {props.text}\r\n                </span>\r\n            </button>\r\n    );\r\n}\r\n\r\nexport default MenuItem;\r\n","import appHeaderStyles from './app-header.module.css';\r\n// importing components from project\r\nimport MenuItem from '../menu-item/menu-item';\r\n// importing components from library\r\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FC, useState, useEffect } from 'react';\r\n\r\nconst AppHeader: FC = () => {\r\n    const history = useHistory();\r\n\r\n    const [isHomePage, setHomePage] = useState<boolean>(false);\r\n    const [isFeedPage, setFeedPage] = useState<boolean>(false);\r\n    const [isProfilePage, setProfilePage] = useState<boolean>(false);\r\n\r\n    const currentUrl: string = history.location.pathname;\r\n\r\n    useEffect(() => {\r\n        switch (currentUrl) {\r\n            case '/':\r\n                setHomePage(true);\r\n                setFeedPage(false);\r\n                setProfilePage(false);\r\n                break;\r\n            case '/feed':\r\n                setFeedPage(true);\r\n                setHomePage(false);\r\n                setProfilePage(false);\r\n                break;\r\n            case '/profile':\r\n            case '/profile/orders':\r\n                setProfilePage(true);\r\n                setHomePage(false);\r\n                setFeedPage(false);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [currentUrl]);\r\n\r\n    const onConstructorClick = () => {\r\n        history.replace({ pathname: '/' });\r\n    };\r\n    const onFeedClick = () => {\r\n        history.replace({ pathname: '/feed' });\r\n    };\r\n    const onProfileClick = () => {\r\n        history.replace({ pathname: '/profile' });\r\n    };\r\n    const onLogoClick = () => {\r\n        history.replace({ pathname: '/' });\r\n    };\r\n\r\n    return(\r\n        <header>\r\n            <nav className={appHeaderStyles.menu_container}>\r\n                {/* TODO: make MenuList component for wrapping MenuItem components and Logo */}\r\n                <ul className={appHeaderStyles.menu_list}>\r\n                    <li className={appHeaderStyles.menu_list_left}>\r\n                        <ul className={appHeaderStyles.menu_list_left_items}>\r\n                            <li>\r\n                                <MenuItem\r\n                                    icon={\r\n                                        <BurgerIcon type={isHomePage ? \"primary\" : \"secondary\"} />\r\n                                    }\r\n                                    text=\"Конструктор\"\r\n                                    onClick={onConstructorClick}\r\n                                    active={isHomePage}\r\n                                />\r\n                            </li>\r\n                            <li>\r\n\r\n                                <MenuItem\r\n                                    icon={\r\n                                        <ListIcon type={isFeedPage ? \"primary\" : \"secondary\"} />\r\n                                    }\r\n                                    text=\"Лента заказов\"\r\n                                    onClick={onFeedClick}\r\n                                    active={isFeedPage}\r\n                                />\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n                    <li\r\n                        className={appHeaderStyles.menu_list_center}\r\n                        onClick={onLogoClick}\r\n                    >\r\n                        <Logo />\r\n                    </li>\r\n                    <li className={appHeaderStyles.menu_list_right}>\r\n                        <span>\r\n                            <MenuItem\r\n                                icon={\r\n                                    <ProfileIcon type={isProfilePage ? \"primary\" : \"secondary\"} />\r\n                                }\r\n                                text=\"Личный кабинет\"\r\n                                onClick={onProfileClick}\r\n                                active={isProfilePage}\r\n                            />\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default AppHeader;\r\n","import React, { useEffect } from 'react';\r\n// importing typed hooks for Redux Toolkit\r\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\r\nimport { Switch, Route, useLocation } from 'react-router-dom';\r\nimport { ILocation } from '../../services/types'\r\nimport { getItems } from '../../services/slices/items';\r\nimport {\r\n  HomePage,\r\n  LoginPage,\r\n  RegisterPage,\r\n  ForgotPasswordPage,\r\n  ResetPasswordPage,\r\n  FeedPage,\r\n  OrderPage,\r\n  OrderModalPage,\r\n  ProfilePage,\r\n  HistoryPage,\r\n  IngredientPage,\r\n  IngredientModalPage,\r\n  NotFound404\r\n} from '../../pages';\r\nimport { ProtectedRoute } from '../protected-route';\r\nimport { ProtectedResetRoute } from '../protected-reset-route';\r\nimport { ProtectedGuestRoute } from '../protected-guest-route';\r\nimport AppHeader from '../app-header/app-header';\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const location = useLocation<ILocation>();\r\n  const background = location.state && location.state.background;\r\n\r\n  const {\r\n    itemsSuccess,\r\n  } = useAppSelector(\r\n    state => state.items\r\n  );\r\n\r\n  // we need to have items from API in store to render ingredients on pages\r\n  useEffect(() => {\r\n    // we won't call API if items are already in store\r\n    if (!itemsSuccess) {\r\n      dispatch(getItems());\r\n    }\r\n  }, [dispatch, itemsSuccess]);\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <Switch location={background || location}>\r\n        <Route path=\"/\" exact={true}>\r\n          <HomePage />\r\n        </Route>\r\n        <ProtectedGuestRoute path=\"/login\" exact={true}>\r\n          <LoginPage />\r\n        </ProtectedGuestRoute>\r\n        <ProtectedGuestRoute path=\"/register\" exact={true}>\r\n          <RegisterPage />\r\n        </ProtectedGuestRoute>\r\n        <ProtectedGuestRoute path=\"/forgot-password\" exact={true}>\r\n          <ForgotPasswordPage />\r\n        </ProtectedGuestRoute>\r\n        <ProtectedResetRoute path=\"/reset-password\" exact={true}>\r\n          <ResetPasswordPage />\r\n        </ProtectedResetRoute>\r\n        <Route path=\"/feed\" exact={true}>\r\n          <FeedPage />\r\n        </Route>\r\n        <Route path=\"/feed/:id\" exact={true}>\r\n          <OrderPage />\r\n        </Route>\r\n        <ProtectedRoute path=\"/profile\" exact={true}>\r\n          <ProfilePage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/profile/orders\" exact={true}>\r\n          <HistoryPage />\r\n        </ProtectedRoute>\r\n        <ProtectedRoute path=\"/profile/orders/:id\" exact={true}>\r\n          <OrderPage />\r\n        </ProtectedRoute>\r\n        <Route path=\"/ingredients/:id\" exact={true}>\r\n          <IngredientPage />\r\n        </Route>\r\n        <Route>\r\n          <NotFound404 />\r\n        </Route>\r\n      </Switch>\r\n\r\n      {/* Show the modals when a background page is set */\r\n        background && background.pathname === '/' &&\r\n        <Route path=\"/ingredients/:id\" exact={true}>\r\n          <IngredientModalPage />\r\n        </Route>\r\n      }\r\n      {\r\n        background && background.pathname === '/profile/orders' &&\r\n        <ProtectedRoute path=\"/profile/orders/:id\" exact={true}>\r\n          <OrderModalPage />\r\n        </ProtectedRoute>\r\n      }\r\n      {\r\n        background && background.pathname === '/feed' &&\r\n        <Route path=\"/feed/:id\" exact={true}>\r\n          <OrderModalPage />\r\n        </Route>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from '@reduxjs/toolkit'\r\nimport { itemsSlice } from \"./items\";\r\nimport { burgerConstructorSlice } from \"./burger-constructor\";\r\nimport { orderSlice } from \"./order\";\r\nimport { userSlice } from \"./user\";\r\nimport { feedSlice } from \"./feed\";\r\nimport { wsSlice } from \"./websocket\";\r\n\r\nconst rootReducer = combineReducers(\r\n  {\r\n    items: itemsSlice.reducer,\r\n    order: orderSlice.reducer,    \r\n    burgerConstructor: burgerConstructorSlice.reducer,\r\n    user: userSlice.reducer,\r\n    feed: feedSlice.reducer,\r\n    ws: wsSlice.reducer\r\n  }\r\n)\r\n\r\nexport default rootReducer\r\n","import { AnyAction, MiddlewareAPI } from 'redux'\r\nimport { wsSlice } from '../slices/websocket';\r\nimport { feedSlice } from '../slices/feed';\r\nimport { setCookie } from '../utils';\r\nimport { refreshToken } from '../slices/user';\r\nimport { USER_ORDERS_WS_URL } from '../constants';\r\n\r\nconst {\r\n  wsConnectionStart,\r\n  wsConnectionStop,\r\n  wsConnectionSuccess,\r\n  wsConnectionError,\r\n  wsConnectionClosed\r\n} = wsSlice.actions;\r\n\r\nexport const wsMiddleware = () => {\r\n  return (store: MiddlewareAPI) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return (next: (a: AnyAction) => void) => (action: AnyAction) => {\r\n      const { dispatch } = store;\r\n      const { type, payload } = action;\r\n\r\n      if (type === wsConnectionStart.type) {\r\n        const wsUrl: string = payload.token ? (\r\n          `${payload.url}?token=${payload.token}`\r\n        ) : (\r\n          `${payload.url}`\r\n        );\r\n        socket = new WebSocket(wsUrl);\r\n      }\r\n      \r\n      if (type === wsConnectionStop.type) {\r\n        // user has moved to another page\r\n        // 1001 code fires an InvalidAccessError\r\n        socket && socket.close(1000, 'CLOSE_NORMAL');\r\n      }\r\n\r\n      if (socket) {\r\n        socket.onopen = event => {\r\n          dispatch(wsConnectionSuccess());\r\n        };\r\n\r\n        socket.onerror = event => {\r\n          dispatch(wsConnectionError());\r\n        };\r\n\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n\r\n          // if accessToken has gone stale we're need to refresh it first\r\n          if (restParsedData.message && restParsedData.message === 'Invalid or missing token') {\r\n            socket && socket.close(1000, 'CLOSE_NORMAL');\r\n            refreshToken()\r\n            .then((refresh_res) => {\r\n              if (!refresh_res.ok && refresh_res.status >= 500) {\r\n                throw Error(refresh_res.statusText);\r\n              }\r\n              return refresh_res.json();\r\n            })\r\n            .then((refresh_data) => {\r\n              if (refresh_data.success === true) {\r\n                setCookie('accessToken', refresh_data.accessToken, { path: '/' });\r\n                setCookie('refreshToken', refresh_data.refreshToken, { path: '/' });\r\n                const wsToken: string = refresh_data.accessToken.replace('Bearer ', '');\r\n                const wsUrl: string = `${USER_ORDERS_WS_URL}?token=${wsToken}`;\r\n                socket = new WebSocket(wsUrl);\r\n              }\r\n              else {\r\n                throw Error(refresh_data.message);\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              dispatch(wsConnectionError());\r\n              console.log(error);\r\n            });\r\n\r\n          }\r\n          dispatch(feedSlice.actions.setOrdersData(restParsedData));\r\n        };\r\n\r\n        socket.onclose = event => {\r\n          dispatch(wsConnectionClosed());\r\n        };\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  };\r\n};\r\n","import thunk from 'redux-thunk';\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport rootReducer from './slices';\r\nimport { wsMiddleware } from './middleware';\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware()\r\n      .prepend(\r\n        thunk,\r\n        wsMiddleware()\r\n      ),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  }); \r\n\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.module.css';\r\nimport App from './components/app/app';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { store } from './services/store';\r\n\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* The basename property is used for correct routing in Github Pages */}\r\n      <BrowserRouter basename=\"/react-burger\">\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_card\":\"orders-card_order_card__2xEkW flex_column order_card_box_shadow mb-6\",\"order_info\":\"orders-card_order_info__26Vc7 flex_row\",\"ingredient_icons_container\":\"orders-card_ingredient_icons_container__1Bnkl\",\"ingredient_icon_wrapper\":\"orders-card_ingredient_icon_wrapper__2wARX ingredient_icon_wrapper\",\"more_ingredients_icon\":\"orders-card_more_ingredients_icon__2iwo3\",\"more_icon_text\":\"orders-card_more_icon_text__1uCRr\",\"more_icon_wrapper\":\"orders-card_more_icon_wrapper__15Bat\",\"status_completed\":\"orders-card_status_completed__jXxDq\",\"status_canceled\":\"orders-card_status_canceled__NLbn8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_container\":\"order-detailed-view_order_container__3ifiK flex_column\",\"order_id\":\"order-detailed-view_order_id__2ZN6I\",\"order_info\":\"order-detailed-view_order_info__2GPkn flex_row\",\"ingredient_wrapper\":\"order-detailed-view_ingredient_wrapper__3hipl flex_row\",\"ingredients_container\":\"order-detailed-view_ingredients_container__1r_xw flex_column scroll\",\"ingredient_name\":\"order-detailed-view_ingredient_name__3xxeV\",\"ingredient_price\":\"order-detailed-view_ingredient_price__3P8sa\",\"status_completed\":\"order-detailed-view_status_completed__1IbsE\",\"status_canceled\":\"order-detailed-view_status_canceled__2-nev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger_constructor_list\":\"burger-constructor_burger_constructor_list__1d-ov flex_column\",\"burger_constructor_draggable_list\":\"burger-constructor_burger_constructor_draggable_list__1RNI5 burger-constructor_burger_constructor_list__1d-ov flex_column scroll\",\"burger_constructor_order\":\"burger-constructor_burger_constructor_order__2lPPg flex_row\",\"warningText\":\"burger-constructor_warningText__1ZhC1\",\"emptyBun\":\"burger-constructor_emptyBun__2Ki4F\",\"disabled\":\"burger-constructor_disabled__2jhYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel_container\":\"feed-info-panel_panel_container__3snqf flex_column scroll\",\"orders_list_container\":\"feed-info-panel_orders_list_container__1NeKt flex_row\",\"orders_list_column\":\"feed-info-panel_orders_list_column__1CqTR\",\"orders_list_completed\":\"feed-info-panel_orders_list_completed__3CMgK flex_column\",\"orders_list_preparing\":\"feed-info-panel_orders_list_preparing__1DPrU flex_column\",\"order_id\":\"feed-info-panel_order_id__DsZrm\",\"order_info\":\"feed-info-panel_order_info__qCUMm flex_row\",\"ingredient_wrapper\":\"feed-info-panel_ingredient_wrapper__2ENeW flex_row\",\"ingredients_container\":\"feed-info-panel_ingredients_container__34w4n flex_column scroll\",\"ingredient_name\":\"feed-info-panel_ingredient_name__3pO0P\",\"ingredient_price\":\"feed-info-panel_ingredient_price__1BGug\",\"status_completed\":\"feed-info-panel_status_completed__1Caoa\",\"status_canceled\":\"feed-info-panel_status_canceled__2zT0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient_details_container\":\"ingredient-details_ingredient_details_container__14S_C flex_column\",\"ingredient_nutrition_list\":\"ingredient-details_ingredient_nutrition_list__34GhJ flex_row\",\"ingredient_nutrition_list_item\":\"ingredient-details_ingredient_nutrition_list_item__1Nd9x flex_column\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_container\":\"app-header_menu_container__2Frhw flex_row card_box_shadow\",\"menu_list\":\"app-header_menu_list__vfNbf flex_row\",\"menu_list_left\":\"app-header_menu_list_left__1XIk0\",\"menu_list_left_items\":\"app-header_menu_list_left_items__3IGYs flex_row\",\"menu_list_center\":\"app-header_menu_list_center__34VBW flex_row\",\"menu_list_right\":\"app-header_menu_list_right__1JqjN flex_row\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropContainer\":\"draggable-constructor-element_dropContainer__1uxwq\",\"dropContainerPushed\":\"draggable-constructor-element_dropContainerPushed__1Rvld\",\"drag_icon\":\"draggable-constructor-element_drag_icon__3xT0D\",\"draggable_list_item\":\"draggable-constructor-element_draggable_list_item__3_FM- flex_row\",\"dragged\":\"draggable-constructor-element_dragged__ZUPDl\",\"pushedUp\":\"draggable-constructor-element_pushedUp__9RTxv\",\"pushedDown\":\"draggable-constructor-element_pushedDown__1OW5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_container\":\"modal_modal_container__OAPar card_box_shadow flex_column\",\"modal_header\":\"modal_modal_header__ZY_Ey flex_row\",\"close_icon\":\"modal_close_icon__2AfjQ\",\"fancy_icon\":\"modal_fancy_icon__3356T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed_container\":\"feed_feed_container__2QFYK flex_row\",\"feed_orders_container\":\"feed_feed_orders_container__2fcXC\",\"feed_info_container\":\"feed_feed_info_container__42pJ0\",\"feed_title\":\"feed_feed_title__QXb5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_list_item\":\"menu-item_menu_list_item__3wzDU\",\"menu_list_item_icon\":\"menu-item_menu_list_item_icon__2cXuW\",\"menu_list_item_active\":\"menu-item_menu_list_item_active__1RIb9\",\"menu_list_item_text\":\"menu-item_menu_list_item_text___hojC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__2rvu5 flex_row\",\"container_left\":\"home_container_left__3T__C\",\"container_right\":\"home_container_right__1B13g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_details_container\":\"order-details_order_details_container__11cnW flex_column\",\"order_id\":\"order-details_order_id__1CKhG\",\"loader_container\":\"order-details_loader_container__3Rkcj flex_column\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_container\":\"profile_profile_container__3jlHJ flex_row\",\"form_container\":\"profile_form_container__2elNW\",\"buttons_container\":\"profile_buttons_container__3yHl- flex_row\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar_list_item\":\"sidebar-link_sidebar_list_item__2_Aq1\",\"sidebar_link\":\"sidebar-link_sidebar_link__LZ6R3\",\"sidebar_link_active\":\"sidebar-link_sidebar_link_active__2QEsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab_selector\":\"burger-ingredients_tab_selector__3TUqW flex_row\",\"scroll_container\":\"burger-ingredients_scroll_container__3h8YK scroll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient_card\":\"burger-ingredients-card_ingredient_card__110VV flex_column\",\"ingredient_image\":\"burger-ingredients-card_ingredient_image__1PSb7\",\"ingredient_name\":\"burger-ingredients-card_ingredient_name__MeA_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__81vaF flex_row\",\"spinner\":\"loader_spinner__2Wn5v\",\"spin\":\"loader_spin__hZ96F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar_container\":\"sidebar_sidebar_container__1_bAk\",\"sidebar_list\":\"sidebar_sidebar_list__2zvVe flex_column\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history_container\":\"history_history_container__23jTs flex_row\",\"history_orders_container\":\"history_history_orders_container__3H133\"};"],"sourceRoot":""}