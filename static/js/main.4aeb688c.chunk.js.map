{"version":3,"sources":["components/burger-ingredients-category/burger-ingredients-category.module.css","components/modal-overlay/modal-overlay.module.css","components/form/form.module.css","pages/reset-password.module.css","components/orders-list/orders-list.module.css","pages/not-found.module.css","services/hooks.ts","services/constants.ts","services/slices/items.ts","services/slices/burger-constructor.ts","components/draggable-constructor-element/draggable-constructor-element.tsx","services/utils.ts","services/slices/websocket.ts","services/slices/feed.ts","services/slices/user.ts","services/slices/order.ts","components/burger-constructor/burger-constructor.tsx","components/burger-ingredients-card/burger-ingredients-card.tsx","components/burger-ingredients-category/burger-ingredients-category.tsx","components/burger-ingredients/burger-ingredients.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/order-accepted.gif","images/logo.png","components/loader/loader.tsx","components/order-details/order-details.tsx","pages/home.tsx","components/form/form.tsx","pages/login.tsx","pages/register.tsx","pages/forgot-password.tsx","pages/reset-password.tsx","components/orders-card/orders-card.tsx","components/orders-list/orders-list.tsx","components/feed-info-panel/feed-info-panel.tsx","pages/feed.tsx","components/order-detailed-view/order-detailed-view.tsx","pages/order.tsx","pages/order-modal.tsx","components/sidebar-link/sidebar-link.tsx","components/sidebar/sidebar.tsx","pages/profile.tsx","pages/history.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient.tsx","pages/ingredient-modal.tsx","pages/not-found.tsx","components/protected-route.tsx","components/protected-reset-route.tsx","components/protected-guest-route.tsx","components/menu-item/menu-item.tsx","components/app-header/app-header.tsx","components/app/app.tsx","services/slices/index.ts","services/middleware/ws-middleware.ts","services/store.ts","index.tsx","components/orders-card/orders-card.module.css","components/order-detailed-view/order-detailed-view.module.css","components/burger-constructor/burger-constructor.module.css","components/feed-info-panel/feed-info-panel.module.css","components/ingredient-details/ingredient-details.module.css","components/app-header/app-header.module.css","components/draggable-constructor-element/draggable-constructor-element.module.css","components/modal/modal.module.css","pages/feed.module.css","components/menu-item/menu-item.module.css","pages/home.module.css","components/order-details/order-details.module.css","pages/profile.module.css","components/sidebar-link/sidebar-link.module.css","components/burger-ingredients/burger-ingredients.module.css","components/burger-ingredients-card/burger-ingredients-card.module.css","components/loader/loader.module.css","components/sidebar/sidebar.module.css","pages/history.module.css"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","ITEMS_API_URL","ORDER_API_URL","FORGOT_PASSWORD_API_URL","RESET_PASSWORD_API_URL","REGISTER_API_URL","LOGIN_API_URL","LOGOUT_API_URL","USER_API_URL","ALL_ORDERS_WS_URL","USER_ORDERS_WS_URL","itemsSlice","createSlice","name","initialState","items","itemsRequest","itemsFailed","itemsSuccess","reducers","request","state","failed","success","action","payload","increaseQuantityValue","map","item","_id","__v","decreaseQuantityValue","clearValues","burgerConstructorSlice","bunItem","middleItems","totalPrice","setBunItem","addMiddleItem","push","moveMiddleItem","movedItem","splice","oldIndex","newIndex","deleteMiddleItem","clearMiddleItems","calcTotalPrice","price","reduce","acc","p","length","DraggableConstructorElement","index","dispatch","actions","dndItemRef","useRef","useState","isItemHigher","setIsItemHigher","isItemLower","setIsItemLower","useDrop","accept","drop","collect","monitor","targetId","getHandlerId","isItemHover","isOver","offset","getDifferenceFromInitialOffset","dropItemTarget","useDrag","type","sourceId","isItemDragging","isDragging","end","didDrop","getDropResult","dragItemSource","useEffect","y","className","draggableConstructorElementStyles","draggable_list_item","dragged","pushedUp","pushedDown","ref","data-source-id","data-target-id","drag_icon","image","text","thumbnail","handleClose","itemId","handleItemDelete","formatDateTime","time","n","dateTime","Date","daysFromToday","today","now","utcDateTime","UTC","getFullYear","getMonth","getDate","utcToday","Math","floor","getDaysFromToday","day","hours","getHours","toString","padStart","mins","getMinutes","timeZone","Intl","NumberFormat","signDisplay","format","getTimezoneOffset","getCookie","matches","document","cookie","match","RegExp","replace","decodeURIComponent","setCookie","value","props","expires","d","setTime","getTime","toUTCString","propName","cookieValue","encodeURIComponent","updatedCookie","propValue","deleteCookie","path","wsSlice","wsConnected","wsError","wsConnectionStart","wsConnectionStop","wsConnectionSuccess","wsConnectionError","wsConnectionClosed","startFeed","url","feedSlice","stopFeed","orders","feedRequest","feedFailed","feedSuccess","ordersTotal","ordersTotalToday","setOrdersData","sort","a","b","updatedAt","keyA","valueOf","total","totalToday","getUser","accessToken","userRequestHeaders","Headers","append","userSlice","fetch","method","headers","then","res","ok","status","Error","statusText","json","data","setName","user","setEmail","email","setAuthorization","message","refreshToken","refresh_res","refresh_data","delete","catch","error","console","log","body","JSON","stringify","startHistory","token","stopHistory","fakePassword","password","userRequest","userFailed","userSuccess","isAuthorized","setPassword","resetStatus","resetUserData","checkAuthorization","orderSlice","orderData","orderRequest","orderFailed","orderSuccess","isOrderModalOpen","id","number","openOrderModal","closeOrderModal","BurgerConstructor","burgerConstructor","history","useHistory","handleBunItemDrop","newBunItem","dropTopBunTarget","dropBottomBunTarget","dropMiddleItemTarget","burgerConstructorStyles","burger_constructor_list","isLocked","emptyBun","burger_constructor_draggable_list","random","warningText","burger_constructor_order","disabled","size","onClick","Authorization","order","finally","placeOrder","pathname","from","BurgerIngredientsCard","memo","opacity","dragRef","burgerIngredientsCardStyles","ingredient_card","background","location","style","count","src","alt","title","ingredient_name","BurgerIngredientsCategory","forwardRef","categoryId","heading","burgerIngredientsCategoryStyles","burger_ingredients_list","BurgerIngredients","current","setCurrent","setTab","tabName","getElementById","scrollIntoView","behavior","inViewOptions","threshold","trackVisibility","delay","useInView","bunRef","inViewBun","mainRef","inViewMain","sauceRef","inViewSauce","burgerIngredientsStyles","tab_selector","active","scroll_container","filter","ModalOverlay","closeModal","modalOverlayStyles","modal_overlay","modalRoot","Modal","children","header","isFancyCloseIcon","isOrderModal","handleEscKey","e","key","stopImmediatePropagation","addEventListener","removeEventListener","ReactDOM","createPortal","modalStyles","modal_container","modal_header","close_icon","fancy_icon","Loader","loaderStyles","loader","logo","spinner","OrderDetails","orderDetailsStyles","order_details_container","loader_container","order_id","orderAcceptedImage","height","HomePage","styles","container","DndProvider","backend","HTML5Backend","container_left","container_right","Form","formStyles","form_container","autoComplete","onSubmit","onFormSubmit","actionName","LoginPage","useLocation","resetError","emailValue","setEmailValue","isEmailValid","setEmailValid","passwordValue","setPasswordValue","isPasswordEmpty","setPasswordEmpty","emailInputRef","emailRegExp","validateForm","useCallback","validFields","test","redirectOnSuccess","onLoginClick","redirectCallback","preventDefault","placeholder","onChange","target","errorText","RegisterPage","nameValue","setNameValue","isNameEmpty","setNameEmpty","nameInputRef","onRegisterClick","ForgotPasswordPage","onResetPasswordClick","ResetPasswordPage","codeValue","setCodeValue","isCodeEmpty","setCodeEmpty","codeInputRef","code","reset_password_container","OrdersCard","source","orderStatusName","setOrderStatusName","orderStatusClass","setOrderStatusClass","ordersCardStyles","status_completed","status_canceled","getOrderDateTime","createdAt","orderedIngredients","ingredients","item_id","find","filteredOrderedIngredients","orderedBun","orderedMiddleItems","renderIngredientIcons","itemsToRender","ingredient","ingredient_icon_wrapper","zIndex","image_mobile","width","more_ingredients_icon","more_icon_text","more_icon_wrapper","calculateOrderPrice","order_card","currentUrl","order_info","ingredient_icons_container","compareOrders","prevProps","nextProps","OrdersList","ordersListStyles","orders_list","FeedInfoPanel","feed","renderCompletedOrders","slice","renderPreparingOrders","feedInfoPanelStyles","panel_container","orders_list_container","orders_list_column","orders_list_completed","orders_list_preparing","toLocaleString","FeedPage","ws","feed_title","feed_container","feed_orders_container","feed_info_container","OrderDetailedView","orderDetailedViewStyles","uniqueCountedItems","renderedItems","ingredient_wrapper","ingredient_price","orderIngredients","orderedItem","order_container","ingredients_container","OrderPage","isFeedPage","split","currentOrder","setCurrentOrder","currentOrderId","useParams","OrderModalPage","replaceState","undefined","window","SidebarLink","sidebarLinkStyles","sidebar_list_item","sidebar_link","sidebar_link_active","Sidebar","isProfilePage","setProfilePage","isHistoryPage","setHistoryPage","sidebarStyles","sidebar_container","sidebar_list","ProfilePage","isNameInputDisabled","setNameInputDisabled","isNameInputEmpty","setNameInputEmpty","isPasswordInputDisabled","setPasswordInputDisabled","isPasswordInputEmpty","setPasswordInputEmpty","hasFormChanged","setFormChanged","passwordInputRef","profile_container","icon","onIconClick","focus","onBlur","buttons_container","setUser","HistoryPage","history_container","history_orders_container","IngredientDetails","ingredientDetailsStyles","ingredient_details_container","image_large","ingredient_nutrition_list","ingredient_nutrition_list_item","calories","proteins","fat","carbohydrates","IngredientPage","currentIngredientId","IngredientModalPage","currentItemId","currentItem","NotFound404","fullscreen_message","ProtectedRoute","rest","render","to","ProtectedResetRoute","ProtectedGuestRoute","MenuItem","menuItemStyles","menu_list_item","menu_list_item_active","menu_list_item_icon","menu_list_item_text","AppHeader","isHomePage","setHomePage","setFeedPage","appHeaderStyles","menu_container","menu_list","menu_list_left","menu_list_left_items","menu_list_center","menu_list_right","App","exact","rootReducer","combineReducers","reducer","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","socket","next","wsUrl","WebSocket","close","onopen","event","onerror","onmessage","parsedData","parse","restParsedData","wsToken","onclose","devTools","process","StrictMode","basename"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,wBAA0B,+D,oBCA5CD,EAAOC,QAAU,CAAC,cAAgB,uC,oBCAlCD,EAAOC,QAAU,CAAC,eAAiB,2C,oBCAnCD,EAAOC,QAAU,CAAC,yBAA2B,mD,oBCA7CD,EAAOC,QAAU,CAAC,YAAc,2D,oBCAhCD,EAAOC,QAAU,CAAC,mBAAqB,2D,oHCE1BC,EAAiB,kBAAMC,eACvBC,EAAkDC,I,8BCJlDC,EAAwB,oDACxBC,EAAwB,+CACxBC,EAAkC,uDAClCC,EAAiC,6DACjCC,EAA2B,sDAC3BC,EAAwB,mDACxBC,EAAyB,oDAEzBC,EAAuB,kDACvBC,EAA4B,6CAC5BC,EAA6B,yCC+B7BC,EAAaC,YAAY,CACpCC,KAAM,QACNC,aAT+B,CAC/BC,MAAO,GACPC,cAAc,EACdC,aAAa,EACbC,cAAc,GAMdC,SAAU,CACRC,QADQ,SACAC,GACNA,EAAML,cAAe,EACrBK,EAAMJ,aAAc,EACpBI,EAAMH,cAAe,GAEvBI,OANQ,SAMDD,GACLA,EAAMJ,aAAc,EACpBI,EAAML,cAAe,EACrBK,EAAMH,cAAe,GAEvBK,QAXQ,SAWAF,EAAOG,GACbH,EAAMH,cAAe,EACrBG,EAAML,cAAe,EACrBK,EAAMJ,aAAc,EACpBI,EAAMN,MAAQS,EAAOC,SAEvBC,sBAjBQ,SAiBcL,EAAOG,GAC3BH,EAAMN,MAAQ,YAAIM,EAAMN,OAAOY,KAAI,SAAAC,GAAI,OACrCA,EAAKC,MAAQL,EAAOC,QAApB,2BACKG,GADL,IAEEE,KAAMF,EAAKE,KAAO,GAAK,IACrBF,MAGRG,sBAzBQ,SAyBcV,EAAOG,GAC3BH,EAAMN,MAAQ,YAAIM,EAAMN,OAAOY,KAAI,SAAAC,GAAI,OACrCA,EAAKC,MAAQL,EAAOC,QAApB,2BACKG,GADL,IAEEE,KAAMF,EAAKE,KAAO,GAAK,IACrBF,MAGRI,YAjCQ,SAiCIX,GACVA,EAAMN,MAAQ,YAAIM,EAAMN,OAAOY,KAAI,SAAAC,GAAI,kCAChCA,GADgC,IAEnCE,IAAK,W,mFChEFG,EAAyBrB,YAAY,CAChDC,KAAM,oBACNC,aAR2C,CAC3CoB,QAAS,GACTC,YAAa,GACbC,WAAY,GAMZjB,SAAU,CACRkB,WADQ,SACGhB,EAAOG,GAChBH,EAAMa,QAAUV,EAAOC,SAEzBa,cAJQ,SAIMjB,EAAOG,GACnBH,EAAMc,YAAYI,KAAKf,EAAOC,UAEhCe,eAPQ,SAOOnB,EAAOG,GACpB,IAAMiB,EAAYpB,EAAMc,YAAYO,OAAOlB,EAAOC,QAAQkB,SAAU,GACpEtB,EAAMc,YAAYO,OAAOlB,EAAOC,QAAQmB,SAAU,EAAGH,EAAU,KAEjEI,iBAXQ,SAWSxB,EAAOG,GACtBH,EAAMc,YAAYO,OAAOlB,EAAOC,QAAS,IAE3CqB,iBAdQ,SAcSzB,GACfA,EAAMc,YAAc,IAEtBY,eAjBQ,SAiBO1B,GACXA,EAAMa,QAAQrB,MAAUQ,EAAMa,QAAQc,MAEtC3B,EAAMe,WAAmC,EAAtBf,EAAMa,QAAQc,MAAY3B,EAAMc,YAAYc,QAC7D,SAACC,EAAKC,GAAN,OAAYD,GAAOC,EAAEH,OAAS,KAAI,GAEhC3B,EAAMc,YAAYiB,OACtB/B,EAAMe,WAAaf,EAAMc,YAAYc,QAAO,SAACC,EAAKC,GAAN,OAAYD,GAAOC,EAAEH,OAAS,KAAI,GAE5E3B,EAAMe,WAAa,M,OCgEdiB,EA7FuC,SAAC,GAGhD,IAFLzB,EAEI,EAFJA,KACA0B,EACI,EADJA,MAEMC,EAAW1D,IACTkC,EAA0BpB,EAAW6C,QAArCzB,sBACR,EAA6CE,EAAuBuB,QAA5DhB,EAAR,EAAQA,eAAgBK,EAAxB,EAAwBA,iBAElBY,EAAaC,iBAAsB,MACzC,EAAwCC,oBAAkB,GAA1D,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,oBAAkB,GAAxD,mBAAOG,EAAP,KAAoBC,EAApB,KAEA,EAA0DC,YAAQ,CAC9DC,OAAQ,mBACRC,KAF8D,WAG1D,MAAQ,CAACZ,UAEba,QAAS,SAAAC,GAAO,MAAK,CACjBC,SAAUD,EAAQE,eAClBC,YAAaH,EAAQI,SACrBC,OAAQL,EAAQM,qCARxB,0BAAQL,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,YAAaE,EAA/B,EAA+BA,OAASE,EAAxC,KAYA,EAAqDC,YAAQ,CACzDC,KAAM,mBACNjD,KAAMA,EACNuC,QAAS,SAAAC,GAAO,MAAK,CACjBU,SAAUV,EAAQE,eAClBS,eAAgBX,EAAQY,eAE5BC,IAPyD,SAOrDrD,EAAMwC,GAEiE,IAAD,EAArEA,EAAQc,WAAuD,OAA1Cd,EAAQe,iBAC9B5B,EAASf,EAAe,CACtBG,SAAUW,EACVV,UAAU,UAAAwB,EAAQe,uBAAR,eAAuC7B,QAAS,QAZpE,0BAAQwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,eAAiBK,EAAnC,KAgCA,OATAC,qBAAU,WACHZ,IACHZ,EAAgBY,EAAOa,EAAI,GAC3BvB,EAAeU,EAAOa,EAAI,MAE3B,CAACb,IAEJW,EAAeT,EAAelB,IAG1B,mCACE,qBACI8B,UAAS,UACFC,IAAkCC,oBADhC,6BAEHV,EAAiBS,IAAkCE,QAAU,KAF1D,6BAGHnB,GAAeX,EACf4B,IAAkCG,SAC9BpB,GAAeT,EACjB0B,IAAkCI,WAChC,MAEVC,IAAKpC,EACLqC,iBAAgBhB,EAChBiB,iBAAgB1B,EAZpB,UAcI,sBAAMkB,UAAWC,IAAkCQ,UAAnD,SACI,cAAC,WAAD,CAAUnB,KAAK,gBAGfjD,EAAKf,QACLe,EAAKqE,SACLrE,EAAKoB,OACP,cAAC,qBAAD,CACIkD,KAAMtE,EAAKf,KACXsF,UAAWvE,EAAKqE,MAChBjD,MAAOpB,EAAKoB,MACZoD,YAAa,mBACTxE,EAAKC,KA1CA,SAACwE,EAAgB/C,GACxCC,EAASV,EAAiBS,IAC1BC,EAASxB,EAAsBsE,IAwCDC,CAAiB1E,EAAKC,IAAKyB,YC/EhDiD,EAAiB,SAACC,GAC7B,IAG0BC,EAHpBC,EAAiB,IAAIC,KAAKH,GAC1BI,EArBiB,SAACF,GACxB,IACMG,EAAc,IAAIF,KAAKA,KAAKG,OAG5BC,EAAsBJ,KAAKK,IAC/BN,EAASO,cACTP,EAASQ,WACTR,EAASS,WAELC,EAAmBT,KAAKK,IAC5BH,EAAMI,cACNJ,EAAMK,WACNL,EAAMM,WAGR,OAAOE,KAAKC,OAAOF,EAAWL,GAfO,OAoBPQ,CAAiBb,GAOzCc,EACc,IAAlBZ,EACE,6CACkB,IAAlBA,EACE,iCADF,UAEKA,EAFL,aARsBH,EAUiBG,GATpC,IAAM,GAAKH,EAAI,IAAM,IAAMA,EAAI,IAAM,IAAMA,EAAI,KAAO,IACzD,qBAAQ,2BAMR,mCAIEgB,EAAgBf,EAASgB,WAAWC,WAAWC,SAAS,EAAG,KAC3DC,EAAenB,EAASoB,aAAaH,WAAWC,SAAS,EAAG,KAC5DG,EAAmB,IAAIC,KAAKC,aAAa,QAAS,CAEtDC,YAAa,eACZC,OACD,EAAIzB,EAAS0B,oBAAsB,IAGrC,MAAM,GAAN,OAAWZ,EAAX,aAAmBC,EAAnB,YAA4BI,EAA5B,iBAAyCE,IAGpC,SAASM,EAAUxH,GACxB,IAAMyH,EAAmCC,SAASC,OAAOC,MACvD,IAAIC,OAAO,WAAa7H,EAAK8H,QAAQ,mBAAoB,QAAU,aAErE,OAAOL,EAAUM,mBAAmBN,EAAQ,IAAM,GAG7C,SAASO,EACdhI,EACAiI,GAEO,IADPC,EACM,uDADgB,GAEtB,GAA4B,iBAAjBA,EAAMC,SAAuBD,EAAMC,QAAS,CACrD,IAAMC,EAAI,IAAItC,KACdsC,EAAEC,QAAQD,EAAEE,UAA4B,IAAhBJ,EAAMC,SAC9BD,EAAMC,QAAUC,EAEdF,EAAMC,mBAAmBrC,MAAQoC,EAAMC,UACzCD,EAAMC,QAAUD,EAAMC,QAAQI,eAEhC,IAEIC,EAFEC,EAAsBC,mBAAmBT,GAC3CU,EAAwB3I,EAAO,IAAMyI,EAEzC,IAAKD,KAAYN,EAAO,CACtBS,GAAiB,KAAOH,EACxB,IAAMI,EAAYV,EAAMM,IACN,IAAdI,IACFD,GAAiB,IAAMC,GAG3BlB,SAASC,OAASgB,EAGb,SAASE,EAAa7I,GAC3BgI,EAAUhI,EAAM,GAAI,CAAE8I,KAAM,IAAKX,SAAU,IC5E7C,IAKaY,EAAUhJ,YAAY,CACjCC,KAAM,KACNC,aAP4B,CAC5B+I,aAAa,EACbC,SAAS,GAMT3I,SAAU,CACR4I,kBADQ,SACU1I,EAAOG,KAEzBwI,iBAHQ,SAGS3I,GACfA,EAAMwI,aAAc,EACpBxI,EAAMyI,SAAU,GAGlBG,oBARQ,SAQY5I,GAClBA,EAAMwI,aAAc,EACpBxI,EAAMyI,SAAU,GAGlBI,kBAbQ,SAaU7I,GAChBA,EAAMwI,aAAc,EACpBxI,EAAMyI,SAAU,GAGlBK,mBAlBQ,SAkBW9I,GACjBA,EAAMwI,aAAc,EACpBxI,EAAMyI,SAAU,MC7BTM,EAAY,WACvB,OAAO,WAAkC,IAAjC7G,EAAgC,uDAArB1D,IACjB0D,EAASqG,EAAQpG,QAAQuG,kBAAkB,CAAEM,IAAK5J,KAClD8C,EAAS+G,EAAU9G,QAAQpC,aAIlBmJ,EAAW,WACtB,OAAO,WAAkC,IAAjChH,EAAgC,uDAArB1D,IACjB0D,EAASqG,EAAQpG,QAAQwG,sBAmChBM,EAAY1J,YAAY,CACnCC,KAAM,OACNC,aAX8B,CAC9B0J,OAAQ,GACRC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAa,EACbC,iBAAkB,GAMlB1J,SAAU,CACRC,QADQ,SACAC,GACNA,EAAMoJ,aAAc,EACpBpJ,EAAMqJ,YAAa,EACnBrJ,EAAMsJ,aAAc,GAEtBrJ,OANQ,SAMDD,GACLA,EAAMqJ,YAAa,EACnBrJ,EAAMoJ,aAAc,EACpBpJ,EAAMsJ,aAAc,GAEtBpJ,QAXQ,SAWAF,GACNA,EAAMsJ,aAAc,EACpBtJ,EAAMoJ,aAAc,EACpBpJ,EAAMqJ,YAAa,GAErBI,cAhBQ,SAgBMzJ,EAAOG,GAjDA,IAACgJ,EAsDpBnJ,EAAMmJ,SAtDcA,EAsDYhJ,EAAOC,QAAQ+I,QArD5CO,MAAK,SAASC,EAAWC,GAC9B,GAAMD,EAAEE,WAAeD,EAAEC,UAAW,CAClC,IAAMC,EAAa,IAAIxE,KAAKqE,EAAEE,WAE9B,OADmB,IAAIvE,KAAKsE,EAAEC,WAClBE,UAAYD,EAAKC,UAE1B,OAAO,KAEPZ,GA8CHnJ,EAAMuJ,YAAcpJ,EAAOC,QAAQ4J,MACnChK,EAAMwJ,iBAAmBrJ,EAAOC,QAAQ6J,eC3DjCC,EAAU,WACrB,OAAO,WAAkC,IAAjChI,EAAgC,uDAArB1D,IACX2L,EAAsBnD,EAAU,gBAAkB,GAElDoD,EAA8B,IAAIC,QACxCD,EAAmBE,OAAO,eAAgB,oBAC1CF,EAAmBE,OAAO,gBAAiBH,GAE3CjI,EAASqI,EAAUpI,QAAQpC,WAE3ByK,MAAMrL,EAAc,CAClBsL,OAAQ,MACRC,QAASN,IAEVO,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,IAAqB,IAAjBA,EAAKhL,QACPgC,EAASqI,EAAUpI,QAAQgJ,QAAQD,EAAKE,KAAK5L,OAC7C0C,EAASqI,EAAUpI,QAAQkJ,SAASH,EAAKE,KAAKE,QAE9CpJ,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAE5CrJ,EAASqI,EAAUpI,QAAQjC,gBAExB,GAAqB,6BAAjBgL,EAAKM,QAEZtJ,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAC5CrJ,EAASqI,EAAUpI,QAAQjC,eAExB,IAAqB,gBAAjBgL,EAAKM,QA6DZ,MAAMT,MAAMG,EAAKM,SA5DjBC,IACCd,MAAK,SAACe,GACL,IAAKA,EAAYb,IAAMa,EAAYZ,QAAU,IAC3C,MAAMC,MAAMW,EAAYV,YAE1B,OAAOU,EAAYT,UAEpBN,MAAK,SAACgB,GACL,IAA6B,IAAzBA,EAAazL,QA0Cf,MAAM6K,MAAMY,EAAaH,SAzCzBhE,EAAU,cAAemE,EAAaxB,YAAa,CAAE7B,KAAM,MAC3Dd,EAAU,eAAgBmE,EAAaF,aAAc,CAAEnD,KAAM,MAE7D8B,EAAmBwB,OAAO,iBAC1BxB,EAAmBE,OAAO,gBAAiBqB,EAAaxB,aAAe,IAEvEK,MAAMrL,EAAc,CAClBsL,OAAQ,MACRC,QAASN,IAEVO,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,GAAIA,EAAKhL,QACPgC,EAASqI,EAAUpI,QAAQgJ,QAAQD,EAAKE,KAAK5L,OAC7C0C,EAASqI,EAAUpI,QAAQkJ,SAASH,EAAKE,KAAKE,QAE9CpJ,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAE5CrJ,EAASqI,EAAUpI,QAAQjC,eAExB,IAAqB,6BAAjBgL,EAAKM,QAMZ,MAAMT,MAAMG,EAAKM,SAJjBtJ,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAC5CrJ,EAASqI,EAAUpI,QAAQjC,eAM9B2L,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAC5CrJ,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,SAOjBD,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAC5CrJ,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,UAOjBD,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAC5CrJ,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,QAoTLL,EAAe,WAC1B,OAAOjB,MPpa4B,mDOoaP,CAC1BC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBuB,KAAMC,KAAKC,UAAU,CACnB,MAASnF,EAAU,qBAKZoF,EAAe,WAC1B,OAAO,WAAkC,IAAjClK,EAAgC,uDAArB1D,IACjB0D,EAASqG,EAAQpG,QAAQuG,kBAAkB,CACzCM,IAAK3J,EACLgN,OAAQrF,EAAU,gBAAkB,IAAIM,QAAQ,UAAW,OAG7DpF,EAAS+G,EAAU9G,QAAQpC,aAIlBuM,EAAc,WACzB,OAAO,WAAkC,IAAjCpK,EAAgC,uDAArB1D,IACjB0D,EAASqG,EAAQpG,QAAQwG,sBAKvB4D,EAAuB,SAUvB9M,EAA0B,CAC9B2L,KAAM,CACJoB,SAAUD,GAEZE,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,cAAc,GAGHrC,EAAYhL,YAAY,CACnCC,KAAM,OACNC,eACAK,SAAU,CACRC,QADQ,SACAC,GACNA,EAAMyM,aAAc,EACpBzM,EAAM0M,YAAa,EACnB1M,EAAM2M,aAAc,GAEtB1M,OANQ,SAMDD,GACLA,EAAM0M,YAAa,EACnB1M,EAAMyM,aAAc,EACpBzM,EAAM2M,aAAc,GAEtBzM,QAXQ,SAWAF,GACNA,EAAM2M,aAAc,EACpB3M,EAAMyM,aAAc,EACpBzM,EAAM0M,YAAa,GAErBvB,QAhBQ,SAgBAnL,EAAOG,GACbH,EAAMoL,KAAN,2BACKpL,EAAMoL,MADX,IAEE5L,KAAMW,EAAOC,WAGjByM,YAtBQ,SAsBI7M,EAAOG,GACjBH,EAAMoL,KAAN,2BACKpL,EAAMoL,MADX,IAEEoB,SAAUrM,EAAOC,WAGrBiL,SA5BQ,SA4BCrL,EAAOG,GACdH,EAAMoL,KAAN,2BACKpL,EAAMoL,MADX,IAEEE,MAAOnL,EAAOC,WAGlB0M,YAlCQ,SAkCI9M,GAEVA,EAAM0M,YAAa,GAErBK,cAtCQ,SAsCM/M,GACZA,EAAMoL,KAAK5L,KAAO,GAClBQ,EAAMoL,KAAKE,MAAQ,GAEnBtL,EAAMoL,KAAKoB,SAAWD,GAExBhB,iBA5CQ,SA4CSvL,EAAOG,GACtBH,EAAM4M,aAAezM,EAAOC,SAE9B4M,mBA/CQ,SA+CWhN,GACjBA,EAAM4M,aAA8C,KAA7B5F,EAAU,gBACA,KAA9BA,EAAU,oBC7YNiG,EAAa1N,YAAY,CACpCC,KAAM,QACNC,aAV+B,CAC/ByN,UAAW,GACXC,cAAc,EACdC,aAAa,EACbC,cAAc,EACdC,kBAAkB,GAMlBxN,SAAU,CACRC,QADQ,SACAC,GACNA,EAAMmN,cAAe,EACrBnN,EAAMoN,aAAc,EACpBpN,EAAMqN,cAAe,EACrBrN,EAAMkN,UAAY,IAEpBjN,OAPQ,SAODD,GACLA,EAAMoN,aAAc,EACpBpN,EAAMmN,cAAe,EACrBnN,EAAMqN,cAAe,EACrBrN,EAAMkN,UAAY,CAChBhN,SAAS,IAGbA,QAfQ,SAeAF,EAAOG,GACbH,EAAMqN,cAAe,EACrBrN,EAAMmN,cAAe,EACrBnN,EAAMoN,aAAc,EACpBpN,EAAMkN,UAAY,CAChB1N,KAAMW,EAAOC,QAAQZ,KACrB+N,GAAIpN,EAAOC,QAAQoN,OACnBtN,QAASC,EAAOC,QAAQF,UAG5BuN,eAzBQ,SAyBOzN,GACbA,EAAMsN,kBAAmB,GAE3BI,gBA5BQ,SA4BQ1N,GACdA,EAAMsN,kBAAmB,MCmBhBK,GAvKqB,WAChC,IAAMzL,EAAW1D,IACjB,EAAyDc,EAAW6C,QAA5D9B,EAAR,EAAQA,sBAAuBK,EAA/B,EAA+BA,sBAC/B,EAAuCE,EAAuBuB,QAAtDnB,EAAR,EAAQA,WAAYU,EAApB,EAAoBA,eACpB,EAA6ChD,GAAe,SAAAsB,GAAK,OAAIA,EAAM4N,qBAAnE/M,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,YAAaC,EAA9B,EAA8BA,WACtB6L,EAAiBlO,GAAe,SAAAsB,GAAK,OAAIA,EAAMoL,QAA/CwB,aAEFiB,EAAUC,cAsBhB9J,qBAAU,WACN9B,EAASR,OACV,CAACQ,EAAUrB,EAASC,EAAaY,IAEpC,IAAMqM,EAAoB,SAACC,GACvB9L,EAASlB,EAAWgN,IACdnN,EAAQL,MACV0B,EAASxB,EAAsBG,EAAQL,MACvC0B,EAASxB,EAAsBG,EAAQL,OAErCwN,EAAWxN,MACb0B,EAAS7B,EAAsB2N,EAAWxN,MAC1C0B,EAAS7B,EAAsB2N,EAAWxN,QAMlD,EAA6BmC,YAAQ,CACjCC,OAAQ,MACRC,KAFiC,SAE5BmL,GACDD,EAAkBC,MAHjBC,EAAT,oBAOA,EAAgCtL,YAAQ,CACpCC,OAAQ,MACRC,KAFoC,SAE/BmL,GACDD,EAAkBC,MAHjBE,EAAT,oBAOA,EAAiCvL,YAAQ,CACrCC,OAAQ,CAAC,QAAS,UADbuL,EAAT,oBAQA,OACI,qCACI,qBAAIjK,UAAWkK,IAAwBC,wBAA0B,yBAAjE,UACI,oBAAInK,UAAU,OAAOM,IAAKyJ,EAA1B,SACOpN,EAAQrB,KACP,cAAC,qBAAD,CACIgE,KAAK,MACL8K,UAAU,EACVzJ,KAAMhE,EAAQrB,KAAO,8BACrBsF,UAAWjE,EAAQ+D,OAAS,GAC5BjD,MAAOd,EAAQc,OAAS,IAG5B,qBACIuC,UACIkK,IAAwBG,SACxB,mDAHR,oBAUR,oBAAI/J,IAAK2J,EAAT,SAEMrN,EAAYiB,OAAS,EACnB,oBACImC,UAAWkK,IAAwBI,kCAAoC,QAD3E,SAIK1N,EAAYR,KAAI,SAACC,EAAM0B,GAAP,OACb,cAAC,EAAD,CACI1B,KAAMA,EACN0B,MAAOA,IAED1B,EAAKC,KAAO,IAtC9CwF,KAAKC,MAAsB,IAAhBD,KAAKyI,eA+BQ,gBAYR,oBACIvK,UAAWkK,IAAwBM,YACnC,6DAFJ,SAKoB,IAAf3N,EACG,4JAEA,0HAKhB,oBAAImD,UAAU,OAAOM,IAAK0J,EAA1B,SACOrN,EAAQrB,KACP,cAAC,qBAAD,CACI8O,UAAU,EACV9K,KAAK,SACLqB,KAAMhE,EAAQrB,KAAO,wBACrBsF,UAAWjE,EAAQ+D,OAAS,GAC5BjD,MAAOd,EAAQc,OAAS,IAG5B,qBACIuC,UACIkK,IAAwBG,SACxB,sDAHR,uBAWZ,sBAAKrK,UAAS,UACHkK,IAAwBO,yBADrB,iEAGH9N,EAAQrB,KAA0C,KAAnC4O,IAAwBQ,UAHlD,UAMI,mBAAG1K,UAAU,+BAAb,SACKnD,IAEL,sBAAMmD,UAAU,aAAhB,SACI,cAAC,eAAD,CAAcV,KAAK,cAEvB,cAAC,SAAD,CACIA,KAAK,UACLqL,KAAK,SACLC,QAASjO,EAAQrB,KArJN,WACvB,GAAIoN,GACA,GAAM/L,EAAQL,IAAK,CACf,IAAMd,EAAsB,CAACmB,EAAQL,KACrCM,EAAYR,KAAI,SAAAC,GAAI,OAChBA,EAAKC,KAAOd,EAAMwB,KAAKX,EAAKC,QAEhC0B,EDtBU,SAACxC,GACzB,OAAO,WAAkC,IAAjCwC,EAAgC,uDAArB1D,IACjB0D,EAAS+K,EAAW9K,QAAQpC,WAG5BmC,EAAS+K,EAAW9K,QAAQsL,kBAG5BjD,MAAM3L,EAAe,CACnB4L,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBqE,cAAe/H,EAAU,gBAE3BiF,KAAMC,KAAKC,UAAU,CACnB,YAAezM,MAGhBiL,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,GAAIA,EAAKhL,QACPgC,EAAS+K,EAAW9K,QAAQjC,QAAQ,CAClCV,KAAM0L,EAAK1L,KACXgO,OAAQtC,EAAK8D,MAAMxB,OACnBtN,QAASgL,EAAKhL,eAIb,KAAIgL,EAAKM,SAA4B,gBAAjBN,EAAKM,QAyD5B,MAAMT,MAAMG,EAAKM,SAxDjBtJ,EAAS+K,EAAW9K,QAAQpC,WAC5B0L,IACCd,MAAK,SAACe,GACL,IAAKA,EAAYb,IAAMa,EAAYZ,QAAU,IAC3C,MAAMC,MAAMW,EAAYV,YAE1B,OAAOU,EAAYT,UAEpBN,MAAK,SAACgB,GACL,IAA6B,IAAzBA,EAAazL,QAsCf,MAAM6K,MAAMY,EAAaH,SArCzBhE,EAAU,cAAemE,EAAaxB,YAAa,CAAE7B,KAAM,MAC3Dd,EAAU,eAAgBmE,EAAaF,aAAc,CAAEnD,KAAM,MAC7DpG,EAAS+K,EAAW9K,QAAQpC,WAC5ByK,MAAM3L,EAAe,CACnB4L,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBqE,cAAe/H,EAAU,gBAE3BiF,KAAMC,KAAKC,UAAU,CACnB,YAAezM,MAGlBiL,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,IAAIA,EAAKhL,QAQP,MAAM6K,MAAMG,EAAKM,SAPjBtJ,EAAS+K,EAAW9K,QAAQjC,QAAQ,CAClCV,KAAM0L,EAAK1L,KACXgO,OAAQtC,EAAK8D,MAAMxB,OACnBtN,QAASgL,EAAKhL,cAOnB2L,OAAM,SAACC,GACN5J,EAAS+K,EAAW9K,QAAQlC,UAC5B8L,QAAQC,IAAIF,SAOjBD,OAAM,SAACC,GACN5J,EAAS+K,EAAW9K,QAAQlC,UAC5B8L,QAAQC,IAAIF,UAOjBD,OAAM,SAACC,GACN5J,EAAS+K,EAAW9K,QAAQlC,UAC5B8L,QAAQC,IAAIF,MAEdmD,SAAQ,WAEN/M,EAAStB,EAAuBuB,QAAQnB,WAAW,KACnDkB,EAAStB,EAAuBuB,QAAQV,oBACxCS,EAAS5C,EAAW6C,QAAQxB,mBC/EXuO,CAAWxP,UAKxBmO,EAAQvG,QAAQ,CACZ6H,SAAU,SACVnP,MAAO,CAAEoP,KAAM,QAuIkC,aAHjD,oG,sECzGDC,GApDeC,gBAC1B,SAAE/O,GACF,IAAM2B,EAAW1D,IACT6B,EAA0Bf,EAAW6C,QAArC9B,sBACAY,EAAkBL,EAAuBuB,QAAzClB,cAEF4M,EAAUC,cAShB,EAA6BvK,YAAQ,CACjCC,KAAMjD,EAAKiD,MAAQ,GACnBjD,KAAMA,EACNuC,QAAS,SAAAC,GAAO,MAAK,CACnBwM,QAASxM,EAAQY,aAAe,GAAM,IAExCC,IANiC,SAM7BrD,EAAMwC,GAEHA,EAAQc,WAA2B,QAAdtD,EAAKiD,MAAoBjD,EAAKC,MAClD0B,EAASjB,EAAcV,IACvB2B,EAAS7B,EAAsBE,EAAKC,UAVhD,mBAAQ+O,EAAR,KAAQA,QAAUC,EAAlB,KAeA,OACI,6BACI,sBACItL,UAAWuL,KAA4BC,gBACvCZ,QA1BkB,WAC1BjB,EAAQvG,QAAQ,CACZ6H,SAAS,gBAAD,OAAkB5O,EAAKC,KAC/BR,MAAO,CAAE2P,WAAY9B,EAAQ+B,aAwBzBpL,IAAKgL,EACLK,MAAO,CAACN,WAJZ,UAMKhP,EAAKE,IAAM,cAAC,UAAD,CAASqP,MAAOvP,EAAKE,MAAS,KAC1C,qBAAKsP,IAAKxP,EAAKqE,MAAOoL,IAAKzP,EAAKf,KAAMyQ,MAAO1P,EAAKf,KAAM0E,UAAU,cAC9D,sBAAKA,UAAW,sBAAhB,UACI,mBAAGA,UAAU,qCAAb,SAAmD3D,EAAKoB,QACxD,cAAC,eAAD,CAAc6B,KAAK,eAE3B,mBAAGU,UAAWuL,KAA4BS,gBAAkB,+BAA5D,SACK3P,EAAKf,eCxBX2Q,GAtBmBC,sBAC9B,SAAC1I,EAAOlD,GAAR,OACA,0BAAS+I,GAAI7F,EAAM2I,WAAY7L,IAAKA,EAApC,UACI,oBAAIN,UAAU,wCAAd,SACKwD,EAAM4I,UAGT5I,EAAMhI,MAAMqC,OAAS,EACnB,oBAAImC,UAAWqM,KAAgCC,wBAA0B,wBAAzE,SACK9I,EAAMhI,MAAMY,KAAI,SAACC,GAAD,OACb,cAAC,GAAD,eAEQA,GADCA,EAAKC,UAKxB,oBAAI0D,UAAU,uDAAd,yGCiFKuM,GA7Fe,WAC1B,MAA8BnO,mBAAiB,OAA/C,mBAAOoO,EAAP,KAAgBC,EAAhB,KACQjR,EAAUhB,GAAe,SAAAsB,GAAK,OAAIA,EAAMN,SAAxCA,MAEFkR,EAAS,SAACC,GAA2B,IAAD,EACtCF,EAAWE,GACX,UAAA3J,SAAS4J,eAAeD,UAAxB,SAAkCE,eAAe,CAACC,SAAS,YAYzDC,EAAgC,CAClCC,UAAW,EACXC,iBAAiB,EACjBC,MAAO,KAEX,EAA4BC,aAAUJ,GAAtC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA8BF,aAAUJ,GAAxC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,aAAUJ,GAA1C,mBAAOS,EAAP,KAAiBC,EAAjB,KAcA,OAZA3N,qBAAU,WACFuN,EACFZ,EAAW,OAEJgB,EACPhB,EAAW,SAEJc,GACPd,EAAW,UAEZ,CAACY,EAAWE,EAAYE,IAGzB,qCACI,oBAAIzN,UAAU,uCAAd,mGAGA,sBAAKA,UAAW0N,KAAwBC,aAAxC,UACI,cAAC,MAAD,CACIC,OAAoB,QAAZpB,EACR5B,QAvCU,WACtB8B,EAAO,QAuCKnJ,MAAM,iCAHV,4CAOA,cAAC,MAAD,CACIqK,OAAoB,UAAZpB,EACR5B,QA3CY,WACxB8B,EAAO,UA2CKnJ,MAAM,iCAHV,4CAOA,cAAC,MAAD,CACIqK,OAAoB,SAAZpB,EACR5B,QA/CW,WACvB8B,EAAO,SA+CKnJ,MAAM,6CAHV,2DAQJ,sBACIvD,UAAW0N,KAAwBG,iBADvC,UAGI,cAAC,GAAD,CACIzB,QAAQ,iCACRD,WAAW,MACX3Q,MAAOA,EAAMsS,QAAO,SAAAzR,GAAI,MAAkB,QAAdA,EAAKiD,QACjCgB,IAAK8M,IAET,cAAC,GAAD,CACIhB,QAAQ,iCACRD,WAAW,QACX3Q,MAAOA,EAAMsS,QAAO,SAAAzR,GAAI,MAAkB,UAAdA,EAAKiD,QACjCgB,IAAKkN,IAET,cAAC,GAAD,CACIpB,QAAQ,6CACRD,WAAW,OACX3Q,MAAOA,EAAMsS,QAAO,SAAAzR,GAAI,MAAkB,SAAdA,EAAKiD,QACjCgB,IAAKgN,W,yCCtFVS,GATyB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACvC,OACQ,qBACIhO,UAAWiO,KAAmBC,cAC9BtD,QAASoD,KCHnBG,GAAYnL,SAAS4J,eAAe,cAyD3BwB,GA/CW,SAAC,GAMpB,IALHC,EAKE,EALFA,SACAC,EAIE,EAJFA,OACAN,EAGE,EAHFA,WAGE,IAFFO,wBAEE,aADFC,oBACE,SAGIC,EAAe,SAACC,GACJ,WAAVA,EAAEC,KACFX,IACJU,EAAEE,4BAWN,OAPA9O,qBAAU,WAEN,OADAkD,SAAS6L,iBAAiB,UAAWJ,GAC9B,WACHzL,SAAS8L,oBAAoB,UAAWL,MAE7C,IAEIM,IAASC,aACZ,qCACI,cAAC,GAAD,CAAchB,WAAYA,IAC1B,sBAAKhO,UAAWiP,KAAYC,gBAAkB,2BAA9C,UACI,oBAAIlP,UAAS,UACNiP,KAAYE,aADN,YACsBX,EAC3B,gCAEA,6BAJR,SAOKF,IAGL,sBAAMtO,UAAS,UAAMiP,KAAYG,WAAlB,YAAgCb,EAAmBU,KAAYI,WAAa,MAA3F,SACI,cAAC,YAAD,CAAWzE,QAASoD,EAAY1O,KAAK,cAExC+O,QAGTF,K,oBC7DO,OAA0B,2C,oBCA1B,OAA0B,iCCY1BmB,GARI,WACjB,OACE,qBAAKtP,UAAWuP,KAAaC,OAA7B,SACE,qBAAK3D,IAAK4D,GAAM3D,IAAI,GAAGC,MAAO,GAAG/L,UAAWuP,KAAaG,aCgEhDC,GAhEU,WACrB,MAKMnV,GACF,SAAAsB,GAAK,OAAIA,EAAMgP,SALf9B,EADJ,EACIA,UACAC,EAFJ,EAEIA,aACAE,EAHJ,EAGIA,aACAD,EAJJ,EAIIA,YAKJ,OACI,sBAAKlJ,UAAW4P,KAAmBC,wBAA0B,eAA7D,UAEQ5G,IACCC,IACAC,GACD,qBAAKnJ,UAAW4P,KAAmBE,iBAAnC,SACI,cAAC,GAAD,MAIJ5G,IACCD,IACAE,GACD,qCACI,mBAAGnJ,UAAU,4BAAb,yGAGA,mBAAGA,UAAU,6DAAb,0PAMJmJ,IACCD,IACAD,GACD,qCACI,mBAAGjJ,UAAW4P,KAAmBG,SAAW,+BAA5C,SACK/G,EAAUK,KAEf,mBAAGrJ,UAAU,wCAAb,iIAGA,qBAGI6L,IAAKmE,GAAqB,MAAQlO,KAAKC,MAAoB,IAAdD,KAAKyI,UAClDuB,IAAI,sEACJC,MAAM,sEACNkE,OAAO,QAEX,mBAAGjQ,UAAU,yCAAb,qJAGA,mBAAGA,UAAU,kDAAb,mQ,oBC0BLkQ,GAxEM,WACnB,IAAMlS,EAAW1D,IACTkP,EAAoBT,EAAW9K,QAA/BuL,gBACAV,EAAuBzC,EAAUpI,QAAjC6K,mBAER,EAIItO,GACF,SAAAsB,GAAK,OAAIA,EAAMN,SAJfC,EADF,EACEA,aACAE,EAFF,EAEEA,aACAD,EAHF,EAGEA,YAMA0N,EACE5O,GACF,SAAAsB,GAAK,OAAIA,EAAMgP,SAFf1B,iBAcF,OALAtJ,qBAAU,WAER9B,EAAS8K,OACR,IAGD,qCAEMpN,IACCD,IACAE,GACC,oBAAIqE,UAAU,mEAAd,mGAKFvE,IACCC,IACAC,GACC,cAAC,GAAD,IAGFA,IACCD,IACAD,GACC,qBAAKuE,UAAWmQ,IAAOC,UAAvB,SACE,eAACC,GAAA,EAAD,CAAaC,QAASC,KAAtB,UACE,yBAASvQ,UAAWmQ,IAAOK,eAAiB,QAA5C,SACE,cAAC,GAAD,MAEF,yBAASxQ,UAAWmQ,IAAOM,gBAAkB,QAA7C,SACE,cAAC,GAAD,WAMRrH,GACE,cAAC,GAAD,CACEkF,OAAQ,KACRN,WA5CS,WACjBhQ,EAASwL,MA4CD+E,kBAAgB,EAHlB,SAII,cAAC,GAAD,U,qBC/CDmC,GAvBS,SAAClN,GACvB,OACE,uBACExD,UAAW2Q,KAAWC,eACtBC,aAAa,KACbC,SAAUtN,EAAMuN,aAHlB,UAKGvN,EAAMuI,OACL,uBAAO/L,UAAU,6BAAjB,SACGwD,EAAMuI,QAGVvI,EAAM6K,SAEL7K,EAAMwN,YACJ,cAAC,SAAD,CAAQ1R,KAAK,UAAUqL,KAAK,SAA5B,SACGnH,EAAMwN,iBCoMJC,GAlNc,WAC3B,IAAMjT,EAAW1D,IAElB,EAIKE,GACF,SAAAsB,GAAK,OAAIA,EAAMoL,QAJfqB,EADH,EACGA,YACAE,EAFH,EAEGA,YACAD,EAHH,EAGGA,WAIMI,EAAgBvC,EAAUpI,QAA1B2K,YAEFe,EAAUC,cACV8B,EAAWwF,cAEXC,EAAa,WACjBnT,EAAS4K,MAIX9I,qBAAU,WACRqR,MACC,IAGH,MAAoC/S,mBAAiB,IAArD,mBAAOgT,EAAP,KAAmBC,EAAnB,KACA,EAAsCjT,oBAAkB,GAAxD,mBAAOkT,EAAP,KAAqBC,EAArB,KACA,EAA0CnT,mBAAiB,IAA3D,mBAAOoT,EAAP,KAAsBC,EAAtB,KACA,EAA4CrT,oBAAkB,GAA9D,mBAAOsT,EAAP,KAAwBC,EAAxB,KAEMC,EAAgBzT,iBAAyB,MAEzC0T,EAAsB,oBAyBtBC,EAAeC,uBAAY,WAG/B,IAAMC,EAA2B,CAC/B5K,OAAO,EACPkB,UAAU,GAsBZ,OAlBKuJ,EAAYI,KAAKb,GAIpBY,EAAY5K,OAAQ,EAHpBmK,GAAc,GAOZC,EAAc3T,OAAS,EAEI,IAAzB2T,EAAc3T,QAChB8T,GAAiB,GAInBK,EAAY1J,UAAW,KAGrB0J,EAAY5K,QAAS4K,EAAY1J,YAMpC,CAAC8I,EAAYI,IAMVU,EAAoB,WAGxB,IAAQhH,GAASQ,EAAS5P,OAAS,CAAEoP,KAAM,CAAED,SAAU,OAA/CC,KACRvB,EAAQvG,QAAQ8H,IAGZiH,EAAeJ,uBAAY,SAACrD,GAE9B,IdmJgBxH,EAAakL,GcpJ7B1D,EAAE2D,iBAC6BP,OAOxBvJ,GACHvK,Gd2IYkJ,Ec3IG,CACbE,MAAOgK,EACP9I,SAAUkJ,GdyIaY,EcxItBF,EdyIJ,WAAkC,IAAjClU,EAAgC,uDAArB1D,IACjB0D,EAASqI,EAAUpI,QAAQpC,WAE3ByK,MAAMvL,EAAe,CACnBwL,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBuB,KAAMC,KAAKC,UAAU,CACnB,MAASf,EAAKE,MACd,SAAYF,EAAKoB,aAGpB7B,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,IAAIA,EAAKhL,QAYP,MAAM6K,MAAMG,EAAKM,SAXjBtJ,EAASqI,EAAUpI,QAAQkJ,SAASH,EAAKE,KAAKE,QAC9CpJ,EAASqI,EAAUpI,QAAQgJ,QAAQD,EAAKE,KAAK5L,OAE7CgI,EAAU,cAAe0D,EAAKf,YAAa,CAAE7B,KAAM,MACnDd,EAAU,eAAgB0D,EAAKO,aAAc,CAAEnD,KAAM,MAErDpG,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAC5CrJ,EAASqI,EAAUpI,QAAQjC,WAC3BoW,OAMHzK,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAC5CrJ,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,Yc5Kb,CAACwJ,EAAYI,EAAejJ,IAU/B,OACE,qCAEIA,IACCC,GACC,cAAC,GAAD,IAEJ,sBAAKxI,UAAU,qBAAf,UAEIwI,IACCD,IACAE,GACC,sBAAKzI,UAAU,oBAAf,UACE,oBAAIA,UAAU,sDAAd,qHAGA,cAAC,SAAD,CACEV,KAAK,UACLqL,KAAK,SACLC,QAASuG,EAHX,mHAUH3I,GACD,eAAC,GAAD,CACEuD,MAAM,2BACNiF,WAAW,iCACXD,aAAcoB,EAHhB,UAKE,cAAC,QAAD,CACE7S,KAAM,QACNgT,YAAa,SACbC,SAlIU,SAAC7D,GAEjBmD,EAAYI,KAAKvD,EAAE8D,OAAOjP,QAC5BgO,GAAc,GAEhBF,EAAc3C,EAAE8D,OAAOjP,QA8HbA,MAAO6N,EACP9V,KAAM,QACNsM,OAAQ0J,EACRhR,IAAKsR,EACLa,UAAW,iHACX9H,KAAM,YAER,qBAAK3K,UAAW0R,EAAkB,iBAAmB,GAArD,SACE,cAAC,gBAAD,CACEa,SApIW,SAAC7D,GAEM,IAA1BA,EAAE8D,OAAOjP,MAAM1F,QACjB8T,GAAiB,GAEnBF,EAAiB/C,EAAE8D,OAAOjP,QAgIdA,MAAOiO,EACPlW,KAAM,kBAKd,sBAAK0E,UAAU,oBAAf,UACE,mBAAGA,UAAU,kDAAb,6IAGA,cAAC,SAAD,CACEV,KAAK,YACLqL,KAAK,SACLC,QAnEc,WACtBjB,EAAQvG,QAAQ,CAAE6H,SAAU,eA+DtB,6HAQF,sBAAKjL,UAAU,yBAAf,UACE,mBAAGA,UAAU,kDAAb,wFAGA,cAAC,SAAD,CACEV,KAAK,YACLqL,KAAK,SACLC,QA3EoB,WAC5BjB,EAAQvG,QAAQ,CAAE6H,SAAU,sBAuEtB,qIC0BKyH,GA/NiB,WAC9B,IAAM1U,EAAW1D,IAEjB,EAIIE,GACF,SAAAsB,GAAK,OAAIA,EAAMoL,QAJfqB,EADF,EACEA,YACAE,EAFF,EAEEA,YACAD,EAHF,EAGEA,WAIMI,EAAgBvC,EAAUpI,QAA1B2K,YAEFe,EAAUC,cACV8B,EAAWwF,cAEXC,EAAa,WACjBnT,EAAS4K,MAIX9I,qBAAU,WACRqR,MACC,IAEH,MAAkC/S,mBAAiB,IAAnD,mBAAOuU,EAAP,KAAkBC,EAAlB,KACA,EAAoCxU,oBAAkB,GAAtD,mBAAOyU,EAAP,KAAoBC,EAApB,KACA,EAAoC1U,mBAAiB,IAArD,mBAAOgT,EAAP,KAAmBC,EAAnB,KACA,EAAsCjT,oBAAkB,GAAxD,mBAAOkT,EAAP,KAAqBC,EAArB,KACA,EAA0CnT,mBAAiB,IAA3D,mBAAOoT,EAAP,KAAsBC,EAAtB,KACA,EAA4CrT,oBAAkB,GAA9D,mBAAOsT,EAAP,KAAwBC,EAAxB,KAEMoB,EAAe5U,iBAAyB,MACxCyT,EAAgBzT,iBAAyB,MAEzC0T,EAAsB,oBAkCtBC,EAAeC,uBAAY,WAG/B,IAAMC,EAA2B,CAC/B5K,OAAO,EACPkB,UAAU,EACVhN,MAAM,GA8BR,OA1BKuW,EAAYI,KAAKb,GAIpBY,EAAY5K,OAAQ,EAHpBmK,GAAc,GAOZC,EAAc3T,OAAS,EAEI,IAAzB2T,EAAc3T,QAChB8T,GAAiB,GAInBK,EAAY1J,UAAW,EAIA,IAArBqK,EAAU9U,OACZiV,GAAa,GAGbd,EAAY1W,MAAO,KAGjB0W,EAAY5K,OAAS4K,EAAY1J,UAAY0J,EAAY1W,QAM5D,CAAC8V,EAAYI,EAAemB,IAEzBT,EAAoB,WAGxB,IAAQhH,GAASQ,EAAS5P,OAAS,CAAEoP,KAAM,CAAED,SAAU,OAA/CC,KACRvB,EAAQvG,QAAQ8H,IAGZ8H,EAAkBjB,uBAAY,SAACrD,GAEnC,IfsFqBxH,EAAakL,GevFlC1D,EAAE2D,iBAC6BP,OAOxBvJ,GACHvK,Gf8EiBkJ,Ee9EC,CAChB5L,KAAMqX,EACNvL,MAAOgK,EACP9I,SAAUkJ,Gf2EkBY,Ee1E3BF,Ef2EF,WAAkC,IAAjClU,EAAgC,uDAArB1D,IACjB0D,EAASqI,EAAUpI,QAAQpC,WAE3ByK,MAAMxL,EAAkB,CACtByL,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBuB,KAAMC,KAAKC,UAAU,CACnB,MAASf,EAAKE,MACd,SAAYF,EAAKoB,SACjB,KAAQpB,EAAK5L,SAGhBmL,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,IAAIA,EAAKhL,QAYP,MAAM6K,MAAMG,EAAKM,SAXjBtJ,EAASqI,EAAUpI,QAAQkJ,SAASH,EAAKE,KAAKE,QAC9CpJ,EAASqI,EAAUpI,QAAQgJ,QAAQD,EAAKE,KAAK5L,OAE7CgI,EAAU,cAAe0D,EAAKf,YAAa,CAAE7B,KAAM,MACnDd,EAAU,eAAgB0D,EAAKO,aAAc,CAAEnD,KAAM,MAErDpG,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAC5CrJ,EAASqI,EAAUpI,QAAQjC,WAC3BoW,OAMHzK,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAC5CrJ,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,Ye/Gb,CAACwJ,EAAYuB,EAAWnB,EAAejJ,IAM1C,OACE,qCAEKA,IACAC,GACC,cAAC,GAAD,IAEJ,sBAAKxI,UAAU,qBAAf,UAEIwI,IACCD,IACAE,GACC,sBAAKzI,UAAU,oBAAf,UACE,oBAAIA,UAAU,sDAAd,wIAGA,cAAC,SAAD,CACEV,KAAK,UACLqL,KAAK,SACLC,QAASuG,EAHX,mHAUH3I,GACD,eAAC,GAAD,CACEuD,MAAM,qEACNiF,WAAW,+GACXD,aAAciC,EAHhB,UAKE,cAAC,QAAD,CACE1T,KAAM,OACNgT,YAAa,qBACbC,SA7IS,SAAC7D,GAEhBA,EAAE8D,OAAOjP,MAAM1F,OAAS,GAC1BiV,GAAa,GAEfF,EAAalE,EAAE8D,OAAOjP,QAyIZA,MAAOoP,EACPrX,KAAM,OACNsM,MAAOiL,EACPvS,IAAKyS,EACLN,UAAW,qIACX9H,KAAM,YAER,cAAC,QAAD,CACErL,KAAM,QACNgT,YAAa,SACbC,SAhJU,SAAC7D,GAEjBmD,EAAYI,KAAKvD,EAAE8D,OAAOjP,QAC5BgO,GAAc,GAEhBF,EAAc3C,EAAE8D,OAAOjP,QA4IbA,MAAO6N,EACP9V,KAAM,QACNsM,OAAQ0J,EACRhR,IAAKsR,EACLa,UAAW,iHACX9H,KAAM,YAGR,qBAAK3K,UAAW0R,EAAkB,iBAAmB,GAArD,SACE,cAAC,gBAAD,CACEa,SAnJW,SAAC7D,GAEM,IAA1BA,EAAE8D,OAAOjP,MAAM1F,QACjB8T,GAAiB,GAEnBF,EAAiB/C,EAAE8D,OAAOjP,QA+IdA,MAAOiO,EACPlW,KAAM,kBAKd,sBAAK0E,UAAU,oBAAf,UACE,mBAAGA,UAAU,kDAAb,kIAGA,cAAC,SAAD,CACEV,KAAK,YACLqL,KAAK,SACLC,QA3EW,WACnBjB,EAAQvG,QAAQ,CAAE6H,SAAU,YAuEtB,sDCzDKgI,GA1JuB,WACpC,IAAMjV,EAAW1D,IAEjB,EAIIE,GACF,SAAAsB,GAAK,OAAIA,EAAMoL,QAJfqB,EADF,EACEA,YACAE,EAFF,EAEEA,YACAD,EAHF,EAGEA,WAIMI,EAAgBvC,EAAUpI,QAA1B2K,YAEFe,EAAUC,cAEVuH,EAAa,WACjBnT,EAAS4K,MAIX9I,qBAAU,WACRqR,MACC,IAEH,MAAoC/S,mBAAiB,IAArD,mBAAOgT,EAAP,KAAmBC,EAAnB,KACA,EAAsCjT,oBAAkB,GAAxD,mBAAOkT,EAAP,KAAqBC,EAArB,KAEMK,EAAgBzT,iBAAyB,MAEzC0T,EAAsB,oBAuCtBK,EAAoB,WACxBvI,EAAQvG,QAAQ,CACd6H,SAAU,kBACVnP,MAAO,CAAEoP,KAAM,uBAIbgI,EAAuBnB,uBAAY,SAACrD,GAExC,IhB8NFtH,EACAgL,GgBhOE1D,EAAE2D,iBA/BiB,WAGnB,IAAML,EAA0B,CAC9B5K,OAAO,GAWT,OAPKyK,EAAYI,KAAKb,GAIpBY,EAAY5K,OAAQ,EAHpBmK,GAAc,KAMZS,EAAY5K,MAiBe0K,MAOxBvJ,GACHvK,GhBsNNoJ,EgBtN8BgK,EhBuN9BgB,EgBvN0CF,EhByNnC,WAAkC,IAAjClU,EAAgC,uDAArB1D,IACjB0D,EAASqI,EAAUpI,QAAQpC,WAE3ByK,MAAM1L,EAAyB,CAC7B2L,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBuB,KAAMC,KAAKC,UAAU,CACnB,MAASb,MAGZX,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,IAAIA,EAAKhL,QAKP,MAAM6K,MAAMG,EAAKM,SAJjBtJ,EAASqI,EAAUpI,QAAQjC,WAC3BoW,OAMHzK,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,YgBnPb,CAACwJ,EAAY7I,IAMhB,OACE,qCAEIA,IACCC,GACC,cAAC,GAAD,IAEJ,sBAAKxI,UAAU,qBAAf,UAEIwI,IACCD,IACAE,GACC,sBAAKzI,UAAU,oBAAf,UACE,oBAAIA,UAAU,sDAAd,4KAGA,cAAC,SAAD,CACEV,KAAK,UACLqL,KAAK,SACLC,QAASuG,EAHX,mHAUH3I,GACD,cAAC,GAAD,CACEuD,MAAM,4HACNiF,WAAW,2EACXD,aAAcmC,EAHhB,SAKE,cAAC,QAAD,CACE5T,KAAM,QACNgT,YAAa,oDACbC,SAlGU,SAAC7D,GAEjBmD,EAAYI,KAAKvD,EAAE8D,OAAOjP,QAC5BgO,GAAc,GAEhBF,EAAc3C,EAAE8D,OAAOjP,QA8FbA,MAAO6N,EACP9V,KAAM,QACNsM,OAAQ0J,EACRhR,IAAKsR,EACLa,UAAW,iHACX9H,KAAM,cAIZ,sBAAK3K,UAAU,yBAAf,UACE,mBAAGA,UAAU,kDAAb,0GAGA,cAAC,SAAD,CACEV,KAAK,YACLqL,KAAK,SACLC,QAxDW,WACnBjB,EAAQvG,QAAQ,CAAE6H,SAAU,YAoDtB,sD,qBC6CKkI,GA1LsB,WACnC,IAAMnV,EAAW1D,IAEjB,EAIIE,GACF,SAAAsB,GAAK,OAAIA,EAAMoL,QAJfqB,EADF,EACEA,YACAE,EAFF,EAEEA,YACAD,EAHF,EAGEA,WAIMI,EAAgBvC,EAAUpI,QAA1B2K,YAEFe,EAAUC,cAEVuH,EAAa,WACjBnT,EAAS4K,MAIX9I,qBAAU,WACRqR,MACC,IAEH,MAA0C/S,mBAAiB,IAA3D,mBAAOoT,EAAP,KAAsBC,EAAtB,KACA,EAA4CrT,oBAAkB,GAA9D,mBAAOsT,EAAP,KAAwBC,EAAxB,KACA,EAAkCvT,mBAAiB,IAAnD,mBAAOgV,EAAP,KAAkBC,EAAlB,KACA,EAAoCjV,oBAAkB,GAAtD,mBAAOkV,EAAP,KAAoBC,EAApB,KAEMC,EAAerV,iBAAyB,MAyBxC2T,EAAeC,uBAAY,WAG/B,IAAMC,EAA2B,CAC/B1J,UAAU,EACVmL,MAAM,GAsBR,OAlBIjC,EAAc3T,OAAS,EAEI,IAAzB2T,EAAc3T,QAChB8T,GAAiB,GAInBK,EAAY1J,UAAW,EAIA,IAArB8K,EAAUvV,OACZ0V,GAAa,GAGbvB,EAAYyB,MAAO,KAGjBzB,EAAY1J,WAAY0J,EAAYyB,QAMvC,CAACL,EAAW5B,IAETU,EAAoB,WACxBvI,EAAQvG,QAAQ,CAAE6H,SAAU,YAGxBiI,EAAuBnB,uBAAY,SAACrD,GAExC,IjBiPF+E,EACAnL,EACA8J,GiBpPE1D,EAAE2D,iBAC6BP,OAOxBvJ,GACHvK,GjByONyV,EiBxOQL,EjByOR9K,EiBxOQkJ,EjByORY,EiBxOQF,EjB0OD,WAAkC,IAAjClU,EAAgC,uDAArB1D,IACjB0D,EAASqI,EAAUpI,QAAQpC,WAE3ByK,MAAMzL,EAAwB,CAC5B0L,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBuB,KAAMC,KAAKC,UAAU,CACnB,SAAYK,EACZ,MAASmL,MAGZhN,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,IAAIA,EAAKhL,QAKP,MAAM6K,MAAMG,EAAKM,SAJjBtJ,EAASqI,EAAUpI,QAAQjC,WAC3BoW,OAMHzK,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,YiBpQb,CAACwL,EAAW5B,EAAejJ,IAM9B,OACE,qCAEIA,IACCC,GACC,cAAC,GAAD,IAEJ,sBACExI,UAAWmQ,KAAOuD,yBAA2B,sBAD/C,UAGIlL,IACCD,IACAE,GACC,sBAAKzI,UAAU,oBAAf,UACE,oBAAIA,UAAU,sDAAd,4KAGA,cAAC,SAAD,CACEV,KAAK,UACLqL,KAAK,SACLC,QAASuG,EAHX,mHAUH3I,GACD,eAAC,GAAD,CACEuD,MAAM,4HACNiF,WAAW,yDACXD,aAAcmC,EAHhB,UAME,qBAAKlT,UAAW0R,EAAkB,iBAAmB,GAArD,SACE,cAAC,gBAAD,CACEa,SAjHW,SAAC7D,GAEM,IAA1BA,EAAE8D,OAAOjP,MAAM1F,QACjB8T,GAAiB,GAEnBF,EAAiB/C,EAAE8D,OAAOjP,QA6GdA,MAAOiO,EACPlW,KAAM,eAGV,cAAC,QAAD,CACEgE,KAAM,OACNgT,YAAa,kHACbC,SAjIS,SAAC7D,GAEhBA,EAAE8D,OAAOjP,MAAM1F,OAAS,GAC1B0V,GAAa,GAEfF,EAAa3E,EAAE8D,OAAOjP,QA6HZA,MAAO6P,EACP9X,KAAM,OACNsM,MAAO0L,EACPhT,IAAKkT,EACLf,UAAW,qIACX9H,KAAM,eAIZ,sBAAK3K,UAAU,yBAAf,UACE,mBAAGA,UAAU,kDAAb,0GAGA,cAAC,SAAD,CACEV,KAAK,YACLqL,KAAK,SACLC,QAjEW,WACnBjB,EAAQvG,QAAQ,CAAE6H,SAAU,YA6DtB,sD,6DC1KJ0I,GAAmC,SAAC,GAAuB,IAArB7I,EAAoB,EAApBA,MAAO8I,EAAa,EAAbA,OAC3CjK,EAAUC,cAGdpO,EACEhB,GACF,SAAAsB,GAAK,OAAIA,EAAMN,SAFfA,MAKF,EAA8C4C,mBAAiB,IAA/D,mBAAOyV,EAAP,KAAwBC,EAAxB,KACA,EAAgD1V,mBAAiB,IAAjE,mBAAO2V,EAAP,KAAyBC,EAAzB,KAGAlU,qBAAU,WACR,OAAQgL,EAAMlE,QACZ,IAAK,UACHkN,EAAmB,wCACnB,MAEF,IAAK,UACHA,EAAmB,0DACnB,MAEF,IAAK,OACHA,EAAmB,oDACnBE,EAAoBC,KAAiBC,kBACrC,MAGF,IAAK,WACHJ,EAAmB,8CACnBE,EAAoBC,KAAiBE,oBAMxC,CAACrJ,EAAMlE,SAEV,IASMwN,EAAmBrC,uBAAY,kBACnCjH,EAAMuJ,WAAarT,EAAe8J,EAAMuJ,aACvC,CAACvJ,EAAMuJ,YAEJC,EAAqBxJ,EAAMyJ,aAC/BzJ,EAAMyJ,YAAYnY,KAAI,SAAAoY,GAAO,OAC3BhZ,EAAMiZ,MAAK,SAAApY,GAAI,OAAIA,EAAKC,MAAQkY,QAI9BE,EAA6BJ,GACjCA,EAAmBxG,QAAO,SAAAzR,GAAI,OAAIA,KAE9BsY,EAAaD,GACjBA,EAA2BD,MAAK,SAAApY,GAAI,OAClCA,GAAsB,QAAdA,EAAKiD,QACXsV,EAAqBF,GACzBA,EAA2B5G,QAAO,SAAAzR,GAAI,OACpCA,GAAsB,QAAdA,EAAKiD,QAEXuV,EAAwB9C,uBAAY,WACxC,IAAM+C,EAAgBF,EAItB,GAFAE,GAAiBA,EAAc3X,OAAO,EAAG,EAAGwX,GAEtCG,EACN,OAAOA,EAAc1Y,KAAI,SAAC2Y,EAAYhX,GAEpC,OAAIA,EADsB,EACY,KAInCgX,GAAcA,EAAWzY,KAC1B,+BACE,sBACE0D,UAAWiU,KAAiBe,wBAC5BrJ,MAAO,CAAEsJ,OAAQ,GAAKlX,GAFxB,SAIE,qBACE8N,IAAKkJ,EAAWG,aAChBpJ,IAAKiJ,EAAWzZ,KAChByQ,MAAOgJ,EAAWzZ,KAClB6Z,MAAM,QACNnV,UAAU,sBAhBQ,IAmBrBjC,EACC,uBACEiC,UAAWiU,KAAiBmB,sBAD9B,UAGE,mBAAGpV,UACDiU,KAAiBoB,eACjB,+BAFF,SAIKP,GAAmBA,EAAcjX,OAAnC,WACOiX,EAAcjX,OA5BN,GA6BZ,OAGN,sBAAMmC,UAAWiU,KAAiBqB,uBAElC,OA5BGP,EAAWzY,IAAIyB,QAgC3B,CAAC6W,EAAoBD,IAElBY,EAAsBxD,uBAAY,kBAEtC4C,GAAcA,EAAWlX,OAASmX,EAG9BD,EAAWlX,MAAQmX,EAAmBlX,QAAO,SAACC,EAAKC,GAAN,OACzCA,EAAKD,GAAOC,EAAEH,OAAS,GAAM,IAAG,GAChC,IACP,CAACkX,EAAYC,IAEhB,OAEKD,GAAgBA,EAAWrY,IAC5B,qBACE0D,UAAWiU,KAAiBuB,WAC5B5K,QA3FmB,WACvB,IAAM6K,EAAa9L,EAAQ+B,SAAST,SACpCtB,EAAQvG,QAAQ,CACd6H,SAAS,GAAD,OAAKwK,EAAL,YAAmB3K,EAAMxO,KACjCR,MAAO,CAAE2P,WAAY9B,EAAQ+B,aAqF7B,UAIE,sBAAK1L,UAAWiU,KAAiByB,WAAjC,UACE,mBAAG1V,UAAU,gCAAb,SAE2B,kBAAjB8K,EAAMxB,OAAb,WACOwB,EAAMxB,OAAOlH,WAAWC,SAAS,EAAG,MACxC,OAGN,mBAAGrC,UAAU,kDAAb,SACGoU,SAGL,mBAAGpU,UAAW,kCAAd,SACG8K,EAAMxP,OAGG,YAAXsY,EACC,mBAAG5T,UAAS,UACP+T,EADO,qCAAZ,SAGGF,IAED,KAEJ,sBAAK7T,UAAWiU,KAAiByB,WAAa,QAA9C,UACE,oBAAI1V,UAAWiU,KAAiB0B,2BAAhC,SACGd,MAEH,sBAAK7U,UAAW,gBAAhB,UACE,mBAAGA,UAAU,gCAAb,SAA8CuV,MAC9C,cAAC,eAAD,CAAcjW,KAAK,qBAIzB,MAMAsW,GAAgB,SACpBC,EACAC,GAEA,QAAID,EAAU/K,OACL+K,EAAU/K,MAAMnF,YAAcmQ,EAAUhL,MAAMnF,WAM1CyF,kBAAKuI,GAAYiC,IClKjBG,GA1B0B,SAAC,GAAwB,IAAtB9Q,EAAqB,EAArBA,OAAQ2O,EAAa,EAAbA,OAClD,OACE,mCAEK3O,EAAOpH,OAAS,GACjB,oBAAImC,UAAWgW,KAAiBC,YAAhC,SACGhR,EAAO7I,KAAI,SAAC0O,GAAD,OACV,cAAC,GAAD,CAEE8I,OAAQA,EACR9I,MAAOA,GAFFA,EAAMxO,a,oBCmFV4Z,GAhGW,WAExB,MAII1b,GACF,SAAAsB,GAAK,OAAIA,EAAMqa,QAJflR,EADF,EACEA,OACAI,EAFF,EAEEA,YACAC,EAHF,EAGEA,iBAQI8Q,EAAwBrE,uBAAY,WAIxC,OAHuC9M,EAAO6I,QAAO,SAAChD,GAAD,MAClC,SAAjBA,EAAMlE,UAGUyP,MAAM,EAPS,IAOcja,KAAI,SAAC0O,GAChD,OAAKA,EAAMxB,OAEP,oBACEtJ,UAAU,gCADZ,SAKG8K,EAAMxB,OAAOlH,WAAWC,SAAS,EAAG,MAHhCyI,EAAMxO,KAOR,UAIZ,CAAC2I,IAEEqR,EAAwBvE,uBAAY,WAIxC,OAHsB9M,EAAO6I,QAAO,SAAChD,GAAD,MACjB,YAAjBA,EAAMlE,UAGQyP,MAAM,EA9BW,IA8BYja,KAAI,SAAC0O,GAC9C,OAAKA,EAAMxB,OAEP,oBACEtJ,UAAU,gCADZ,SAKG8K,EAAMxB,OAAOlH,WAAWC,SAAS,EAAG,MAHhCyI,EAAMxO,KAOR,UAIZ,CAAC2I,IAEJ,OACE,sBAAKjF,UAAWuW,KAAoBC,gBAApC,UACE,sBAAKxW,UAAWuW,KAAoBE,sBAApC,UACE,sBAAKzW,UAAWuW,KAAoBG,mBAApC,UACE,mBAAG1W,UAAU,kCAAb,mDAGA,oBAAIA,UAAWuW,KAAoBI,sBAAnC,SACGP,SAGL,sBAAKpW,UAAWuW,KAAoBG,mBAApC,UACE,mBAAG1W,UAAU,kCAAb,0DAGA,oBAAIA,UAAWuW,KAAoBK,sBAAnC,SACGN,YAIP,mBAAGtW,UAAU,mCAAb,oIAGA,mBAAGA,UAAU,8BAAb,SAEGqF,EAAYwR,mBAEf,mBAAG7W,UAAU,mCAAb,6HAGA,mBAAGA,UAAU,8BAAb,SACGsF,EAAiBuR,uBCEXC,GAvFa,WAC1B,IAAM9Y,EAAW1D,IAEjB,EAIIE,GACF,SAAAsB,GAAK,OAAIA,EAAMN,SAJfC,EADF,EACEA,aACAE,EAFF,EAEEA,aACAD,EAHF,EAGEA,YAIF,EAKIlB,GACF,SAAAsB,GAAK,OAAIA,EAAMqa,QALflR,EADF,EACEA,OACAC,EAFF,EAEEA,YACAE,EAHF,EAGEA,YACAD,EAJF,EAIEA,WAKF,EAGI3K,GACF,SAAAsB,GAAK,OAAIA,EAAMib,MAHfzS,EADF,EACEA,YACAC,EAFF,EAEEA,QAsBF,OAhBAzE,qBAAU,WAGR,OADA9B,EAAS6G,KACF,WAEL7G,EAASgH,QAEV,IAEHlF,qBAAU,WACJwE,GAAeW,EAAOpH,OAAS,EACjCG,EAAS+G,EAAU9G,QAAQjC,WACpBuI,GACPvG,EAAS+G,EAAU9G,QAAQlC,YAC5B,CAACuI,EAAaC,EAASU,IAGxB,sCAEKxJ,GAAgByJ,MACfxJ,IAAgByJ,MAChBxJ,IAAiByJ,IACjB,cAAC,GAAD,KAGD1J,GAAeyJ,MACd1J,IAAiByJ,MACjBvJ,IAAiByJ,IACjB,oBAAIpF,UAAU,mEAAd,mGAKDrE,GAAgByJ,KACf1J,IAAgByJ,MAChB1J,IAAiByJ,IACjB,qCACE,oBAAIlF,UACFmQ,KAAO6G,WACP,2DAFF,uFAMA,sBAAKhX,UAAWmQ,KAAO8G,eAAvB,UACE,qBAAKjX,UAAWmQ,KAAO+G,sBAAvB,SACE,cAAC,GAAD,CACEtD,OAAO,OACP3O,OAAQA,MAGZ,qBAAKjF,UAAWmQ,KAAOgH,oBAAvB,SACG,cAAC,GAAD,gB,oBCwGFC,GA/KmC,SAAC,GAAmC,IAAD,EAAhCtM,EAAgC,EAAhCA,MAAgC,IAAzB0D,oBAAyB,SAEjFhT,EACEhB,GACF,SAAAsB,GAAK,OAAIA,EAAMN,SAFfA,MAKF,EAA8C4C,mBAAuB,IAArE,mBAAOyV,EAAP,KAAwBC,EAAxB,KAEA,EAAgD1V,mBAAiB,IAAjE,mBAAO2V,EAAP,KAAyBC,EAAzB,KAGAlU,qBAAU,WACR,OAAQgL,EAAMlE,QACZ,IAAK,UACHkN,EAAmB,wCACnB,MAEF,IAAK,UACHA,EAAmB,0DACnB,MAEF,IAAK,OACHA,EAAmB,oDACnBE,EAAoBqD,KAAwBnD,kBAC5C,MAGF,IAAK,WACHJ,EAAmB,8CACnBE,EAAoBqD,KAAwBlD,oBAM/C,CAACrJ,EAAMlE,SAGV,IAAMwN,EAAmBrC,uBAAY,kBACjCjH,EAAMuJ,UAAYrT,EAAe8J,EAAMuJ,WAAa,KACrD,CAACvJ,EAAMuJ,YAEJC,EAA2CxJ,EAAMyJ,YACrDzJ,EAAMyJ,YAAYnY,KAAI,SAAAoY,GAAO,OAC3BhZ,EAAMiZ,MAAK,SAAApY,GAAI,OAAQ,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,OAAQkY,MAC9B,MACH,GAGEG,EAA0BL,EAAmBG,MACjD,SAAApY,GAAI,MAAkB,QAAdA,EAAKiD,SACV,GAECsV,EAAyCN,EAAmBxG,QAChE,SAAAzR,GAAI,MAAkB,QAAdA,EAAKiD,QAGTuV,EAAwB9C,uBAAY,WACxC,IAAM+C,EAAoCF,EAE1CE,EAAc3X,OAAO,EAAG,EAAGwX,GAQ3B,IAIM2C,GAJiC,OAAGxC,QAAH,IAAGA,OAAH,EAAGA,EAAe1Y,KAAI,SAACC,GAC5D,OAAO,aAAEuP,MAAO,GAAMvP,OAGoCqB,QAC1D,SAAC+H,EAAOC,GACN,OAAMA,EAAEpJ,KACNmJ,EAAEC,EAAEpJ,KAAJ,2BAEOoJ,GAFP,IAIIkG,OAAWnG,EAAEC,EAAEpJ,KAAOmJ,EAAEC,EAAEpJ,KAAKsP,MAAQ,IAAiB,QAAXlG,EAAEpG,KAAiB,EAAI,KAEjEmG,GAEG,OACX,IAEC8R,EAAoC,GAC1C,IAAK,IAAI/C,KAAW8C,EAClBC,EAAcva,KACZ,qBACEgD,UAAWqX,KAAwBG,mBADrC,UAGE,sBACExX,UAAU,0BADZ,SAGE,qBACE6L,IAAKyL,EAAmB9C,GAASU,aACjCpJ,IAAKwL,EAAmB9C,GAASlZ,KACjCyQ,MAAOuL,EAAmB9C,GAASlZ,KACnC6Z,MAAM,QACNnV,UAAU,sBAGd,mBAAGA,UACDqX,KAAwBrL,gBACxB,+BAFF,SAIGsL,EAAmB9C,GAASlZ,OAE/B,uBAAM0E,UAAWqX,KAAwBI,iBAAzC,UACE,mBAAGzX,UAAU,gCAAb,mBACMsX,EAAmB9C,GAAS5I,MADlC,cAC6C0L,EAAmB9C,GAAS/W,SAEzE,cAAC,eAAD,CAAc6B,KAAK,iBAtBhBgY,EAAmB9C,GAASlY,MA2BvC,OAAOib,IACN,CAAC3C,EAAoBD,IAElBY,EAAsBxD,uBAAY,WAAe,IAAD,IAC9C2F,GAAuC,UAAA5M,EAAMyJ,mBAAN,eAAmBnY,KAAI,SAAAoY,GAClE,IAAMmD,EAA2Bnc,EAAMiZ,MAAK,SAAApY,GAAI,OAAIA,EAAKC,MAAQkY,MAAY,GAC7E,MAAQ,CACN/W,MAAOka,EAAYla,MACnB6B,KAAMqY,EAAYrY,WAEhB,GAGN,OAAkB,IADO,UAAAoY,EAAiBjD,MAAK,SAAApY,GAAI,MAAkB,QAAdA,EAAKiD,eAAnC,eAAoD7B,QAAS,GAChEia,EAAiBha,QAAO,SAACC,EAAKC,GAAN,OAC5CD,GAAkB,QAAXC,EAAE0B,MAAkB1B,EAAEH,OAAc,KAAK,KAEjD,CAACjC,EAAOsP,EAAMyJ,cAEjB,OACE,sBAAKvU,UAAWqX,KAAwBO,gBAAxC,WACIpJ,GACA,mBAAGxO,UACDqX,KAAwBtH,SACxB,iCAFF,8BAKKjF,EAAMxB,cALX,aAKK,EAAclH,WAAWC,SAAS,EAAG,QAG5C,mBAAGrC,UAAW,wCAAd,SACG8K,EAAMxP,OAET,mBAAG0E,UAAS,UACP+T,EADO,qCAAZ,SAGGF,IAEH,mBAAG7T,UAAW,wCAAd,mDAGA,oBAAIA,UAAWqX,KAAwBQ,sBAAwB,QAA/D,SACGhD,MAEH,sBAAK7U,UAAWqX,KAAwB3B,WAAa,SAArD,UACE,mBAAG1V,UAAU,kDAAb,SACGoU,MAEH,sBAAKpU,UAAW,gBAAhB,UACE,mBAAGA,UAAU,gCAAb,SAA8CuV,MAC9C,cAAC,eAAD,CAAcjW,KAAK,sBClFdwY,GA5Fc,WAC3B,IAAM9Z,EAAW1D,IAIXyd,EAA0D,SAD/C7G,cACoBjG,SAAS+M,MAAM,KAAK,GAEzD,EAIIxd,GACF,SAAAsB,GAAK,OAAIA,EAAMN,SAJfC,EADF,EACEA,aACAE,EAFF,EAEEA,aACAD,EAHF,EAGEA,YAIF,EAKIlB,GACF,SAAAsB,GAAK,OAAIA,EAAMqa,QALflR,EADF,EACEA,OACAC,EAFF,EAEEA,YACAE,EAHF,EAGEA,YACAD,EAJF,EAIEA,WAKF,EAGI3K,GACF,SAAAsB,GAAK,OAAIA,EAAMib,MAHfzS,EADF,EACEA,YACAC,EAFF,EAEEA,QAKF,EAAwCnG,mBAAiB,IAAzD,mBAAO6Z,EAAP,KAAqBC,EAArB,KAGApY,qBAAU,WAMR,OAHE9B,EADC+Z,EACQlT,IAEAqD,KACJ,WAGHlK,EADC+Z,EACQ/S,IAEAoD,QAEZ,IAEH,IAAM+P,EAAwBC,cAA4B/O,GAa1D,OAXAvJ,qBAAU,WACFmF,GAAUA,EAAOpH,OAAS,GAAKyG,GACnC4T,EAAgBjT,EAAOwP,MAAK,SAAA3J,GAAK,OAAIA,EAAMxO,MAAQ6b,MAAmB,IACtEna,EAAS+G,EAAU9G,QAAQjC,YAG3BgC,EADOuG,EACEQ,EAAU9G,QAAQlC,SAElBgJ,EAAU9G,QAAQpC,aAC5B,CAACyI,EAAaW,EAAQV,IAGvB,sCAEK9I,GAAgByJ,MACfxJ,IAAgByJ,MAChBxJ,IAAiByJ,IACjB,cAAC,GAAD,KAGD1J,GAAeyJ,MACd1J,IAAiByJ,MACjBvJ,IAAiByJ,IACjB,oBAAIpF,UAAU,mEAAd,mGAKDrE,GAAgByJ,GAChB6S,IAAiB,MAChBvc,IAAgByJ,MAChB1J,IAAiByJ,IACjB,qBAAKlF,UAAU,qBAAf,SACE,cAAC,GAAD,CACE8K,MAAOmN,UCmBNI,GAtGmB,WAAO,IAAD,EAChCra,EAAW1D,IAEjB,EAIIE,GACF,SAAAsB,GAAK,OAAIA,EAAMN,SAJfC,EADF,EACEA,aACAE,EAFF,EAEEA,aACAD,EAHF,EAGEA,YAIF,EAKIlB,GACF,SAAAsB,GAAK,OAAIA,EAAMqa,QALflR,EADF,EACEA,OACAC,EAFF,EAEEA,YACAE,EAHF,EAGEA,YACAD,EAJF,EAIEA,WAKF,EAGI3K,GACF,SAAAsB,GAAK,OAAIA,EAAMib,MAHfzS,EADF,EACEA,YACAC,EAFF,EAEEA,QAKM1I,EAAYT,EAAW6C,QAAvBpC,QAEF8N,EAAUC,cACV8B,EAAWwF,cAEjBpR,qBAAU,WAEN9B,EADEsG,EACOS,EAAU9G,QAAQjC,UACpBuI,EACEQ,EAAU9G,QAAQlC,SAElBgJ,EAAU9G,QAAQpC,aAC5B,CAACyI,EAAaC,IAEjB,IAAM4T,EAAyBC,cAA4B/O,GACrD4O,EAAuBhT,EAAOwP,MAAK,SAAA3J,GAAK,OAAIA,EAAMxO,MAAQ6b,MAAmB,GAE7EG,EAAevG,uBAAY,WAE/B/T,EAASnC,KAET8N,EAAQvG,QAAR,2BACKuG,EAAQ+B,UADb,IAEE5P,MAAO,CAAE2P,gBAAY8M,QAEtB,CAAC5O,IAiBJ,OAPA7J,qBAAU,WAER,OADA0Y,OAAO3J,iBAAiB,eAAgByJ,GACjC,WACLE,OAAO1J,oBAAoB,eAAgBwJ,MAE5C,IAGD,sCAEK7c,GAAgByJ,MACfxJ,IAAgByJ,MAChBxJ,IAAiByJ,IACjB,cAAC,GAAD,KAGD1J,GAAeyJ,MACd1J,IAAiByJ,MACjBvJ,IAAiByJ,IACjB,oBAAIpF,UAAU,mEAAd,mGAKDrE,GAAgByJ,KACf1J,IAAgByJ,MAChB1J,IAAiByJ,IACjB,cAAC,GAAD,CACEoJ,OAAM,qBAAM2J,EAAa3O,cAAnB,aAAM,EAAqBlH,WAAWC,SAAS,EAAG,MACxDmM,cAAc,EACdR,WArCS,WACjBrE,EAAQvG,QAAQ,CACd6H,SAAUS,EAAS5P,MAAM2P,WAAWR,YAgChC,SAIE,cAAC,GAAD,CACEH,MAAOmN,EACPzJ,cAAc,U,4DCjFbiK,GAjBuB,SAACjV,GACrC,OACE,oBAAIxD,UAAW0Y,KAAkBC,kBAAjC,SACE,wBAAQ3Y,UAAS,UACZ0Y,KAAkBE,aADN,8EAGbpV,EAAMoK,OAAS8K,KAAkBG,oBAAsB,IAEzDjO,QAASpH,EAAMoH,QACfmB,MAAOvI,EAAM7C,KANf,SAQG6C,EAAM7C,UC8DAmY,GAvEK,WAClB,IAAM9a,EAAW1D,IAETiO,EAAgB/N,GAAe,SAAAsB,GAAK,OAAIA,EAAMoL,QAA9CqB,YACAK,EAAgBvC,EAAUpI,QAA1B2K,YAGR9I,qBAAU,WACR9B,EAAS4K,OACR,IAEH,IAAMe,EAAUC,cAEhB,EAAwCxL,oBAAkB,GAA1D,mBAAO2a,EAAP,KAAsBC,EAAtB,KACA,EAAwC5a,oBAAkB,GAA1D,mBAAO6a,EAAP,KAAsBC,EAAtB,KAEMzD,EAAqB9L,EAAQ+B,SAAST,SAE5CnL,qBAAU,WACR,OAAQ2V,GACJ,IAAK,WACHuD,GAAe,GACf,MACF,IAAK,kBACHE,GAAe,MAKpB,CAACzD,IAgBJ,OACE,wBAAOzV,UAAWmZ,KAAcC,kBAAhC,UACE,qBAAIpZ,UAAWmZ,KAAcE,aAA7B,UACE,cAAC,GAAD,CACE1Y,KAAM,6CACNiK,QAnBe,WACrBjB,EAAQvG,QAAQ,CAAE6H,SAAU,cAmBtB2C,OAAQmL,IAEV,cAAC,GAAD,CACEpY,KAAM,wFACNiK,QArBe,WACrBjB,EAAQvG,QAAQ,CAAE6H,SAAU,qBAqBtB2C,OAAQqL,IAEV,cAAC,GAAD,CACEtY,KAAM,iCACNiK,QAtBc,WAEfrC,GACHvK,G1BgVG,WAAkC,IAAjCA,EAAgC,uDAArB1D,IACjB0D,EAASqI,EAAUpI,QAAQpC,WAC3ByK,MAAMtL,EAAgB,CACpBuL,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBuB,KAAMC,KAAKC,UAAU,CACnB,MAASnF,EAAU,oBAGtB2D,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,IAAIA,EAAKhL,QAUP,MAAM6K,MAAMG,EAAKM,SATjBnD,EAAa,eACbA,EAAa,gBAEbnG,EAASqI,EAAUpI,QAAQ4K,iBAE3B7K,EAASqI,EAAUpI,QAAQoJ,kBAAiB,IAC5CrJ,EAASqI,EAAUpI,QAAQjC,cAM9B2L,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,U0B7VRgG,QAAQ,OAGZ,mBAAG5N,UAAU,wDAAb,sUCgJSsZ,GA/MgB,WAC7B,IAAMtb,EAAW1D,IAEjB,EAKIE,GACF,SAAAsB,GAAK,OAAIA,EAAMoL,QALfA,EADF,EACEA,KACAqB,EAFF,EAEEA,YACAE,EAHF,EAGEA,YACAD,EAJF,EAIEA,WAMAI,EACEvC,EAAUpI,QADZ2K,YAGF,EAAkCxK,mBAAiB,IAAnD,mBAAOuU,EAAP,KAAkBC,EAAlB,KACA,EAAoCxU,mBAAiB,IAArD,mBAAOgT,EAAP,KAAmBC,EAAnB,KACA,EAA0CjT,mBAAiB,IAA3D,mBAAOoT,EAAP,KAAsBC,EAAtB,KAMA3R,qBAAU,WAHR9B,EAAS4K,KASJH,GAAgBF,GACnBvK,EAASgI,OAEV,IAEHlG,qBAAU,WACR8S,EAAa1L,EAAK5L,MAAQ,IAC1B+V,EAAcnK,EAAKE,OAAS,IAC5BqK,EAAiBvK,EAAKoB,UAAY,MACjC,CAACpB,IAGJ,MAAoD9I,oBAAkB,GAAtE,mBAAOmb,EAAP,KAA4BC,EAA5B,KACA,EAA8Cpb,oBAAkB,GAAhE,mBAAOqb,EAAP,KAAyBC,EAAzB,KACA,EAA4Dtb,oBAAkB,GAA9E,mBAAOub,EAAP,KAAgCC,EAAhC,KACA,EAAsDxb,oBAAkB,GAAxE,mBAAOyb,EAAP,KAA6BC,EAA7B,KAEA,EAAyC1b,oBAAkB,GAA3D,mBAAO2b,EAAP,KAAuBC,EAAvB,KAEMjH,EAAe5U,iBAAyB,MACxC8b,EAAmB9b,iBAAyB,MAuElD,OACE,qCAEMoK,IACCC,IACAC,GACC,cAAC,GAAD,IAEN,sBAAKzI,UAAWmQ,KAAO+J,kBAAoB,SAA3C,UACE,cAAC,GAAD,IACA,sBAAKla,UAAWmQ,KAAOS,eAAvB,UAEIpI,IACCD,IACAE,GACC,oBAAIzI,UAAU,sDAAd,mGAKFyI,IACCD,IACAD,GACC,eAAC,GAAD,WACE,cAAC,QAAD,CACEjJ,KAAM,OACNgT,YAAa,qBACbC,SAhGK,SAAC7D,GAEhBA,EAAE8D,OAAOjP,MAAM1F,OAAS,GAC1B6b,GAAkB,GAEpB9G,EAAalE,EAAE8D,OAAOjP,OACtByW,GAAe,IA2FDzW,MAAOoP,EACPrX,KAAM,OACNsM,MAAO6R,EACPnZ,IAAKyS,EACLN,UAAW,qIACX9H,KAAM,UACNwP,KAAM,WACNC,YAhFQ,WAAa,IAAD,EAClC,UAAArH,EAAavG,eAAb,SAAsB6N,QACtBb,GAAqB,IA+EP9O,SAAU6O,EACVe,OAxEQ,SAAC5L,GAEO,IAA1BA,EAAE8D,OAAOjP,MAAM1F,QACjB6b,GAAkB,GAEpBF,GAAqB,MAqET,cAAC,aAAD,CACEjH,SA3FM,SAAC7D,GAErB2C,EAAc3C,EAAE8D,OAAOjP,OACvByW,GAAe,IAyFDzW,MAAO6N,EACP9V,KAAM,QACNqP,KAAM,YAER,cAAC,QAAD,CACErL,KAAM,WACNgT,YAAa,uCACbC,SA5GS,SAAC7D,GAEpBA,EAAE8D,OAAOjP,MAAM1F,OAAS,GAC1Bic,GAAsB,GAExBrI,EAAiB/C,EAAE8D,OAAOjP,OAC1ByW,GAAe,IAuGDzW,MAAOiO,EACPlW,KAAM,WACNsM,MAAOiS,EACPvZ,IAAK2Z,EACLxH,UAAW,qIACX9H,KAAM,UACNwP,KAAM,WACNC,YAhGY,WAAa,IAAD,EACtC,UAAAH,EAAiBzN,eAAjB,SAA0B6N,QAC1BT,GAAyB,IA+FXlP,SAAUiP,EACVW,OArFY,SAAC5L,GAEG,IAA1BA,EAAE8D,OAAOjP,MAAM1F,QACjBic,GAAsB,GAExBF,GAAyB,MAkFZG,GACC,sBAAK/Z,UAAWmQ,KAAOoK,kBAAvB,UACE,cAAC,SAAD,CACEjb,KAAK,YACLqL,KAAK,SACLC,QAxEI,WACtBgI,EAAa1L,EAAK5L,MAAQ,IAC1B+V,EAAcnK,EAAKE,OAAS,IAC5BqK,EAAiBvK,EAAKoB,UAAY,IAClC0R,GAAe,IAiEC,8DAOA,cAAC,SAAD,CACE1a,KAAK,UACLqL,KAAK,SACLC,QA3FI,WAEjBrC,GACHvK,E3BMiB,SAACkJ,GACtB,OAAO,WAAkC,IAAjClJ,EAAgC,uDAArB1D,IACX2L,EAAsBnD,EAAU,gBAAkB,GAElDoD,EAA8B,IAAIC,QACxCD,EAAmBE,OAAO,eAAgB,oBAC1CF,EAAmBE,OAAO,gBAAiBH,GAE3CjI,EAASqI,EAAUpI,QAAQpC,WAE3ByK,MAAMrL,EAAc,CAClBsL,OAAQ,QACRC,QAASN,EACT6B,KAAMC,KAAKC,UAAU,CACnB,MAASf,EAAKE,MACd,SAAYF,EAAKoB,SACjB,KAAQpB,EAAK5L,SAGhBmL,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,IAAqB,IAAjBA,EAAKhL,QACPgC,EAASqI,EAAUpI,QAAQgJ,QAAQD,EAAKE,KAAK5L,OAC7C0C,EAASqI,EAAUpI,QAAQkJ,SAASH,EAAKE,KAAKE,QAC9CpJ,EAASqI,EAAUpI,QAAQjC,eAExB,IAAqB,gBAAjBgL,EAAKM,QAwDZ,MAAMT,MAAMG,EAAKM,SAvDjBC,IACCd,MAAK,SAACe,GACL,IAAKA,EAAYb,IAAMa,EAAYZ,QAAU,IAC3C,MAAMC,MAAMW,EAAYV,YAE1B,OAAOU,EAAYT,UAEpBN,MAAK,SAACgB,GACL,IAA6B,IAAzBA,EAAazL,QAsCf,MAAM6K,MAAMY,EAAaH,SArCzBhE,EAAU,cAAemE,EAAaxB,YAAa,CAAE7B,KAAM,MAC3Dd,EAAU,eAAgBmE,EAAaF,aAAc,CAAEnD,KAAM,MAE7D8B,EAAmBwB,OAAO,iBAC1BxB,EAAmBE,OAAO,gBAAiBqB,EAAaxB,aAAe,IAEvEK,MAAMrL,EAAc,CAClBsL,OAAQ,MACRC,QAASN,EACT6B,KAAMC,KAAKC,UAAU,CACnB,MAASf,EAAKE,MACd,SAAYF,EAAKoB,SACjB,KAAQpB,EAAK5L,SAGhBmL,MAAK,SAAAC,GACJ,IAAKA,EAAIC,IAAMD,EAAIE,QAAU,IAC3B,MAAMC,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,SAACO,GACL,IAAIA,EAAKhL,QAMP,MAAM6K,MAAMG,EAAKM,SALjBtJ,EAASqI,EAAUpI,QAAQgJ,QAAQD,EAAKE,KAAK5L,OAC7C0C,EAASqI,EAAUpI,QAAQkJ,SAASH,EAAKE,KAAKE,QAC9CpJ,EAASqI,EAAUpI,QAAQjC,cAM9B2L,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,SAOjBD,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,UAOjBD,OAAM,SAACC,GACN5J,EAASqI,EAAUpI,QAAQlC,UAC3B8L,QAAQC,IAAIF,O2BlGH4S,CAAQ,CACflf,KAAMqX,EACNvL,MAAOgK,EACP9I,SAAUkJ,KAGdwI,GAAe,IA+EC,oF,oBC/FLS,GA/FgB,WAC7B,IAAMzc,EAAW1D,IAEjB,EAIIE,GACF,SAAAsB,GAAK,OAAIA,EAAMN,SAJfC,EADF,EACEA,aACAE,EAFF,EAEEA,aACAD,EAHF,EAGEA,YAIF,EAIIlB,GACF,SAAAsB,GAAK,OAAIA,EAAMoL,QAJfqB,EADF,EACEA,YACAE,EAFF,EAEEA,YACAD,EAHF,EAGEA,WAIF,EAKIhO,GACF,SAAAsB,GAAK,OAAIA,EAAMqa,QALflR,EADF,EACEA,OACAC,EAFF,EAEEA,YACAE,EAHF,EAGEA,YACAD,EAJF,EAIEA,WAKAyD,EACEvC,EAAUpI,QADZ2K,YAGF,EAGIpO,GACF,SAAAsB,GAAK,OAAIA,EAAMib,MAHfzS,EADF,EACEA,YACAC,EAFF,EAEEA,QA8BF,OAzBAzE,qBAAU,WAYR,OAVA9B,EAAS4K,KAGT5K,EAASkK,KAIJO,GAAgBF,GACnBvK,EAASgI,KAEJ,WAELhI,EAASoK,QAEV,IAEHtI,qBAAU,WACJwE,EACFtG,EAAS+G,EAAU9G,QAAQjC,WACpBuI,GACPvG,EAAS+G,EAAU9G,QAAQlC,YAC5B,CAACuI,EAAaC,IAGf,sCAEO9I,GAAgB8M,GAAerD,MAC9BxJ,IAAgB8M,IAAerD,MAC/BxJ,IAAiB8M,IAAgBrD,IACjC,cAAC,GAAD,IAEJ,sBAAKpF,UAAWmQ,KAAOuK,kBAAoB,SAA3C,UACA,cAAC,GAAD,IACA,sBAAK1a,UAAWmQ,KAAOwK,yBAAvB,WAEKjf,GAAe8M,GAAcrD,MAC5B1J,IAAiB8M,IAAgBrD,MACjCvJ,IAAiB8M,IAAgBrD,IACjC,oBAAIpF,UAAU,sDAAd,mGAKDrE,GAAgB8M,GAAerD,KAC9B1J,IAAgB8M,IAAerD,MAC/B1J,IAAiB8M,IAAgBrD,IACjC,cAAC,GAAD,CACE0O,OAAO,UACP3O,OAAQA,c,oBC7CT2V,GAjDsC,SAAC,GAAc,IAAZve,EAAW,EAAXA,KACpD,OACI,sBAAK2D,UAAW6a,KAAwBC,6BAAxC,UACK,qBACGjP,IAAKxP,EAAK0e,YACVjP,IAAKzP,EAAKf,KACVyQ,MAAO1P,EAAKf,OAEhB,oBAAI0E,UAAU,uCAAd,SACK3D,EAAKf,OAEV,qBAAI0E,UAAW6a,KAAwBG,0BAAvC,UACI,qBAAIhb,UAAW6a,KAAwBI,+BAAvC,UACI,mBAAGjb,UAAU,kDAAb,kFAGA,mBAAGA,UAAU,oDAAb,SACK3D,EAAK6e,cAGd,qBAAIlb,UAAW6a,KAAwBI,+BAAvC,UACI,mBAAGjb,UAAU,kDAAb,oDAGA,mBAAGA,UAAU,oDAAb,SACK3D,EAAK8e,cAGd,qBAAInb,UAAW6a,KAAwBI,+BAAvC,UACI,mBAAGjb,UAAU,kDAAb,8CAGA,mBAAGA,UAAU,oDAAb,SACK3D,EAAK+e,SAGd,qBAAIpb,UAAW6a,KAAwBI,+BAAvC,UACI,mBAAGjb,UAAU,kDAAb,sEAGA,mBAAGA,UAAU,oDAAb,SACK3D,EAAKgf,0BCQfC,GA7CmB,WAChC,MAKI9gB,GACF,SAAAsB,GAAK,OAAIA,EAAMN,SALfA,EADF,EACEA,MACAC,EAFF,EAEEA,aACAE,EAHF,EAGEA,aACAD,EAJF,EAIEA,YAKI6f,EAA6BnD,cAA4B/O,GAE/D,OACE,qCAEE5N,IACCC,IACAC,GACC,cAAC,GAAD,IAGFD,IACCD,IACAE,GACC,oBAAIqE,UAAU,mEAAd,mGAKFrE,IACCD,IACAD,GACC,sBAAKuE,UAAU,qBAAf,UACE,mBAAGA,UAAU,4BAAb,qHAGA,cAAC,GAAD,CACE3D,KAAMb,EAAMiZ,MAAK,SAACpY,GAAD,OAAUA,EAAKC,MAAQif,MAAwB,YC4C7DC,GA7EwB,WACrC,IAAMxd,EAAW1D,IAEjB,EAKIE,GACF,SAAAsB,GAAK,OAAIA,EAAMN,SALfA,EADF,EACEA,MACAC,EAFF,EAEEA,aACAE,EAHF,EAGEA,aACAD,EAJF,EAIEA,YAKMG,EAAYT,EAAW6C,QAAvBpC,QAEF8N,EAAUC,cAEV6R,EAAwBrD,cAA4B/O,GACpDqS,EAA2BlgB,EAAMiZ,MAAK,SAACpY,GAAD,OAAUA,EAAKC,MAAQmf,MAAkB,GAE/EnD,EAAevG,uBAAY,WAE/B/T,EAASnC,KAET8N,EAAQvG,QAAR,2BACKuG,EAAQ+B,UADb,IAEE5P,MAAO,CAAE2P,gBAAY8M,QAEtB,CAAC5O,IAiBJ,OAPA7J,qBAAU,WAER,OADA0Y,OAAO3J,iBAAiB,eAAgByJ,GACjC,WACLE,OAAO1J,oBAAoB,eAAgBwJ,MAE5C,IAGD,qCAEI7c,IACCC,IACAC,GACC,cAAC,GAAD,IAGFD,IACCD,IACAE,GACC,oBAAIqE,UAAU,mEAAd,mGAKFrE,IACCD,IACAD,GACC,cAAC,GAAD,CACE6S,OAAO,0GACPN,WApCS,WACjBrE,EAAQvG,QAAQ,CACd6H,SAAS,OAgCL,SAIE,cAAC,GAAD,CACE5O,KAAMqf,U,qBCjELC,GAbgB,WAC7B,OACE,sBAAK3b,UAAWmQ,KAAOyL,mBAAvB,UACE,mBAAG5b,UAAU,kDAAb,iBAGA,oBAAIA,UAAU,gDAAd,0H,SCFO6b,GAAiC,SAAC,GAA2B,IAAzBxN,EAAwB,EAAxBA,SAAayN,EAAW,6BACjE9d,EAAW1D,IAGfoO,EACElO,GACF,SAAAsB,GAAK,OAAIA,EAAMoL,QAFfwB,aAKMI,EAAuBzC,EAAUpI,QAAjC6K,mBAQR,OANAhJ,qBAAU,WAER9B,EAAS8K,OACR,IAID,cAAC,IAAD,2BACMgT,GADN,IAEEC,OAAQ,gBAAGrQ,EAAH,EAAGA,SAAH,OACNhD,EACE2F,EAEA,cAAC,IAAD,CACE2N,GAAI,CACF/Q,SAAU,SACVnP,MAAO,CAAEoP,KAAMQ,WC9BhBuQ,GAAsC,SAAC,GAA2B,IAAzB5N,EAAwB,EAAxBA,SAAayN,EAAW,6BAIpE5Q,GAHSgG,cAGSpV,OAAS,CAAEoP,KAAM,CAAED,SAAU,OAA/CC,KAEN,OACE,cAAC,IAAD,2BACM4Q,GADN,IAEEC,OAAQ,iBACG,qBAAT7Q,EACEmD,EAEA,cAAC,IAAD,CACE2N,GAAI,CACF/Q,SAAU,2BCXbiR,GAAsC,SAAC,GAA2B,IAAzB7N,EAAwB,EAAxBA,SAAayN,EAAW,6BACtE9d,EAAW1D,IAGfoO,EACElO,GACF,SAAAsB,GAAK,OAAIA,EAAMoL,QAFfwB,aAKMI,EAAuBzC,EAAUpI,QAAjC6K,mBAERhJ,qBAAU,WAER9B,EAAS8K,OACR,IAEH,IAAM4C,EAAWwF,cAGjB,OACE,cAAC,IAAD,2BACM4K,GADN,IAEEC,OAAQ,kBACNrT,EACE,cAAC,IAAD,CAEEsT,KAAOtQ,EAAS5P,OAAS4P,EAAS5P,MAAMoP,MAAS,CAACD,SAAU,cAG9DoD,O,wCCLK8N,GAtBiB,SAAC3Y,GAC7B,OACQ,yBAAQxD,UAAS,UACVoc,KAAeC,eADL,4EAGX7Y,EAAMoK,OAASwO,KAAeE,sBAAwB,IAExD1R,QAASpH,EAAMoH,QACfmB,MAAOvI,EAAM7C,KANjB,UAQI,sBAAMX,UAAWoc,KAAeG,oBAAsB,QAAtD,SACK/Y,EAAM2W,OAEX,sBAAMna,UAAWoc,KAAeI,oBAC5B,mDADJ,SAGKhZ,EAAM7C,WCkFZ8b,GAnGO,WAClB,IAAM9S,EAAUC,cAEhB,EAAkCxL,oBAAkB,GAApD,mBAAOse,EAAP,KAAmBC,EAAnB,KACA,EAAkCve,oBAAkB,GAApD,mBAAO2Z,EAAP,KAAmB6E,EAAnB,KACA,EAAwCxe,oBAAkB,GAA1D,mBAAO2a,EAAP,KAAsBC,EAAtB,KAEMvD,EAAqB9L,EAAQ+B,SAAST,SAE5CnL,qBAAU,WACN,OAAQ2V,GACJ,IAAK,IACDkH,GAAY,GACZC,GAAY,GACZ5D,GAAe,GACf,MACJ,IAAK,QACD4D,GAAY,GACZD,GAAY,GACZ3D,GAAe,GACf,MACJ,IAAK,WACL,IAAK,kBACDA,GAAe,GACf2D,GAAY,GACZC,GAAY,MAKrB,CAACnH,IAeJ,OACI,iCACI,qBAAKzV,UAAW6c,KAAgBC,eAAhC,SAEI,qBAAI9c,UAAW6c,KAAgBE,UAA/B,UACI,oBAAI/c,UAAW6c,KAAgBG,eAA/B,SACI,qBAAIhd,UAAW6c,KAAgBI,qBAA/B,UACI,6BACI,cAAC,GAAD,CACI9C,KACI,cAAC,aAAD,CAAY7a,KAAMod,EAAa,UAAY,cAE/C/b,KAAK,qEACLiK,QA1BL,WACvBjB,EAAQvG,QAAQ,CAAE6H,SAAU,OA0BA2C,OAAQ8O,MAGhB,6BAEI,cAAC,GAAD,CACIvC,KACI,cAAC,WAAD,CAAU7a,KAAMyY,EAAa,UAAY,cAE7CpX,KAAK,4EACLiK,QAlCZ,WAChBjB,EAAQvG,QAAQ,CAAE6H,SAAU,WAkCA2C,OAAQmK,WAKxB,oBACI/X,UAAW6c,KAAgBK,iBAC3BtS,QApCA,WAChBjB,EAAQvG,QAAQ,CAAE6H,SAAU,OAiChB,SAII,cAAC,OAAD,MAEJ,oBAAIjL,UAAW6c,KAAgBM,gBAA/B,SACI,+BACI,cAAC,GAAD,CACIhD,KACI,cAAC,cAAD,CAAa7a,KAAMyZ,EAAgB,UAAY,cAEnDpY,KAAK,kFACLiK,QAlDL,WACnBjB,EAAQvG,QAAQ,CAAE6H,SAAU,cAkDJ2C,OAAQmL,gBCYzBqE,GApFO,WACpB,IAAMpf,EAAW1D,IAEXoR,EAAWwF,cACXzF,EAAaC,EAAS5P,OAAS4P,EAAS5P,MAAM2P,WAGlD9P,EACEnB,GACF,SAAAsB,GAAK,OAAIA,EAAMN,SAFfG,aAaF,OAPAmE,qBAAU,WAEHnE,GACHqC,G5CpCG,WAAkC,IAAjCA,EAAgC,uDAArB1D,IACjB0D,EAAS5C,EAAW6C,QAAQpC,WAE5ByK,MAAM5L,GACH+L,MAAK,SAAAC,GACJ,IAAKA,EAAIC,GAEP,MAAME,MAAMH,EAAII,YAElB,OAAOJ,EAAIK,UAEZN,MAAK,YAAa,IAAXO,EAAU,EAAVA,KACNhJ,EAAS5C,EAAW6C,QAAQjC,QAAQgL,OAErCW,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZ5J,EAAS5C,EAAW6C,QAAQlC,kB4CsB/B,CAACiC,EAAUrC,IAGZ,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,CAAQ+P,SAAUD,GAAcC,EAAhC,UACE,cAAC,IAAD,CAAOtH,KAAK,IAAIiZ,OAAO,EAAvB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAqBjZ,KAAK,SAASiZ,OAAO,EAA1C,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAqBjZ,KAAK,YAAYiZ,OAAO,EAA7C,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAqBjZ,KAAK,mBAAmBiZ,OAAO,EAApD,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAqBjZ,KAAK,kBAAkBiZ,OAAO,EAAnD,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOjZ,KAAK,QAAQiZ,OAAO,EAA3B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOjZ,KAAK,YAAYiZ,OAAO,EAA/B,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAgBjZ,KAAK,WAAWiZ,OAAO,EAAvC,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAgBjZ,KAAK,kBAAkBiZ,OAAO,EAA9C,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAgBjZ,KAAK,sBAAsBiZ,OAAO,EAAlD,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOjZ,KAAK,mBAAmBiZ,OAAO,EAAtC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,UACE,cAAC,GAAD,SAKF5R,GAAsC,MAAxBA,EAAWR,UACzB,cAAC,IAAD,CAAO7G,KAAK,mBAAmBiZ,OAAO,EAAtC,SACE,cAAC,GAAD,MAIF5R,GAAsC,oBAAxBA,EAAWR,UACzB,cAAC,GAAD,CAAgB7G,KAAK,sBAAsBiZ,OAAO,EAAlD,SACE,cAAC,GAAD,MAIF5R,GAAsC,UAAxBA,EAAWR,UACzB,cAAC,IAAD,CAAO7G,KAAK,YAAYiZ,OAAO,EAA/B,SACE,cAAC,GAAD,U,0BCpFKC,GAXKC,aAClB,CACE/hB,MAAOJ,EAAWoiB,QAClB1S,MAAO/B,EAAWyU,QAClB9T,kBAAmBhN,EAAuB8gB,QAC1CtW,KAAMb,EAAUmX,QAChBrH,KAAMpR,EAAUyY,QAChBzG,GAAI1S,EAAQmZ,UCRhB,GAMInZ,EAAQpG,QALVuG,GADF,GACEA,kBACAC,GAFF,GAEEA,iBACAC,GAHF,GAGEA,oBACAC,GAJF,GAIEA,kBACAC,GALF,GAKEA,mBCPW6Y,GAAQC,YAAe,CAClCF,QAASF,GACTK,WAAY,SAACC,GAAD,OACVA,IACGC,QACCC,MDMC,SAACL,GACN,IAAIM,EAA2B,KAE/B,OAAO,SAACC,GAAD,OAAkC,SAAC/hB,GACxC,IAAQ+B,EAAayf,EAAbzf,SACAsB,EAAkBrD,EAAlBqD,KAAMpD,EAAYD,EAAZC,QAEd,GAAIoD,IAASkF,GAAkBlF,KAAM,CACnC,IAAM2e,EAAgB/hB,EAAQiM,MAAR,UACjBjM,EAAQ4I,IADS,kBACI5I,EAAQiM,OADZ,UAGjBjM,EAAQ4I,KAEbiZ,EAAS,IAAIG,UAAUD,GAGrB3e,IAASmF,GAAiBnF,MAG5Bye,GAAUA,EAAOI,MAAM,IAAM,gBAG3BJ,IACFA,EAAOK,OAAS,SAAAC,GACdrgB,EAAS0G,OAGXqZ,EAAOO,QAAU,SAAAD,GACfrgB,EAAS2G,OAGXoZ,EAAOQ,UAAY,SAAAF,GACjB,IAAQrX,EAASqX,EAATrX,KACFwX,EAAaxW,KAAKyW,MAAMzX,GACV0X,GAAmBF,EAA/BxiB,QAAR,aAAuCwiB,EAAvC,cAGIE,EAAepX,SAAsC,6BAA3BoX,EAAepX,UAC3CyW,GAAUA,EAAOI,MAAM,IAAM,gBAC7B5W,IACCd,MAAK,SAACe,GACL,IAAKA,EAAYb,IAAMa,EAAYZ,QAAU,IAC3C,MAAMC,MAAMW,EAAYV,YAE1B,OAAOU,EAAYT,UAEpBN,MAAK,SAACgB,GACL,IAA6B,IAAzBA,EAAazL,QAQf,MAAM6K,MAAMY,EAAaH,SAPzBhE,EAAU,cAAemE,EAAaxB,YAAa,CAAE7B,KAAM,MAC3Dd,EAAU,eAAgBmE,EAAaF,aAAc,CAAEnD,KAAM,MAC7D,IAAMua,EAAkBlX,EAAaxB,YAAY7C,QAAQ,UAAW,IAC9D6a,EAAa,UAAM9iB,EAAN,kBAAkCwjB,GACrDZ,EAAS,IAAIG,UAAUD,MAM1BtW,OAAM,SAACC,GACN5J,EAAS2G,MACTkD,QAAQC,IAAIF,OAIhB5J,EAAS+G,EAAU9G,QAAQsH,cAAcmZ,KAG3CX,EAAOa,QAAU,SAAAP,GACfrgB,EAAS4G,QAIboZ,EAAK/hB,SC3ET4iB,UAAUC,ICAZ/P,IAASgN,OACP,cAAC,IAAMgD,WAAP,UACE,cAAC,IAAD,CAAUtB,MAAOA,GAAjB,SAEE,cAAC,KAAD,CAAeuB,SAAS,gBAAxB,SACE,cAAC,GAAD,UAINhc,SAAS4J,eAAe,U,mBCrB1BxS,EAAOC,QAAU,CAAC,WAAa,uEAAuE,WAAa,yCAAyC,2BAA6B,gDAAgD,wBAA0B,qEAAqE,sBAAwB,2CAA2C,eAAiB,oCAAoC,kBAAoB,uCAAuC,iBAAmB,sCAAsC,gBAAkB,uC,mBCAtkBD,EAAOC,QAAU,CAAC,gBAAkB,yDAAyD,SAAW,sCAAsC,WAAa,iDAAiD,mBAAqB,yDAAyD,sBAAwB,sEAAsE,gBAAkB,6CAA6C,iBAAmB,8CAA8C,iBAAmB,8CAA8C,gBAAkB,+C,mBCA3kBD,EAAOC,QAAU,CAAC,wBAA0B,gEAAgE,kCAAoC,mIAAmI,yBAA2B,8DAA8D,YAAc,wCAAwC,SAAW,qCAAqC,SAAW,uC,mBCA7dD,EAAOC,QAAU,CAAC,gBAAkB,4DAA4D,sBAAwB,wDAAwD,mBAAqB,4CAA4C,sBAAwB,2DAA2D,sBAAwB,2DAA2D,SAAW,kCAAkC,WAAa,6CAA6C,mBAAqB,qDAAqD,sBAAwB,kEAAkE,gBAAkB,yCAAyC,iBAAmB,0CAA0C,iBAAmB,0CAA0C,gBAAkB,2C,mBCAz2BD,EAAOC,QAAU,CAAC,6BAA+B,qEAAqE,0BAA4B,+DAA+D,+BAAiC,yE,mBCAlPD,EAAOC,QAAU,CAAC,eAAiB,4DAA4D,UAAY,uCAAuC,eAAiB,mCAAmC,qBAAuB,kDAAkD,iBAAmB,8CAA8C,gBAAkB,+C,mBCAlWD,EAAOC,QAAU,CAAC,cAAgB,qDAAqD,oBAAsB,2DAA2D,UAAY,iDAAiD,oBAAsB,oEAAoE,QAAU,+CAA+C,SAAW,gDAAgD,WAAa,oD,mBCAhcD,EAAOC,QAAU,CAAC,gBAAkB,2DAA2D,aAAe,qCAAqC,WAAa,0BAA0B,WAAa,4B,mBCAvMD,EAAOC,QAAU,CAAC,eAAiB,sCAAsC,sBAAwB,oCAAoC,oBAAsB,kCAAkC,WAAa,2B,mBCA1MD,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,oBAAsB,uCAAuC,sBAAwB,yCAAyC,oBAAsB,yC,mBCAzND,EAAOC,QAAU,CAAC,UAAY,iCAAiC,eAAiB,6BAA6B,gBAAkB,gC,mBCA/HD,EAAOC,QAAU,CAAC,wBAA0B,2DAA2D,SAAW,gCAAgC,iBAAmB,sD,mBCArKD,EAAOC,QAAU,CAAC,kBAAoB,4CAA4C,eAAiB,gCAAgC,kBAAoB,8C,mBCAvJD,EAAOC,QAAU,CAAC,kBAAoB,wCAAwC,aAAe,mCAAmC,oBAAsB,4C,mBCAtJD,EAAOC,QAAU,CAAC,aAAe,kDAAkD,iBAAmB,sD,mBCAtGD,EAAOC,QAAU,CAAC,gBAAkB,6DAA6D,iBAAmB,kDAAkD,gBAAkB,mD,mBCAxLD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,QAAU,wBAAwB,KAAO,uB,mBCApGD,EAAOC,QAAU,CAAC,kBAAoB,mCAAmC,aAAe,4C,mBCAxFD,EAAOC,QAAU,CAAC,kBAAoB,4CAA4C,yBAA2B,6C","file":"static/js/main.4aeb688c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger_ingredients_list\":\"burger-ingredients-category_burger_ingredients_list__3jb2q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_overlay\":\"modal-overlay_modal_overlay__1H0v3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_container\":\"form_form_container__3je-O flex_column\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reset_password_container\":\"reset-password_reset_password_container__3B6g0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders_list\":\"orders-list_orders_list__3-hvV flex_column pr-2 scroll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullscreen_message\":\"not-found_fullscreen_message__3jZtS fullscreen_message\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","export const ITEMS_API_URL: string = 'https://norma.nomoreparties.space/api/ingredients';\nexport const ORDER_API_URL: string = 'https://norma.nomoreparties.space/api/orders';\nexport const FORGOT_PASSWORD_API_URL: string = 'https://norma.nomoreparties.space/api/password-reset';\nexport const RESET_PASSWORD_API_URL: string = 'https://norma.nomoreparties.space/api/password-reset/reset';\nexport const REGISTER_API_URL: string = 'https://norma.nomoreparties.space/api/auth/register';\nexport const LOGIN_API_URL: string = 'https://norma.nomoreparties.space/api/auth/login';\nexport const LOGOUT_API_URL: string = 'https://norma.nomoreparties.space/api/auth/logout';\nexport const TOKEN_API_URL: string = 'https://norma.nomoreparties.space/api/auth/token';\nexport const USER_API_URL: string = 'https://norma.nomoreparties.space/api/auth/user';\nexport const ALL_ORDERS_WS_URL: string = 'wss://norma.nomoreparties.space/orders/all';\nexport const USER_ORDERS_WS_URL: string = 'wss://norma.nomoreparties.space/orders';\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { useAppDispatch } from '../hooks'\nimport { ITEMS_API_URL } from \"../constants\";\nimport { IIngredient } from '../types';\n\nexport const getItems = () => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(itemsSlice.actions.request());\n    // getting data from API\n    fetch(ITEMS_API_URL)  \n      .then(res => {\n        if (!res.ok) {\n          // we don't need to set state vars here as we will do that in catch\n          throw Error(res.statusText);\n        }\n        return res.json();\n      })\n      .then(({data}) => {\n        dispatch(itemsSlice.actions.success(data));\n      })\n      .catch((error) => {\n        console.log(error);\n        dispatch(itemsSlice.actions.failed());\n      })\n  }\n}\n\ninterface itemsState {\n  items: Array<IIngredient>,\n  itemsRequest: boolean,\n  itemsFailed: boolean,\n  itemsSuccess: boolean,\n}\n\nconst initialState: itemsState = {\n  items: [],\n  itemsRequest: false,\n  itemsFailed: false,\n  itemsSuccess: false,\n}\n\nexport const itemsSlice = createSlice({\n  name: 'items',\n  initialState,\n  reducers: {\n    request(state) {\n      state.itemsRequest = true;\n      state.itemsFailed = false;\n      state.itemsSuccess = false;\n    },\n    failed(state) {\n      state.itemsFailed = true;\n      state.itemsRequest = false;\n      state.itemsSuccess = false;\n    },\n    success(state, action: PayloadAction<Array<IIngredient>>) {\n      state.itemsSuccess = true;\n      state.itemsRequest = false;\n      state.itemsFailed = false;\n      state.items = action.payload;\n    },\n    increaseQuantityValue(state, action: PayloadAction<string>) {\n      state.items = [...state.items].map(item =>\n        item._id === action.payload ? {\n          ...item,\n          __v: (item.__v || 0) + 1\n        } : item\n      );\n    },\n    decreaseQuantityValue(state, action: PayloadAction<string>) {\n      state.items = [...state.items].map(item =>\n        item._id === action.payload ? {\n          ...item,\n          __v: (item.__v || 1) - 1\n        } : item\n      );\n    },\n    clearValues(state) {\n      state.items = [...state.items].map(item => ({\n          ...item,\n          __v: 0\n      }));\n    }\n  }\n}) \n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { IIngredient } from '../types'\n\ninterface burgerConstructorState {\n  bunItem: IIngredient,\n  middleItems: Array<IIngredient>,\n  totalPrice: number\n}\n\n// Define the initial state using that type\nconst initialState: burgerConstructorState = {\n  bunItem: {},\n  middleItems: [],\n  totalPrice: 0\n}\n\nexport const burgerConstructorSlice = createSlice({\n  name: 'burgerConstructor',\n  initialState,\n  reducers: {\n    setBunItem(state, action: PayloadAction<IIngredient>) {\n      state.bunItem = action.payload;\n    },\n    addMiddleItem(state, action: PayloadAction<IIngredient>) {\n      state.middleItems.push(action.payload);\n    },\n    moveMiddleItem(state, action: PayloadAction<{ oldIndex: number, newIndex: number }>) {\n      const movedItem = state.middleItems.splice(action.payload.oldIndex, 1);\n      state.middleItems.splice(action.payload.newIndex, 0, movedItem[0]);\n    },\n    deleteMiddleItem(state, action: PayloadAction<number>) {\n      state.middleItems.splice(action.payload, 1);\n    },\n    clearMiddleItems(state) {\n      state.middleItems = [];\n    },\n    calcTotalPrice(state) {\n      !!state.bunItem.name && !!state.bunItem.price ? (\n        // buns can be only of one type so there are 2 buns:\n        state.totalPrice = state.bunItem.price * 2 + state.middleItems.reduce(\n          (acc, p) => acc + (p.price || 0), 0\n        )\n      ) : ( state.middleItems.length ? (\n        state.totalPrice = state.middleItems.reduce((acc, p) => acc + (p.price || 0), 0)\n        ) : (\n          state.totalPrice = 0\n        )\n      );\n    }\n  }\n}) \n","import { FC, useRef, useEffect, useState } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppDispatch } from '../../services/hooks';\nimport { useDrag, useDrop } from 'react-dnd';\nimport draggableConstructorElementStyles from './draggable-constructor-element.module.css';\n// importing components from library\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { burgerConstructorSlice } from '../../services/slices/burger-constructor';\nimport { itemsSlice } from '../../services/slices/items';\nimport { IIngredient } from '../../services/types';\n\ninterface IDraggedItem {\n  item: IIngredient,\n  index: number\n}\n\nconst DraggableConstructorElement: FC<IDraggedItem> = ({\n  item,\n  index\n}) => {\n  const dispatch = useAppDispatch();\n  const { decreaseQuantityValue } = itemsSlice.actions;\n  const { moveMiddleItem, deleteMiddleItem } = burgerConstructorSlice.actions\n\n  const dndItemRef = useRef<HTMLLIElement>(null);\n  const [isItemHigher, setIsItemHigher] = useState<boolean>(false);\n  const [isItemLower, setIsItemLower] = useState<boolean>(false);\n\n  const [{targetId, isItemHover, offset}, dropItemTarget] = useDrop({\n      accept: 'sortedIngredient',\n      drop() {\n          return ({index});\n      },\n      collect: monitor => ({\n          targetId: monitor.getHandlerId(),\n          isItemHover: monitor.isOver(),\n          offset: monitor.getDifferenceFromInitialOffset()\n      })\n    });\n\n  const [{sourceId, isItemDragging}, dragItemSource] = useDrag({\n      type: 'sortedIngredient',\n      item: item,\n      collect: monitor => ({\n          sourceId: monitor.getHandlerId(),\n          isItemDragging: monitor.isDragging()\n      }),\n      end(item, monitor) {\n        // reorder only, not for new ingredients\n        if(monitor.didDrop() && monitor.getDropResult<IDraggedItem>() !== null) {            \n          dispatch(moveMiddleItem({\n            oldIndex: index,\n            newIndex: monitor.getDropResult<IDraggedItem>()?.index || 0\n          }));\n        }\n      }\n  });\n\n  const handleItemDelete = (itemId: string, index: number) => {   \n    dispatch(deleteMiddleItem(index));\n    dispatch(decreaseQuantityValue(itemId));\n  };\n\n  useEffect(() => {\n    if(!!offset) {\n      setIsItemHigher(offset.y < 0);\n      setIsItemLower(offset.y > 0);    \n    }\n  }, [offset]);\n\n  dragItemSource(dropItemTarget(dndItemRef))\n\n  return (\n      <>\n        <li \n            className={\n                `${draggableConstructorElementStyles.draggable_list_item}\n                ${isItemDragging ? draggableConstructorElementStyles.dragged : null}\n                ${isItemHover && isItemHigher ? (\n                  draggableConstructorElementStyles.pushedUp\n                  ) : isItemHover && isItemLower ? (\n                    draggableConstructorElementStyles.pushedDown\n                  ) : null }`\n                }\n            ref={dndItemRef}\n            data-source-id={sourceId}\n            data-target-id={targetId}\n        >\n            <span className={draggableConstructorElementStyles.drag_icon}>\n                <DragIcon type='primary' />\n            </span>\n            {\n              !!item.name &&\n              !!item.image &&\n              !!item.price &&\n              <ConstructorElement \n                  text={item.name}\n                  thumbnail={item.image}\n                  price={item.price}\n                  handleClose={() => \n                    !!item._id && handleItemDelete(item._id, index)\n                  }\n              />\n            }\n        </li>\n      </>\n  ) \n}\n\nexport default DraggableConstructorElement\n","import { ICookieProps } from './types'\n\nconst getDaysFromToday = (dateTime: Date): number => {\n  const MILLISECONDS_PER_DAY: number = 1000 * 60 * 60 * 24;\n  const today: Date = new Date(Date.now());\n\n  // discard the time and time-zone information.\n  const utcDateTime: number = Date.UTC (\n    dateTime.getFullYear(),\n    dateTime.getMonth(),\n    dateTime.getDate()\n  );\n  const utcToday: number = Date.UTC (\n    today.getFullYear(),\n    today.getMonth(),\n    today.getDate()\n  );\n\n  return Math.floor((utcToday - utcDateTime) / MILLISECONDS_PER_DAY);\n}\n\nexport const formatDateTime = (time: string): string => {\n  const dateTime: Date = new Date(time);\n  const daysFromToday: number = getDaysFromToday(dateTime);\n\n  const getPluralDayForm = (n: number): string => (\n    (n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)) ?\n      'дня' : 'дней'\n  );\n  \n  const day: string = (\n    daysFromToday === 0 ?\n      'Сегодня' :\n      daysFromToday === 1 ?\n        'Вчера' : \n        `${daysFromToday} ${getPluralDayForm(daysFromToday)} назад`\n  );\n  const hours: string = dateTime.getHours().toString().padStart(2, '0');\n  const mins: string = dateTime.getMinutes().toString().padStart(2, '0');\n  const timeZone: string = new Intl.NumberFormat(\"ru-RU\", {\n    // always display the plus sign\n    signDisplay: \"exceptZero\"\n  }).format(\n    0 - dateTime.getTimezoneOffset() / 60\n  );\n\n  return (`${day}, ${hours}:${mins} i-GMT${timeZone}`);\n}\n\nexport function getCookie(name: string): string {\n  const matches: RegExpMatchArray | null = document.cookie.match(\n    new RegExp('(?:^|; )' + name.replace(/([$?*|{}\\]\\\\^])/g, '\\\\$1') + '=([^;]*)')\n  );\n  return matches ? decodeURIComponent(matches[1]) : '';\n}\n\nexport function setCookie(\n  name: string,\n  value: string | number | boolean,\n  props: ICookieProps = {}\n): void {\n  if (typeof props.expires == 'number' && props.expires) {\n    const d = new Date();\n    d.setTime(d.getTime() + props.expires * 1000);\n    props.expires = d;\n  }\n  if (props.expires instanceof Date && props.expires) {\n    props.expires = props.expires.toUTCString();\n  }\n  const cookieValue: string = encodeURIComponent(value);\n  let updatedCookie: string = name + '=' + cookieValue;\n  let propName: keyof ICookieProps;\n  for (propName in props) {\n    updatedCookie += '; ' + propName;\n    const propValue = props[propName];\n    if (propValue !== true) {\n      updatedCookie += '=' + propValue;\n    }\n  }\n  document.cookie = updatedCookie;\n}\n\nexport function deleteCookie(name: string): void {\n  setCookie(name, '', { path: '/', expires: -1 });\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface wsState {\n  wsConnected: boolean,\n  wsError: boolean\n}\n\nconst initialState: wsState = {\n  wsConnected: false,\n  wsError: false\n}\n\nexport const wsSlice = createSlice({\n  name: 'ws',\n  initialState,\n  reducers: {\n    wsConnectionStart(state, action: PayloadAction<{url: string, token?: string}>) {},\n\n    wsConnectionStop(state) {\n      state.wsConnected = false;\n      state.wsError = false;\n    },\n\n    wsConnectionSuccess(state) {\n      state.wsConnected = true;\n      state.wsError = false;\n    },\n\n    wsConnectionError(state) {\n      state.wsConnected = false;\n      state.wsError = true;\n    },\n\n    wsConnectionClosed(state) {\n      state.wsConnected = false;\n      state.wsError = false;\n    }\n  }\n}) \n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IOrder } from '../types'\nimport { useAppDispatch } from '../hooks'\nimport { wsSlice } from './websocket';\nimport { ALL_ORDERS_WS_URL } from '../constants';\n\nexport const startFeed = () => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(wsSlice.actions.wsConnectionStart({ url: ALL_ORDERS_WS_URL }));\n    dispatch(feedSlice.actions.request());\n  }\n}\n\nexport const stopFeed = () => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(wsSlice.actions.wsConnectionStop());\n  }\n}\n\n// for some reason in profile page orders came up sorted backwards in time\nconst sortOrdersByDate = (orders: Array<IOrder>): Array<IOrder> => {\n  orders.sort(function(a: IOrder, b: IOrder): number {\n    if (!!a.updatedAt && !!b.updatedAt) {\n      const keyA: Date = new Date(a.updatedAt);\n      const keyB: Date = new Date(b.updatedAt);\n      return keyB.valueOf() - keyA.valueOf();\n    }\n    else return 0;\n  });\n  return orders;\n}\n\ninterface feedState {\n  orders: Array<IOrder>,\n  feedRequest: boolean,\n  feedFailed: boolean,\n  feedSuccess: boolean,\n  ordersTotal: number,\n  ordersTotalToday: number\n}\n\nconst initialState: feedState = {\n  orders: [],\n  feedRequest: false,\n  feedFailed: false,\n  feedSuccess: false,\n  ordersTotal: 0,\n  ordersTotalToday: 0\n}\n\nexport const feedSlice = createSlice({\n  name: 'feed',\n  initialState,\n  reducers: {\n    request(state) {\n      state.feedRequest = true;\n      state.feedFailed = false;\n      state.feedSuccess = false;\n    },\n    failed(state) {\n      state.feedFailed = true;\n      state.feedRequest = false;\n      state.feedSuccess = false;\n    },\n    success(state) {\n      state.feedSuccess = true;\n      state.feedRequest = false;\n      state.feedFailed = false;\n    },\n    setOrdersData(state, action: PayloadAction<{\n      orders: Array<IOrder>,\n      total: number,\n      totalToday: number\n    }>) {\n      state.orders = sortOrdersByDate(action.payload.orders);\n      state.ordersTotal = action.payload.total;\n      state.ordersTotalToday = action.payload.totalToday;\n    }\n  }\n}) \n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { useAppDispatch } from '../hooks'\nimport { IUser } from '../types'\nimport { LOGIN_API_URL } from \"../constants\";\nimport { REGISTER_API_URL } from \"../constants\";\nimport { FORGOT_PASSWORD_API_URL } from \"../constants\";\nimport { RESET_PASSWORD_API_URL } from \"../constants\";\nimport { LOGOUT_API_URL } from \"../constants\";\nimport { TOKEN_API_URL } from \"../constants\";\nimport { USER_API_URL } from \"../constants\";\nimport { wsSlice } from './websocket';\nimport { USER_ORDERS_WS_URL } from '../constants';\nimport { getCookie, setCookie, deleteCookie } from '../utils';\nimport { feedSlice } from './feed';\n\ntype TRedirectCallback = () => void;\n\nexport const getUser = () => {\n  return (dispatch = useAppDispatch()) => {\n    const accessToken: string = getCookie('accessToken') || '';\n\n    const userRequestHeaders: Headers = new Headers();\n    userRequestHeaders.append('Content-Type', 'application/json');\n    userRequestHeaders.append('Authorization', accessToken);\n\n    dispatch(userSlice.actions.request());\n    // get user data from the API\n    fetch(USER_API_URL, {\n      method: 'GET',\n      headers: userRequestHeaders\n    })\n    .then(res => {\n      if (!res.ok && res.status >= 500) {\n        throw Error(res.statusText);\n        }\n      return res.json();\n      })\n    .then((data) => {\n      if (data.success === true) {\n        dispatch(userSlice.actions.setName(data.user.name));\n        dispatch(userSlice.actions.setEmail(data.user.email));\n\n        dispatch(userSlice.actions.setAuthorization(true));\n\n        dispatch(userSlice.actions.success());\n      }\n      else if (data.message === 'You should be authorised') {\n        // force redirect to login page\n        dispatch(userSlice.actions.setAuthorization(false));\n        dispatch(userSlice.actions.success());\n      }\n      else if (data.message === 'jwt expired') {\n        refreshToken()\n        .then((refresh_res) => {\n          if (!refresh_res.ok && refresh_res.status >= 500) {\n            throw Error(refresh_res.statusText);\n          }\n          return refresh_res.json();\n        })\n        .then((refresh_data) => {\n          if (refresh_data.success === true) {\n            setCookie('accessToken', refresh_data.accessToken, { path: '/' });\n            setCookie('refreshToken', refresh_data.refreshToken, { path: '/' });\n            \n            userRequestHeaders.delete('Authorization');\n            userRequestHeaders.append('Authorization', refresh_data.accessToken || '');\n            \n            fetch(USER_API_URL, {\n              method: 'GET',\n              headers: userRequestHeaders\n            })\n            .then(res => {\n              if (!res.ok && res.status >= 500) {\n                throw Error(res.statusText);\n                }\n              return res.json();\n              })\n            .then((data) => {\n              if (data.success) {\n                dispatch(userSlice.actions.setName(data.user.name));\n                dispatch(userSlice.actions.setEmail(data.user.email));\n                \n                dispatch(userSlice.actions.setAuthorization(true));\n\n                dispatch(userSlice.actions.success());\n              }\n              else if (data.message === 'You should be authorised') {\n                // force redirect to login page\n                dispatch(userSlice.actions.setAuthorization(false));\n                dispatch(userSlice.actions.success());\n              }\n              else {\n                throw Error(data.message);\n              }\n            })\n            .catch((error) => {\n              dispatch(userSlice.actions.setAuthorization(false));\n              dispatch(userSlice.actions.failed())\n              console.log(error);\n            })\n          }\n          else {\n            throw Error(refresh_data.message);\n          }\n        })\n        .catch((error) => {\n          dispatch(userSlice.actions.setAuthorization(false));\n          dispatch(userSlice.actions.failed())\n          console.log(error);\n        });\n      }\n      else {\n        throw Error(data.message);\n      }\n    })\n    .catch((error) => {\n      dispatch(userSlice.actions.setAuthorization(false));\n      dispatch(userSlice.actions.failed())\n      console.log(error);\n    })\n  }\n}\n\nexport const setUser = (user: IUser) => {\n  return (dispatch = useAppDispatch()) => {\n    const accessToken: string = getCookie('accessToken') || '';\n\n    const userRequestHeaders: Headers = new Headers();\n    userRequestHeaders.append('Content-Type', 'application/json');\n    userRequestHeaders.append('Authorization', accessToken);\n\n    dispatch(userSlice.actions.request());\n    // get user data from the API\n    fetch(USER_API_URL, {\n      method: 'PATCH',\n      headers: userRequestHeaders,\n      body: JSON.stringify({\n        \"email\": user.email,\n        \"password\": user.password,\n        \"name\": user.name,\n      })\n    })\n    .then(res => {\n      if (!res.ok && res.status >= 500) {\n        throw Error(res.statusText);\n        }\n      return res.json();\n      })\n    .then((data) => {\n      if (data.success === true) {\n        dispatch(userSlice.actions.setName(data.user.name));\n        dispatch(userSlice.actions.setEmail(data.user.email));\n        dispatch(userSlice.actions.success());\n      }\n      else if (data.message === 'jwt expired') {\n        refreshToken()\n        .then((refresh_res) => {\n          if (!refresh_res.ok && refresh_res.status >= 500) {\n            throw Error(refresh_res.statusText);\n          }\n          return refresh_res.json();\n        })\n        .then((refresh_data) => {\n          if (refresh_data.success === true) {\n            setCookie('accessToken', refresh_data.accessToken, { path: '/' });\n            setCookie('refreshToken', refresh_data.refreshToken, { path: '/' });\n            \n            userRequestHeaders.delete('Authorization');\n            userRequestHeaders.append('Authorization', refresh_data.accessToken || '');\n            \n            fetch(USER_API_URL, {\n              method: 'GET',\n              headers: userRequestHeaders,\n              body: JSON.stringify({\n                \"email\": user.email,\n                \"password\": user.password,\n                \"name\": user.name,\n              })\n            })\n            .then(res => {\n              if (!res.ok && res.status >= 500) {\n                throw Error(res.statusText);\n                }\n              return res.json();\n              })\n            .then((data) => {\n              if (data.success) {\n                dispatch(userSlice.actions.setName(data.user.name));\n                dispatch(userSlice.actions.setEmail(data.user.email));\n                dispatch(userSlice.actions.success());\n              }\n              else {\n                throw Error(data.message);\n              }\n            })\n            .catch((error) => {\n              dispatch(userSlice.actions.failed())\n              console.log(error);\n            })\n          }\n          else {\n            throw Error(refresh_data.message);\n          }\n        })\n        .catch((error) => {\n          dispatch(userSlice.actions.failed())\n          console.log(error);\n        });\n      }\n      else {\n        throw Error(data.message);\n      }\n    })\n    .catch((error) => {\n      dispatch(userSlice.actions.failed())\n      console.log(error);\n    })\n  }\n}\n\nexport const register = (user: IUser, redirectCallback: TRedirectCallback) => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(userSlice.actions.request());\n    // send user data to the API\n    fetch(REGISTER_API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"email\": user.email,\n        \"password\": user.password,\n        \"name\": user.name,\n      })\n    })\n    .then(res => {\n      if (!res.ok && res.status >= 500) {\n        throw Error(res.statusText);\n        }\n      return res.json();\n      })\n    .then((data) => {\n      if (data.success) {\n        dispatch(userSlice.actions.setEmail(data.user.email));\n        dispatch(userSlice.actions.setName(data.user.name));\n\n        setCookie('accessToken', data.accessToken, { path: '/' });\n        setCookie('refreshToken', data.refreshToken, { path: '/' });\n\n        dispatch(userSlice.actions.setAuthorization(true));\n        dispatch(userSlice.actions.success());\n        redirectCallback();\n      }\n      else {\n        throw Error(data.message);\n      }\n    })\n    .catch((error) => {\n      dispatch(userSlice.actions.setAuthorization(false));\n      dispatch(userSlice.actions.failed())\n      console.log(error);\n    })\n  }\n}\n\nexport const login = (user: IUser, redirectCallback: TRedirectCallback) => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(userSlice.actions.request());\n    // send user data to the API\n    fetch(LOGIN_API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"email\": user.email,\n        \"password\": user.password\n      })\n    })\n    .then(res => {\n      if (!res.ok && res.status >= 500) {\n        throw Error(res.statusText);\n        }\n      return res.json();\n      })\n    .then((data) => {\n      if (data.success) {\n        dispatch(userSlice.actions.setEmail(data.user.email));\n        dispatch(userSlice.actions.setName(data.user.name));\n\n        setCookie('accessToken', data.accessToken, { path: '/' });\n        setCookie('refreshToken', data.refreshToken, { path: '/' });\n\n        dispatch(userSlice.actions.setAuthorization(true));\n        dispatch(userSlice.actions.success());\n        redirectCallback();\n      }\n      else {\n        throw Error(data.message);\n      }\n    })\n    .catch((error) => {\n      dispatch(userSlice.actions.setAuthorization(false));\n      dispatch(userSlice.actions.failed())\n      console.log(error);\n    })\n  }\n}\n\nexport const forgotPassword = (\n  email: string,\n  redirectCallback: TRedirectCallback\n) => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(userSlice.actions.request());\n    // send user data to the API\n    fetch(FORGOT_PASSWORD_API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"email\": email\n      })\n    })\n    .then(res => {\n      if (!res.ok && res.status >= 500) {\n        throw Error(res.statusText);\n        }\n      return res.json();\n      })\n    .then((data) => {\n      if (data.success) {\n        dispatch(userSlice.actions.success());\n        redirectCallback();\n      }\n      else {\n        throw Error(data.message);\n      }\n    })\n    .catch((error) => {\n      dispatch(userSlice.actions.failed())\n      console.log(error);\n    })\n  }\n}\n\nexport const resetPassword = (\n  code: string,\n  password: string,\n  redirectCallback: TRedirectCallback\n) => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(userSlice.actions.request());\n    // send user data to the API\n    fetch(RESET_PASSWORD_API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"password\": password,\n        \"token\": code\n      })\n    })\n    .then(res => {\n      if (!res.ok && res.status >= 500) {\n        throw Error(res.statusText);\n        }\n      return res.json();\n      })\n    .then((data) => {\n      if (data.success) {\n        dispatch(userSlice.actions.success());\n        redirectCallback();\n      }\n      else {\n        throw Error(data.message);\n      }\n    })\n    .catch((error) => {\n      dispatch(userSlice.actions.failed())\n      console.log(error);\n    })\n  }\n}\n\nexport const logout = () => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(userSlice.actions.request());\n    fetch(LOGOUT_API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"token\": getCookie('refreshToken')\n      })\n    })\n    .then(res => {\n      if (!res.ok && res.status >= 500) {\n        throw Error(res.statusText);\n        }\n      return res.json();\n      })\n    .then((data) => {\n      if (data.success) {\n        deleteCookie('accessToken');\n        deleteCookie('refreshToken');\n  \n        dispatch(userSlice.actions.resetUserData());\n\n        dispatch(userSlice.actions.setAuthorization(false));\n        dispatch(userSlice.actions.success());\n      }\n      else {\n        throw Error(data.message);\n      }\n    })\n    .catch((error) => {\n      dispatch(userSlice.actions.failed())\n      console.log(error);\n    })\n  }\n}\n\nexport const refreshToken = () => {\n  return fetch(TOKEN_API_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      \"token\": getCookie('refreshToken')\n    })\n  })\n}\n\nexport const startHistory = () => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(wsSlice.actions.wsConnectionStart({\n      url: USER_ORDERS_WS_URL,\n      token: (getCookie('accessToken') || '').replace('Bearer ', '')\n    }));\n    // saving user orders in feedSlice\n    dispatch(feedSlice.actions.request());\n  }\n}\n\nexport const stopHistory = () => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(wsSlice.actions.wsConnectionStop());\n  }\n}\n\n// TODO: get password hash from server\nconst fakePassword: string = '123456';\n\ninterface userState {\n  user: IUser,\n  userRequest: boolean,\n  userFailed: boolean,\n  userSuccess: boolean,\n  isAuthorized: boolean\n}\n\nconst initialState: userState = {\n  user: {\n    password: fakePassword,\n  },\n  userRequest: false,\n  userFailed: false,\n  userSuccess: false,\n  isAuthorized: false\n}\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    request(state) {\n      state.userRequest = true;\n      state.userFailed = false;\n      state.userSuccess = false;\n    },\n    failed(state) {\n      state.userFailed = true;\n      state.userRequest = false;\n      state.userSuccess = false;\n    },\n    success(state) {\n      state.userSuccess = true;\n      state.userRequest = false;\n      state.userFailed = false;\n    },\n    setName(state, action: PayloadAction<string>) {\n      state.user = {\n        ...state.user,\n        name: action.payload\n        }\n    },\n    setPassword(state, action: PayloadAction<string>) {\n      state.user = {\n        ...state.user,\n        password: action.payload\n        }\n    },\n    setEmail(state, action: PayloadAction<string>) {\n      state.user = {\n        ...state.user,\n        email: action.payload\n      }\n    },\n    resetStatus(state) {\n      // resetting only errors\n      state.userFailed = false;\n    },\n    resetUserData(state) {\n      state.user.name = '';\n      state.user.email = '';\n      // TODO: get password hash from server\n      state.user.password = fakePassword;\n    },\n    setAuthorization(state, action: PayloadAction<boolean>) {\n      state.isAuthorized = action.payload;\n    },\n    checkAuthorization(state) {\n      state.isAuthorized = ((getCookie('accessToken') !== '') &&\n        (getCookie('refreshToken') !== ''));\n    }\n  }\n}) \n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { useAppDispatch } from '../hooks'\nimport { INewOrder } from '../types'\nimport { ORDER_API_URL } from \"../constants\";\nimport { burgerConstructorSlice } from './burger-constructor';\nimport { itemsSlice } from './items';\nimport { setCookie, getCookie } from '../utils';\nimport { refreshToken } from './user';\n\nexport const placeOrder = (items: Array<string>) => {\n  return (dispatch = useAppDispatch()) => {\n    dispatch(orderSlice.actions.request());\n\n    // show modal right from request start to show loader\n    dispatch(orderSlice.actions.openOrderModal());\n    \n    // get new order ID from API:\n    fetch(ORDER_API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: getCookie('accessToken')\n      },\n      body: JSON.stringify({\n        \"ingredients\": items\n      })\n    })\n      .then(res => {\n        if (!res.ok && res.status >= 500) {\n          throw Error(res.statusText);\n          }\n        return res.json();\n        })\n      .then((data) => {\n        if (data.success) {\n          dispatch(orderSlice.actions.success({\n            name: data.name,\n            number: data.order.number,\n            success: data.success\n          }))\n        }\n        // if accessToken has gone stale we're need to refresh it first\n        else if (data.message && data.message === 'jwt expired') {\n          dispatch(orderSlice.actions.request());\n          refreshToken()\n          .then((refresh_res) => {\n            if (!refresh_res.ok && refresh_res.status >= 500) {\n              throw Error(refresh_res.statusText);\n            }\n            return refresh_res.json();\n          })\n          .then((refresh_data) => {\n            if (refresh_data.success === true) {\n              setCookie('accessToken', refresh_data.accessToken, { path: '/' });\n              setCookie('refreshToken', refresh_data.refreshToken, { path: '/' });\n              dispatch(orderSlice.actions.request());\n              fetch(ORDER_API_URL, {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  Authorization: getCookie('accessToken')\n                },\n                body: JSON.stringify({\n                  \"ingredients\": items\n                })\n              })\n              .then(res => {\n                if (!res.ok && res.status >= 500) {\n                  throw Error(res.statusText);\n                  }\n                return res.json();\n                })\n              .then((data) => {\n                if (data.success) {\n                  dispatch(orderSlice.actions.success({\n                    name: data.name,\n                    number: data.order.number,\n                    success: data.success\n                  }))\n                }\n                else {\n                  throw Error(data.message);\n                }\n              })\n              .catch((error) => {\n                dispatch(orderSlice.actions.failed());\n                console.log(error);\n              })\n            }\n            else {\n              throw Error(refresh_data.message);\n            }\n          })\n          .catch((error) => {\n            dispatch(orderSlice.actions.failed());\n            console.log(error);\n          });\n        }\n        else {\n          throw Error(data.message);\n        }\n      })\n      .catch((error) => {\n        dispatch(orderSlice.actions.failed());\n        console.log(error);\n      })\n     .finally(() => {\n        // clearing ordered ingredients from BurgerConstructor\n        dispatch(burgerConstructorSlice.actions.setBunItem({}));\n        dispatch(burgerConstructorSlice.actions.clearMiddleItems());\n        dispatch(itemsSlice.actions.clearValues());\n      })\n  }\n}\n\ninterface orderState {\n  orderData: INewOrder,\n  orderRequest: boolean,\n  orderFailed: boolean,\n  orderSuccess: boolean,\n  isOrderModalOpen: boolean,\n}\n\nconst initialState: orderState = {\n  orderData: {},\n  orderRequest: false,\n  orderFailed: false,\n  orderSuccess: false,\n  isOrderModalOpen: false,\n}\n\nexport const orderSlice = createSlice({\n  name: 'order',\n  initialState,\n  reducers: {\n    request(state) {\n      state.orderRequest = true;\n      state.orderFailed = false;\n      state.orderSuccess = false;\n      state.orderData = {};\n    },\n    failed(state) {\n      state.orderFailed = true;\n      state.orderRequest = false;\n      state.orderSuccess = false;\n      state.orderData = {\n        success: false\n      }\n    },\n    success(state, action: PayloadAction<INewOrder>) {\n      state.orderSuccess = true;\n      state.orderRequest = false;\n      state.orderFailed = false;\n      state.orderData = {\n        name: action.payload.name,\n        id: action.payload.number,\n        success: action.payload.success\n      }\n    },\n    openOrderModal(state) {\n      state.isOrderModalOpen = true;\n    },\n    closeOrderModal(state) {\n      state.isOrderModalOpen = false;\n    }\n  }\n}) \n","import React, { useEffect } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\nimport { useDrop } from 'react-dnd';\nimport burgerConstructorStyles from './burger-constructor.module.css';\n// importing components from library\nimport { ConstructorElement, CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\nimport DraggableConstructorElement from '../draggable-constructor-element/draggable-constructor-element';\nimport { placeOrder } from '../../services/slices/order';\nimport { burgerConstructorSlice } from '../../services/slices/burger-constructor';\nimport { itemsSlice } from '../../services/slices/items';\n\nimport { useHistory } from 'react-router-dom';\nimport { IIngredient } from '../../services/types';\n\nconst BurgerConstructor: React.FC = () => {\n    const dispatch = useAppDispatch();\n    const { increaseQuantityValue, decreaseQuantityValue } = itemsSlice.actions;\n    const { setBunItem, calcTotalPrice } = burgerConstructorSlice.actions\n    const { bunItem, middleItems, totalPrice } = useAppSelector(state => state.burgerConstructor);\n    const { isAuthorized } = useAppSelector(state => state.user);\n\n    const history = useHistory();\n\n    const onOrderButtonClick = () => {\n        if (isAuthorized) {\n            if (!!bunItem._id) {\n                const items:Array<string> = [bunItem._id];\n                middleItems.map(item => \n                    item._id && items.push(item._id));\n                // get new order ID from API:\n                dispatch(placeOrder(items));\n            }\n        }\n        // redirect guests to login page\n        else {\n            history.replace({\n                pathname: '/login',\n                state: { from: '/' }\n            });\n        }\n      };\n\n    // recalculating total price\n    useEffect(() => {\n        dispatch(calcTotalPrice());\n    }, [dispatch, bunItem, middleItems, calcTotalPrice]);\n\n    const handleBunItemDrop = (newBunItem: IIngredient) => {\n        dispatch(setBunItem(newBunItem));\n        if (!!bunItem._id) {\n            dispatch(decreaseQuantityValue(bunItem._id));\n            dispatch(decreaseQuantityValue(bunItem._id));\n        }\n        if (!!newBunItem._id) {\n            dispatch(increaseQuantityValue(newBunItem._id));\n            dispatch(increaseQuantityValue(newBunItem._id));\n        }\n    };\n\n    // Buns can be only be of one type\n    // (user can't choose different buns for top and bottom)\n    const [, dropTopBunTarget] = useDrop({\n        accept: 'bun',\n        drop(newBunItem: IIngredient) {\n            handleBunItemDrop(newBunItem);\n        }\n      });\n    \n    const [, dropBottomBunTarget] = useDrop({\n        accept: 'bun',\n        drop(newBunItem: IIngredient) {\n            handleBunItemDrop(newBunItem);\n        }\n      });\n    \n    const [, dropMiddleItemTarget] = useDrop({\n        accept: ['sauce', 'main']\n      });\n\n    const generateItemHash = () => (\n        Math.floor(Math.random() * 10000)\n    );\n\n    return(\n        <>\n            <ul className={burgerConstructorStyles.burger_constructor_list + ' ml-4 mt-25 mb-10 pr-4'}>\n                <li className='pl-8' ref={dropTopBunTarget}>\n                    {!!bunItem.name ? (\n                        <ConstructorElement \n                            type='top'\n                            isLocked={true}\n                            text={bunItem.name + ' (верх)'}\n                            thumbnail={bunItem.image || ''}\n                            price={bunItem.price || 0}\n                        />\n                    ) : (\n                        <div \n                            className={\n                                burgerConstructorStyles.emptyBun +\n                                ' constructor-element constructor-element_pos_top'\n                            }\n                        >\n                            &nbsp;\n                        </div>\n                    )}\n                </li>\n                <li ref={dropMiddleItemTarget}>\n                    {/* when inner items aren't chosen, show warning message */}\n                    {(middleItems.length > 0 ?\n                        <ul \n                            className={burgerConstructorStyles.burger_constructor_draggable_list + ' pr-2'}\n                            key='middle_items'\n                        >\n                            {middleItems.map((item, index) => (\n                                <DraggableConstructorElement \n                                    item={item}\n                                    index={index}\n                                    // key should have random generated hash or timestamp added to '_id'\n                                    key={(item._id || '')+generateItemHash()}\n                                />\n                            ))}\n                        </ul>\n                    : \n                        <h3 \n                            className={burgerConstructorStyles.warningText + \n                            ' text text_type_main-default text_color_inactive pt-6 pb-6'}\n                            \n                        >\n                            {totalPrice === 0 ? (\n                                'Добавьте булку и ингредиенты'\n                            ) : (\n                                'Добавьте ингредиенты'\n                            )}\n                        </h3>\n                    )}\n                </li>\n                <li className='pl-8' ref={dropBottomBunTarget}>\n                    {!!bunItem.name ? (\n                        <ConstructorElement \n                            isLocked={true}\n                            type='bottom'\n                            text={bunItem.name + ' (низ)'}\n                            thumbnail={bunItem.image || ''}\n                            price={bunItem.price || 0}\n                        />\n                    ) : (\n                        <div \n                            className={\n                                burgerConstructorStyles.emptyBun +\n                                ' constructor-element constructor-element_pos_bottom'\n                            }\n                        >\n                            &nbsp;\n                        </div>\n                    )}\n                </li>\n            </ul>\n            <div className={\n                    `${burgerConstructorStyles.burger_constructor_order}\n                    mr-4 mb-10\n                    ${!bunItem.name ? burgerConstructorStyles.disabled : null}`\n                }\n            >\n                <p className='text text_type_digits-medium'>\n                    {totalPrice}\n                </p>\n                <span className='ml-2 mr-10'>\n                    <CurrencyIcon type='primary' />\n                </span>\n                <Button \n                    type=\"primary\"\n                    size=\"medium\"\n                    onClick={bunItem.name ? onOrderButtonClick : () => {}}\n                >\n                        Оформить заказ\n                </Button>\n            </div>\n        </>\n    );\n}\n\nexport default BurgerConstructor;\n","import { memo } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppDispatch } from '../../services/hooks';\nimport { useDrag } from 'react-dnd';\nimport burgerIngredientsCardStyles from './burger-ingredients-card.module.css';\n// importing components from library\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { burgerConstructorSlice } from '../../services/slices/burger-constructor';\nimport { itemsSlice } from '../../services/slices/items';\n\nimport { useHistory } from 'react-router-dom';\nimport { IIngredient } from '../../services/types';\n\nconst BurgerIngredientsCard = memo<IIngredient>(\n    ( item ) => {\n    const dispatch = useAppDispatch();\n    const { increaseQuantityValue } = itemsSlice.actions;\n    const { addMiddleItem } = burgerConstructorSlice.actions\n    \n    const history = useHistory();\n\n    const handleIngredientClick = () => {\n        history.replace({ \n            pathname: `/ingredients/${item._id}`,\n            state: { background: history.location }\n        });\n    }\n\n    const [{opacity}, dragRef] = useDrag({\n        type: item.type || '',\n        item: item,\n        collect: monitor => ({\n          opacity: monitor.isDragging() ? 0.5 : 1\n        }),\n        end(item, monitor) {\n            // adding only new ingredients, not when reorder items in Constructor\n            if(monitor.didDrop() && item.type !== 'bun' && !!item._id) {\n                dispatch(addMiddleItem(item));\n                dispatch(increaseQuantityValue(item._id));\n            }\n        }\n      });\n    \n    return(\n        <li>\n            <div \n                className={burgerIngredientsCardStyles.ingredient_card} \n                onClick={handleIngredientClick} \n                ref={dragRef}\n                style={{opacity}}\n            >\n                {item.__v ? <Counter count={item.__v}/> : null}\n                <img src={item.image} alt={item.name} title={item.name} className=\"ml-4 mr-4\"/>\n                    <div className={'flex_row mt-1 mb-1 '}>\n                        <p className='pr-2 text text_type_digits-default'>{item.price}</p>\n                        <CurrencyIcon type='primary'/>\n                    </div>\n                <p className={burgerIngredientsCardStyles.ingredient_name + ' text text_type_main-default'}>\n                    {item.name}\n                </p>\n            </div>\n        </li>\n    );\n});\n\nexport default BurgerIngredientsCard;\n","import { forwardRef } from 'react';\nimport burgerIngredientsCategoryStyles from './burger-ingredients-category.module.css';\n// importing components from project\nimport BurgerIngredientsCard from '../burger-ingredients-card/burger-ingredients-card';\nimport { IIngredient } from '../../services/types';\n\ninterface IIngredientCategory {\n    heading: string,\n    categoryId: string,\n    items: Array<IIngredient>\n}\n\nconst BurgerIngredientsCategory = forwardRef<HTMLElement, IIngredientCategory>(\n    (props, ref) => (\n    <section id={props.categoryId} ref={ref}>\n        <h2 className=\"text text_type_main-medium pt-10 mb-6\">\n            {props.heading}\n        </h2>\n        {/* when items aren't received, show 'Empty category' message */}\n        {(props.items.length > 0 ? \n            <ul className={burgerIngredientsCategoryStyles.burger_ingredients_list + ' ml-4 mt-6 mr-2 mb-10'}>\n                {props.items.map((item) => (\n                    <BurgerIngredientsCard\n                        key={item._id}\n                        {...item}\n                    />\n                ))}\n            </ul>\n        : <h3 className='text text_type_main-default text_color_inactive pb-6'>\n                    Категория пуста\n            </h3>)}\n    </section>\n));\n\nexport default BurgerIngredientsCategory;\n","import { FC, useState, useEffect } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector} from '../../services/hooks';\nimport { useInView } from 'react-intersection-observer';\nimport burgerIngredientsStyles from './burger-ingredients.module.css';\n// importing components from project\nimport BurgerIngredientsCategory from '../burger-ingredients-category/burger-ingredients-category';\n// importing components from library\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\n\ninterface IInviewOptions {\n    threshold: number,\n    trackVisibility: boolean,\n    delay: number\n}\n\nconst BurgerIngredients: FC = () => {\n    const [current, setCurrent] = useState<string>('bun')\n    const { items } = useAppSelector(state => state.items);\n\n    const setTab = (tabName: string): void => {\n        setCurrent(tabName);\n        document.getElementById(tabName)?.scrollIntoView({behavior:\"smooth\"})\n    }\n    const handleBunTabClick = (): void => {\n        setTab('bun');\n    };\n    const handleSauceTabClick = (): void => {\n        setTab('sauce');\n    };\n    const handleMainTabClick = (): void => {\n        setTab('main');\n    };\n    \n    const inViewOptions: IInviewOptions = {\n        threshold: 0,\n        trackVisibility: true,\n        delay: 100\n    };\n    const [bunRef, inViewBun] = useInView(inViewOptions);\n    const [mainRef, inViewMain] = useInView(inViewOptions);\n    const [sauceRef, inViewSauce] = useInView(inViewOptions);\n\n    useEffect(() => {\n        if (inViewBun) {\n          setCurrent('bun');\n        }\n        else if (inViewSauce) {\n          setCurrent('sauce');\n        } \n        else if (inViewMain) {\n          setCurrent('main');\n        } \n      }, [inViewBun, inViewMain, inViewSauce]);\n\n    return(\n        <>\n            <h1 className=\"text text_type_main-large mt-10 mb-5\">\n                Соберите бургер\n            </h1>\n            <div className={burgerIngredientsStyles.tab_selector}>\n                <Tab \n                    active={current === 'bun'} \n                    onClick={handleBunTabClick}\n                    value='Булки'\n                >\n                    Булки\n                </Tab>\n                <Tab \n                    active={current === 'sauce'} \n                    onClick={handleSauceTabClick}\n                    value='Соусы'\n                >\n                    Соусы\n                </Tab>\n                <Tab \n                    active={current === 'main'} \n                    onClick={handleMainTabClick}\n                    value='Начинки'\n                >\n                    Начинки\n                </Tab>\n            </div>\n            <div \n                className={burgerIngredientsStyles.scroll_container} \n            >\n                <BurgerIngredientsCategory \n                    heading=\"Булки\"\n                    categoryId='bun'\n                    items={items.filter(item => item.type === 'bun')}\n                    ref={bunRef}\n                />\n                <BurgerIngredientsCategory \n                    heading=\"Соусы\"\n                    categoryId='sauce' \n                    items={items.filter(item => item.type === 'sauce')}\n                    ref={sauceRef}\n                />\n                <BurgerIngredientsCategory \n                    heading=\"Начинки\"\n                    categoryId='main'\n                    items={items.filter(item => item.type === 'main')}\n                    ref={mainRef}\n                />\n            </div>\n        </>\n    );\n}\n\nexport default BurgerIngredients;\n","import { FC } from 'react';\nimport modalOverlayStyles from './modal-overlay.module.css';\n\ninterface IModalOverlay {\n    closeModal: () => void\n}\n\nconst ModalOverlay: FC<IModalOverlay> = ({ closeModal }) => {\n    return(\n            <div \n                className={modalOverlayStyles.modal_overlay}\n                onClick={closeModal}>\n            </div>\n    );\n}\n\nexport default ModalOverlay;\n","import { FC, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport modalStyles from './modal.module.css';\n// importing components from project\nimport ModalOverlay from '../modal-overlay/modal-overlay';\n// importing components from library\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nconst modalRoot = document.getElementById('modal-root') as HTMLElement;\n\ninterface IModal {\n    children: JSX.Element,\n    header: string | null,\n    closeModal: () => void,\n    isFancyCloseIcon?: boolean,\n    isOrderModal?: boolean\n}\n\nconst Modal: FC<IModal> = ({\n    children,\n    header,\n    closeModal,\n    isFancyCloseIcon=false,\n    isOrderModal=false\n}) => {\n    \n    // closing modals with the \"Esc\" key:\n    const handleEscKey = (e: KeyboardEvent): void => {\n        if (e.key === 'Escape') \n            closeModal();\n        e.stopImmediatePropagation();\n    }\n\n    // FIXME: for some reason keydown EventListener won't work with modalRoot or divs in modal body\n    useEffect(() => {\n        document.addEventListener('keydown', handleEscKey);\n        return () => {\n            document.removeEventListener('keydown', handleEscKey);\n        };\n    }, []); \n\n    return ReactDOM.createPortal(\n        <>\n            <ModalOverlay closeModal={closeModal} />\n            <div className={modalStyles.modal_container + ' pl-10 pt-10 pr-10 pb-15'}>\n                <h3 className={\n                    `${modalStyles.modal_header} ${isOrderModal ? (\n                        'text text_type_digits-default'\n                    ) : (\n                        'text text_type_main-large'\n                    )}`\n                }>\n                    {header}\n                </h3>\n                {/* adding box-shadow only in OrderDetailsModal (as in Figma) */}\n                <span className={ `${modalStyles.close_icon} ${isFancyCloseIcon ? modalStyles.fancy_icon : null}` } >\n                    <CloseIcon onClick={closeModal} type='primary' />\n                </span>\n                {children}\n            </div>\n        </>, \n        modalRoot\n    );\n}\n\nexport default Modal;\n","export default __webpack_public_path__ + \"static/media/order-accepted.5cbcff83.gif\";","export default __webpack_public_path__ + \"static/media/logo.9edb13be.png\";","import { FC } from 'react';\nimport loaderStyles from './loader.module.css';\nimport logo from '../../images/logo.png';\n\nconst Loader: FC = () => {\n  return(\n    <div className={loaderStyles.loader}>\n      <img src={logo} alt='' title ='' className={loaderStyles.spinner} />\n    </div>\n  );\n}\n\nexport default Loader;\n","import orderDetailsStyles from './order-details.module.css';\nimport orderAcceptedImage from '../../images/order-accepted.gif'\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector } from '../../services/hooks';\nimport Loader from '../loader/loader';\nimport { FC } from 'react';\n\nconst OrderDetails: FC = () => {\n    const {\n        orderData,\n        orderRequest,\n        orderSuccess,\n        orderFailed\n      } = useAppSelector(\n        state => state.order\n      );\n\n    return(\n        <div className={orderDetailsStyles.order_details_container + ' mt-20 mb-15'}>\n            {\n                orderRequest && \n                !orderFailed && \n                !orderSuccess && (\n                <div className={orderDetailsStyles.loader_container}>\n                    <Loader />\n                </div>\n            )}\n            {\n                orderFailed && \n                !orderRequest && \n                !orderSuccess && (\n                <>\n                    <p className='text text_type_main-large'>\n                        Произошла ошибка\n                    </p>\n                    <p className='text text_type_main-default text_color_inactive mt-8 mb-15'>\n                        Пожалуйста, попробуйте оформить заказ позже\n                    </p>\n                </>\n            )}\n            {\n                orderSuccess && \n                !orderFailed && \n                !orderRequest && (\n                <>\n                    <p className={orderDetailsStyles.order_id + ' text text_type_digits-large'}>\n                        {orderData.id}\n                    </p>\n                    <p className='text text_type_main-medium mt-8 mb-15'>\n                        идентификатор заказа\n                    </p>\n                    <img \n                        // gif image will be played only once (not in loop)\n                        // random parameter at the end of gif url makes it play every time modal is open \n                        src={orderAcceptedImage + '?v=' + Math.floor(Math.random()*100)}\n                        alt=\"Заказ принят\"\n                        title=\"Заказ принят\"\n                        height=\"120\"\n                    />\n                    <p className='text text_type_main-default mt-15 mb-2'>\n                        Ваш заказ начали готовить\n                    </p>\n                    <p className='text text_type_main-default text_color_inactive'>\n                        Дождитесь готовности на орбитальной станции\n                    </p>\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default OrderDetails;\n","import styles from './home.module.css';\n// importing components from project\nimport BurgerConstructor from '../components/burger-constructor/burger-constructor';\nimport BurgerIngredients from '../components/burger-ingredients/burger-ingredients';\nimport Modal from '../components/modal/modal';\nimport OrderDetails from '../components/order-details/order-details';\nimport Loader from '../components/loader/loader';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\nimport { FC, useEffect } from \"react\";\n// import slices and their functions\nimport { orderSlice } from '../services/slices/order';\nimport { userSlice } from '../services/slices/user';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { DndProvider } from 'react-dnd';\n\nconst HomePage: FC = () => {\n  const dispatch = useAppDispatch();\n  const { closeOrderModal } = orderSlice.actions;\n  const { checkAuthorization } = userSlice.actions;\n\n  const {\n    itemsRequest,\n    itemsSuccess,\n    itemsFailed\n  } = useAppSelector(\n    state => state.items\n  );\n\n  const {\n    isOrderModalOpen\n  } = useAppSelector(\n    state => state.order\n  );\n\n    const closeModal = () => {\n      dispatch(closeOrderModal());\n    };\n\n  useEffect(() => {\n    // check cookies with tokens for correct order placement of authorized user\n    dispatch(checkAuthorization());\n  }, []);\n\n  return (\n    <>\n        {\n          itemsFailed && \n          !itemsRequest && \n          !itemsSuccess && (\n            <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\n              Ошибка загрузки\n            </h2>\n        )}\n        {\n          itemsRequest && \n          !itemsFailed && \n          !itemsSuccess && (\n            <Loader />\n        )}\n        {\n          itemsSuccess && \n          !itemsFailed && \n          !itemsRequest && (\n            <div className={styles.container}>\n              <DndProvider backend={HTML5Backend}>\n                <section className={styles.container_left + ' mr-5'}>\n                  <BurgerIngredients />\n                </section>\n                <section className={styles.container_right + ' ml-5'}>\n                  <BurgerConstructor />\n                </section>\n              </DndProvider>\n            </div>\n        )}\n        {\n          isOrderModalOpen && (\n            <Modal \n              header={null}\n              closeModal={closeModal}\n              isFancyCloseIcon >\n                <OrderDetails />\n            </Modal>\n        )}\n    </>\n  );\n}\n\nexport default HomePage;\n","import { FC, FormEventHandler } from 'react';\nimport formStyles from './form.module.css';\n// importing components from library\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\n\ninterface IForm {\n  title?: string,\n  actionName?: string,\n  onFormSubmit?: FormEventHandler<HTMLFormElement>\n}\n\nconst Form: FC<IForm> = (props) => {\n  return(\n    <form\n      className={formStyles.form_container}\n      autoComplete=\"on\"\n      onSubmit={props.onFormSubmit}\n    >\n      {props.title &&\n        <label className=\"text text_type_main-medium\">\n          {props.title}\n        </label>\n      }\n      {props.children}\n      {\n        props.actionName &&\n          <Button type=\"primary\" size=\"medium\">\n            {props.actionName}\n          </Button>\n        }\n    </form>\n  );\n}\n\nexport default Form;\n","import { FC, useState, useRef, useCallback, useEffect, ChangeEvent, FormEvent } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\n// importing components from project\nimport Form from '../components/form/form';\nimport Loader from '../components/loader/loader';\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\n// import slices and their functions\nimport { login, userSlice } from '../services/slices/user';\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ILocation } from '../services/types';\n\nexport const LoginPage: FC = () => {\n  const dispatch = useAppDispatch();\n\n const {\n    userRequest,\n    userSuccess,\n    userFailed\n  } = useAppSelector(\n    state => state.user\n  );\n  const { resetStatus } = userSlice.actions;\n   \n  const history = useHistory();\n  const location = useLocation<ILocation>();\n\n  const resetError = (): void => {\n    dispatch(resetStatus());\n  }  \n\n  // reset status and errors on page load\n  useEffect(() => {\n    resetError();\n  }, [])\n\n  // TODO: rewrite form input vars to 'form' object fields\n  const [emailValue, setEmailValue] = useState<string>('');\n  const [isEmailValid, setEmailValid] = useState<boolean>(true);\n  const [passwordValue, setPasswordValue] = useState<string>('');\n  const [isPasswordEmpty, setPasswordEmpty] = useState<boolean>(false);\n\n  const emailInputRef = useRef<HTMLInputElement>(null);\n\n  const emailRegExp: RegExp = /.+@.+\\.[A-Za-z]+$/;\n\n  const onEmailChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // hide the error message if user writed correct email in the field\n    if (emailRegExp.test(e.target.value)) {\n      setEmailValid(true);\n    }\n    setEmailValue(e.target.value);\n  };\n  \n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // TODO: find a way to trigger PasswordInput error status\n    if (e.target.value.length !== 0) {\n      setPasswordEmpty(false);\n    }\n    setPasswordValue(e.target.value);\n  };\n\n  // TODO: move form/inputs validation function to separate file in /utils?\n\n  interface IFormFields {\n    email: boolean,\n    password: boolean\n  }\n\n  const validateForm = useCallback((): boolean => {\n    // TODO: check is better be done when focus is out of input, before the form submit action\n  \n    const validFields: IFormFields = {\n      email: false,\n      password: false\n    }\n    \n    // performing email field check\n    if (!emailRegExp.test(emailValue)) {\n      setEmailValid(false);\n    }\n    else {\n      validFields.email = true;\n    }\n\n    // performing password field check    \n    if (passwordValue.length < 6) {\n      // TODO: find a way to trigger PasswordInput error status\n      if (passwordValue.length === 0) {\n        setPasswordEmpty(true);\n      }\n    }\n    else {\n      validFields.password = true;\n    }\n\n    if (validFields.email && validFields.password) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }, [emailValue, passwordValue]);\n\n  // FIXME: This callback is needed for redirecting in correct time\n  // (after userSuccess will be set)\n  // Async/await didn't worked in this case for some reason.\n  // Maybe CreateAsyncThunk should be used in userSlice?\n  const redirectOnSuccess = (): void => {\n    // redirecting to the page which unauthed user tried to reach\n    // in other cases redirect to HomePage\n    const { from } = location.state || { from: { pathname: \"/\" } };\n    history.replace(from);\n  }\n\n  const onLoginClick = useCallback((e: FormEvent<HTMLFormElement>): void => {\n      e.preventDefault();\n      const isFormCorrect: boolean = validateForm();\n      if(!isFormCorrect) {\n        return;\n      }\n      else {\n        // if form fields are correct then start login action\n        // won't call API if user data is already in process\n        if (!userRequest) {\n          dispatch(login({\n            email: emailValue,\n            password: passwordValue\n          }, redirectOnSuccess));\n      }\n    }\n  }, [emailValue, passwordValue, userRequest]);\n\n  const onRegisterClick = (): void => {\n    history.replace({ pathname: '/register' });\n  }\n\n  const onForgotPasswordClick = (): void => {\n    history.replace({ pathname: '/forgot-password' });\n  }\n\n  return(\n    <>\n      {\n        userRequest && \n        !userFailed && (\n          <Loader />\n      )}\n      <div className='fullscreen_message'>\n        {\n          userFailed && \n          !userRequest && \n          !userSuccess && (\n            <div className='flex_column mb-30'>\n              <h2 className='mb-10 text text_type_main-large text_color_inactive'>\n                Ошибка авторизации\n              </h2>\n              <Button \n                type=\"primary\"\n                size=\"medium\"\n                onClick={resetError}\n              >\n                Попробовать снова\n              </Button>\n            </div>\n        )}\n        {\n          !userFailed && (\n          <Form\n            title='Вход'\n            actionName='Войти'\n            onFormSubmit={onLoginClick}\n          >\n            <Input\n              type={'email'}\n              placeholder={'E-mail'}\n              onChange={onEmailChange}\n              value={emailValue}\n              name={'email'}\n              error={!isEmailValid}\n              ref={emailInputRef}\n              errorText={'Неправильно введен e-mail'}\n              size={'default'}\n            />\n            <div className={isPasswordEmpty ? 'password_error' : ''}>\n              <PasswordInput\n                onChange={onPasswordChange}\n                value={passwordValue}\n                name={'password'}\n              />\n            </div>\n          </Form>\n        )}\n        <div className='bottom_navigation'>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Вы — новый пользователь?\n          </p>\n          <Button \n            type=\"secondary\"\n            size=\"medium\"\n            onClick={onRegisterClick}\n          >\n            Зарегистрироваться\n          </Button>\n        </div>\n        <div className='bottom_navigation mt-4'>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Забыли пароль?\n          </p>\n          <Button \n            type=\"secondary\"\n            size=\"medium\"\n            onClick={onForgotPasswordClick}\n          >\n            Восстановить пароль\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default LoginPage;\n","import { FC, useState, useRef, useCallback, useEffect, ChangeEvent, FormEvent } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\n// importing components from project\nimport Form from '../components/form/form';\nimport Loader from '../components/loader/loader';\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\n// import slices and their functions\nimport { register, userSlice } from '../services/slices/user';\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { ILocation } from '../services/types';\n\nexport const RegisterPage: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const {\n    userRequest,\n    userSuccess,\n    userFailed\n  } = useAppSelector(\n    state => state.user\n  );\n  const { resetStatus } = userSlice.actions;\n\n  const history = useHistory();\n  const location = useLocation<ILocation>();\n\n  const resetError = (): void => {\n    dispatch(resetStatus());\n  }  \n\n  // reset status and errors on page load\n  useEffect(() => {\n    resetError();\n  }, [])\n\n  const [nameValue, setNameValue] = useState<string>('');\n  const [isNameEmpty, setNameEmpty] = useState<boolean>(false);\n  const [emailValue, setEmailValue] = useState<string>('');\n  const [isEmailValid, setEmailValid] = useState<boolean>(true);\n  const [passwordValue, setPasswordValue] = useState<string>('');\n  const [isPasswordEmpty, setPasswordEmpty] = useState<boolean>(false);\n\n  const nameInputRef = useRef<HTMLInputElement>(null);\n  const emailInputRef = useRef<HTMLInputElement>(null);\n\n  const emailRegExp: RegExp = /.+@.+\\.[A-Za-z]+$/;\n\n  const onNameChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // hide the error message if user is writing something in the name field\n    if (e.target.value.length > 0) {\n      setNameEmpty(false);\n    }\n    setNameValue(e.target.value);\n  };\n\n  const onEmailChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // hide the error message if user writed correct email in the field\n    if (emailRegExp.test(e.target.value)) {\n      setEmailValid(true);\n    }\n    setEmailValue(e.target.value);\n  };\n  \n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // TODO: find a way to trigger PasswordInput error status\n    if (e.target.value.length !== 0) {\n      setPasswordEmpty(false);\n    }\n    setPasswordValue(e.target.value);\n  };\n\n  // TODO: move form/inputs validation function to separate file in /utils?\n\n  interface IFormFields {\n    email: boolean,\n    password: boolean,\n    name: boolean\n  }\n\n  const validateForm = useCallback(() => {\n    // TODO: check is better be done when focus is out of input, before the form submit action\n    \n    const validFields: IFormFields = {\n      email: false,\n      password: false,\n      name: false\n    }\n    \n    // performing email field check\n    if (!emailRegExp.test(emailValue)) {\n      setEmailValid(false);\n    }\n    else {\n      validFields.email = true;\n    }\n\n    // performing password field check    \n    if (passwordValue.length < 6) {\n      // TODO: find a way to trigger PasswordInput error status\n      if (passwordValue.length === 0) {\n        setPasswordEmpty(true);\n      }\n    }\n    else {\n      validFields.password = true;\n    }\n\n    // performing name field check \n    if (nameValue.length === 0) {\n      setNameEmpty(true);\n    }\n    else {\n      validFields.name = true;\n    }\n\n    if (validFields.email && validFields.password && validFields.name) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }, [emailValue, passwordValue, nameValue]);\n\n  const redirectOnSuccess = (): void => {\n    // redirecting to the page which unauthed user tried to reach\n    // in other cases redirect to HomePage\n    const { from } = location.state || { from: { pathname: \"/\" } };\n    history.replace(from);\n  }\n\n  const onRegisterClick = useCallback((e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormCorrect: boolean = validateForm();\n    if(!isFormCorrect) {\n      return;\n    }\n    else {\n      // if form fields are correct then start registration action\n      // won't call API if user data is already in process\n      if (!userRequest) {\n        dispatch(register({\n          name: nameValue,\n          email: emailValue,\n          password: passwordValue\n        }, redirectOnSuccess))\n      }\n    }\n  }, [emailValue, nameValue, passwordValue, userRequest]);\n\n  const onLoginClick = (): void => {\n    history.replace({ pathname: '/login' });\n  }\n\n  return(\n    <>\n      {\n        (userRequest) && \n        !userFailed && (\n          <Loader />\n      )}\n      <div className='fullscreen_message'>\n        {\n          userFailed && \n          !userRequest && \n          !userSuccess && (\n            <div className='flex_column mb-30'>\n              <h2 className='mb-10 text text_type_main-large text_color_inactive'>\n                Ошибка при регистрации\n              </h2>\n              <Button \n                type=\"primary\"\n                size=\"medium\"\n                onClick={resetError}\n              >\n                Попробовать снова\n              </Button>\n            </div>\n        )}\n        {\n          !userFailed && (\n          <Form\n            title='Регистрация'\n            actionName='Зарегистрироваться'\n            onFormSubmit={onRegisterClick}\n          >\n            <Input\n              type={'text'}\n              placeholder={'Имя'}\n              onChange={onNameChange}\n              value={nameValue}\n              name={'name'}\n              error={isNameEmpty}\n              ref={nameInputRef}\n              errorText={'Поле не может быть пустым'}\n              size={'default'}\n            />\n            <Input\n              type={'email'}\n              placeholder={'E-mail'}\n              onChange={onEmailChange}\n              value={emailValue}\n              name={'email'}\n              error={!isEmailValid}\n              ref={emailInputRef}\n              errorText={'Неправильно введен e-mail'}\n              size={'default'}\n            />\n            {/* TODO: find a way to trigger PasswordInput error status */}\n            <div className={isPasswordEmpty ? 'password_error' : ''}>\n              <PasswordInput\n                onChange={onPasswordChange}\n                value={passwordValue}\n                name={'password'}\n              />\n            </div>\n          </Form>\n        )}\n        <div className='bottom_navigation'>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Уже зарегистрированы?\n          </p>\n          <Button \n            type=\"secondary\"\n            size=\"medium\"\n            onClick={onLoginClick}\n          >\n            Войти\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RegisterPage;\n","import { FC, useState, useRef, useCallback, useEffect, ChangeEvent, FormEvent } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\n// importing components from project\nimport Form from '../components/form/form';\nimport Loader from '../components/loader/loader';\nimport { Input, Button } from '@ya.praktikum/react-developer-burger-ui-components';\n// import slices and their functions\nimport { forgotPassword, userSlice } from '../services/slices/user';\n\nimport { useHistory } from 'react-router-dom';\n\nexport const ForgotPasswordPage: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const {\n    userRequest,\n    userSuccess,\n    userFailed\n  } = useAppSelector(\n    state => state.user\n  );\n  const { resetStatus } = userSlice.actions;\n\n  const history = useHistory();\n\n  const resetError = (): void => {\n    dispatch(resetStatus());\n  }  \n\n  // reset status and errors on page load\n  useEffect(() => {\n    resetError();\n  }, [])\n\n  const [emailValue, setEmailValue] = useState<string>('');\n  const [isEmailValid, setEmailValid] = useState<boolean>(true);\n\n  const emailInputRef = useRef<HTMLInputElement>(null);\n\n  const emailRegExp: RegExp = /.+@.+\\.[A-Za-z]+$/;\n\n  const onEmailChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // hide the error message if user writed correct email in the field\n    if (emailRegExp.test(e.target.value)) {\n      setEmailValid(true);\n    }\n    setEmailValue(e.target.value);\n  };\n\n  // TODO: move form/inputs validation function to separate file in /utils?\n\n  interface IFormFields {\n    email: boolean\n  }\n\n  const validateForm = (): boolean => {\n    // TODO: check is better be done when focus is out of input, before the form submit action\n    \n    const validFields:IFormFields = {\n      email: false\n    }\n\n    // performing email field check\n    if (!emailRegExp.test(emailValue)) {\n      setEmailValid(false);\n    }\n    else {\n      validFields.email = true;\n    }\n\n    if (validFields.email) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  const redirectOnSuccess = (): void => {\n    history.replace({ \n      pathname: '/reset-password',\n      state: { from: '/forgot-password' }\n    });\n  }\n\n  const onResetPasswordClick = useCallback((e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormCorrect: boolean = validateForm();\n    if(!isFormCorrect) {\n      return;\n    }\n    else {\n      // if form field are correct then start reset password action\n      // won't call API if user data is already in process\n      if (!userRequest) {\n        dispatch(forgotPassword(emailValue, redirectOnSuccess));\n      }\n    }\n  }, [emailValue, userRequest]);\n\n  const onLoginClick = (): void => {\n    history.replace({ pathname: '/login' });\n  }\n\n  return(\n    <>\n      {\n        userRequest && \n        !userFailed && (\n          <Loader />\n      )}\n      <div className='fullscreen_message'>\n        {\n          userFailed && \n          !userRequest && \n          !userSuccess && (\n            <div className='flex_column mb-30'>\n              <h2 className='mb-10 text text_type_main-large text_color_inactive'>\n                Ошибка восстановления пароля\n              </h2>\n              <Button \n                type=\"primary\"\n                size=\"medium\"\n                onClick={resetError}\n              >\n                Попробовать снова\n              </Button>\n            </div>\n        )}\n        {\n          !userFailed && (\n          <Form\n            title='Восстановление пароля'\n            actionName='Восстановить'\n            onFormSubmit={onResetPasswordClick}\n          >\n            <Input\n              type={'email'}\n              placeholder={'Укажите e-mail'}\n              onChange={onEmailChange}\n              value={emailValue}\n              name={'email'}\n              error={!isEmailValid}\n              ref={emailInputRef}\n              errorText={'Неправильно введен e-mail'}\n              size={'default'}\n            />\n          </Form>\n        )}\n        <div className='bottom_navigation mt-4'>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Вспомнили пароль?\n          </p>\n          <Button \n            type=\"secondary\"\n            size=\"medium\"\n            onClick={onLoginClick}\n          >\n            Войти\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default ForgotPasswordPage;\n","import styles from './reset-password.module.css';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\nimport { FC, useState, useRef, useCallback, useEffect, ChangeEvent, FormEvent } from 'react';\n// importing components from project\nimport Form from '../components/form/form';\nimport Loader from '../components/loader/loader';\nimport { Input, PasswordInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\n// import slices and their functions\nimport { resetPassword, userSlice } from '../services/slices/user';\n\nimport { useHistory } from 'react-router-dom';\n\nexport const ResetPasswordPage: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const {\n    userRequest,\n    userSuccess,\n    userFailed\n  } = useAppSelector(\n    state => state.user\n  );\n  const { resetStatus } = userSlice.actions;\n\n  const history = useHistory();\n\n  const resetError = (): void => {\n    dispatch(resetStatus());\n  }  \n\n  // reset status and errors on page load\n  useEffect(() => {\n    resetError();\n  }, [])\n  \n  const [passwordValue, setPasswordValue] = useState<string>('');\n  const [isPasswordEmpty, setPasswordEmpty] = useState<boolean>(false);\n  const [codeValue, setCodeValue] = useState<string>('');\n  const [isCodeEmpty, setCodeEmpty] = useState<boolean>(false);\n\n  const codeInputRef = useRef<HTMLInputElement>(null);\n\n  const onCodeChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // hide the error message if user is writing something in the code field\n    if (e.target.value.length > 0) {\n      setCodeEmpty(false);\n    }\n    setCodeValue(e.target.value);\n  };\n\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // TODO: find a way to trigger PasswordInput error status\n    if (e.target.value.length !== 0) {\n      setPasswordEmpty(false);\n    }\n    setPasswordValue(e.target.value);\n  };\n\n  // TODO: move form/inputs validation function to separate file in /utils?\n  \n  interface IFormFields {\n    password: boolean\n    code: boolean\n  }\n\n  const validateForm = useCallback((): boolean => {\n    // TODO: check is better be done when focus is out of input, before the form submit action\n    \n    const validFields: IFormFields = {\n      password: false,\n      code: false\n    }\n\n    // performing password field check    \n    if (passwordValue.length < 6) {\n      // TODO: find a way to trigger PasswordInput error status\n      if (passwordValue.length === 0) {\n        setPasswordEmpty(true);\n      }\n    }\n    else {\n      validFields.password = true;\n    }\n\n    // performing code field check \n    if (codeValue.length === 0) {\n      setCodeEmpty(true);\n    }\n    else {\n      validFields.code = true;\n    }    \n\n    if (validFields.password && validFields.code) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }, [codeValue, passwordValue]);\n\n  const redirectOnSuccess = (): void => {\n    history.replace({ pathname: '/login' });\n  }\n\n  const onResetPasswordClick = useCallback((e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const isFormCorrect: boolean = validateForm();\n    if(!isFormCorrect) {\n      return;\n    }\n    else {\n      // if form fields are correct then start reset password action\n      // won't call API if user data is already in process\n      if (!userRequest) {\n        dispatch(resetPassword(\n          codeValue,\n          passwordValue,\n          redirectOnSuccess\n        ));\n      }\n    }\n  }, [codeValue, passwordValue, userRequest]);\n\n  const onLoginClick = (): void => {\n    history.replace({ pathname: '/login' });\n  }\n\n  return(\n    <>\n      {\n        userRequest && \n        !userFailed && (\n          <Loader />\n      )}\n      <div \n        className={styles.reset_password_container + ' fullscreen_message'}>\n        {\n          userFailed && \n          !userRequest && \n          !userSuccess && (\n            <div className='flex_column mb-30'>\n              <h2 className='mb-10 text text_type_main-large text_color_inactive'>\n                Ошибка восстановления пароля\n              </h2>\n              <Button \n                type=\"primary\"\n                size=\"medium\"\n                onClick={resetError}\n              >\n                Попробовать снова\n              </Button>\n            </div>\n        )}\n        {\n          !userFailed && (\n          <Form\n            title='Восстановление пароля'\n            actionName='Сохранить'\n            onFormSubmit={onResetPasswordClick}\n          >\n            {/* TODO: find a way to trigger PasswordInput error status */}\n            <div className={isPasswordEmpty ? 'password_error' : ''}>\n              <PasswordInput\n                onChange={onPasswordChange}\n                value={passwordValue}\n                name={'password'}\n              />\n            </div>\n            <Input\n              type={'text'}\n              placeholder={'Введите код из письма'}\n              onChange={onCodeChange}\n              value={codeValue}\n              name={'code'}\n              error={isCodeEmpty}\n              ref={codeInputRef}\n              errorText={'Поле не может быть пустым'}\n              size={'default'}\n            />\n          </Form>\n        )}\n        <div className='bottom_navigation mt-4'>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            Вспомнили пароль?\n          </p>\n          <Button \n            type=\"secondary\"\n            size=\"medium\"\n            onClick={onLoginClick}\n          >\n            Войти\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ResetPasswordPage;\n","// importing typed hooks for Redux Toolkit\nimport { useAppSelector } from '../../services/hooks';\nimport ordersCardStyles from './orders-card.module.css';\n// importing components from library\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { formatDateTime } from '../../services/utils'\n\nimport { useHistory } from 'react-router-dom';\nimport { FC, useCallback, useEffect, useState, memo } from 'react';\nimport { IOrder } from '../../services/types';\n\ninterface IOrdersCardProps {\n  order: IOrder,\n  source: string\n}\n\nconst OrdersCard: FC<IOrdersCardProps> = ({ order, source }) => {\n  const history = useHistory();\n\n  const {\n    items\n  } = useAppSelector(\n    state => state.items\n  );\n\n  const [orderStatusName, setOrderStatusName] = useState<string>('');\n  const [orderStatusClass, setOrderStatusClass] = useState<string>('');\n  \n  // defining the order status text and class based on status string from server\n  useEffect(() => {\n    switch (order.status) {\n      case 'created':\n        setOrderStatusName('Создан');\n        break;\n\n      case 'pending':\n        setOrderStatusName('Готовится');\n        break;\n\n      case 'done':\n        setOrderStatusName('Выполнен')\n        setOrderStatusClass(ordersCardStyles.status_completed);\n        break;\n\n      // TODO: find out what status string server will send on error\n      case 'canceled':\n        setOrderStatusName('Отменён')\n        setOrderStatusClass(ordersCardStyles.status_canceled);\n        break;\n\n      default:\n        break;\n    }\n  }, [order.status]);\n\n  const handleOrderClick = () => {\n    const currentUrl = history.location.pathname;\n    history.replace({ \n      pathname: `${currentUrl}/${order._id}`,\n      state: { background: history.location }\n    });\n  }\n\n  // parsing data and time to specific format as in Figma\n  const getOrderDateTime = useCallback(() => (\n    order.createdAt && formatDateTime(order.createdAt)\n  ), [order.createdAt]);\n\n  const orderedIngredients = order.ingredients &&\n    order.ingredients.map(item_id => (\n      items.find(item => item._id === item_id)\n  ));\n\n  // skip if there empty or other falsy result instead of ingredient id\n  const filteredOrderedIngredients = orderedIngredients &&\n    orderedIngredients.filter(item => item);\n\n  const orderedBun = filteredOrderedIngredients &&\n    filteredOrderedIngredients.find(item => \n      item && item.type === 'bun');\n  const orderedMiddleItems = filteredOrderedIngredients &&\n    filteredOrderedIngredients.filter(item => \n      item && item.type !== 'bun');\n\n  const renderIngredientIcons = useCallback(() => {\n    const itemsToRender = orderedMiddleItems;\n    // adding bun in the first place\n    itemsToRender && itemsToRender.splice(0, 0, orderedBun);\n\n    if (!!itemsToRender)\n    return itemsToRender.map((ingredient, index) => {\n      const ingredientsToShow = 5;\n      if (index > ingredientsToShow) return null;\n\n      return (\n        // skip if there is no bun or other invalid ingredient\n        (ingredient && ingredient._id) &&\n        <li key={ingredient._id+index}>\n          <span \n            className={ordersCardStyles.ingredient_icon_wrapper}\n            style={{ zIndex: 10 - index }}\n          >\n            <img \n              src={ingredient.image_mobile}\n              alt={ingredient.name}\n              title={ingredient.name}\n              width='112px'\n              className='ingredient_icon'\n            />\n          </span>\n          {index === ingredientsToShow ? (\n            <span\n              className={ordersCardStyles.more_ingredients_icon}\n            >\n              <p className={\n                ordersCardStyles.more_icon_text +\n                ' text text_type_main-default'\n              }>\n                {!!itemsToRender && !!itemsToRender.length\n                  ? `+${itemsToRender.length - ingredientsToShow}`\n                  : null\n                }\n              </p>\n              <span className={ordersCardStyles.more_icon_wrapper}></span>\n            </span>\n          ) : null}\n        </li>\n      );\n    })\n  }, [orderedMiddleItems, orderedBun]);\n\n  const calculateOrderPrice = useCallback(() => (\n    // skip if there is no bun\n    orderedBun && orderedBun.price && orderedMiddleItems ? \n      (\n        // select only 1st bun in a case when there are 2 buns in the order (there shouldn't be)\n        orderedBun.price + orderedMiddleItems.reduce((acc, p) =>\n          !!p ? (acc + (p.price || 0)) : 0, 0)\n      ) : ( 0 )\n  ), [orderedBun, orderedMiddleItems]);\n\n  return (\n    // skip if there is no bun\n    (!!orderedBun && !!orderedBun._id) ?\n      <li\n        className={ordersCardStyles.order_card} \n        onClick={handleOrderClick}\n      >\n        <div className={ordersCardStyles.order_info}>\n          <p className='text text_type_digits-default'>\n            {/* display order number in 6-digit format filled with zeros */}\n            {typeof order.number === 'number'\n              ? `#${order.number.toString().padStart(6, '0')}`\n              : null\n            }\n          </p>\n          <p className='text text_type_main-default text_color_inactive'>\n            {getOrderDateTime()}\n          </p>\n        </div>\n        <p className={'mt-6 text text_type_main-medium'}>\n          {order.name}\n        </p>\n        {/* order status is displayed only on HistoryPage, not on FeedPage */}\n        {source === 'history' ?\n          <p className={\n            `${orderStatusClass} mt-2 text text_type_main-default`\n          }>\n            {orderStatusName}\n          </p>\n          : null\n        }\n        <div className={ordersCardStyles.order_info + ' mt-6'}>\n          <ul className={ordersCardStyles.ingredient_icons_container}>\n            {renderIngredientIcons()}\n          </ul>\n          <div className={'flex_row ml-6'}>\n            <p className='text text_type_digits-default'>{calculateOrderPrice()}</p>\n            <CurrencyIcon type='primary'/>\n          </div>\n        </div>\n      </li>\n    : null\n  );\n};\n\n// comparing updateAt field from server and from props\n// to check whether the order data was changed\nconst compareOrders = (\n  prevProps: IOrdersCardProps,\n  nextProps: IOrdersCardProps\n) => {\n  if (prevProps.order)\n    return prevProps.order.updatedAt !== nextProps.order.updatedAt;\n  else\n    return false\n}\n\n// memoizing component to avoid unnecessary renders\nexport default memo(OrdersCard, compareOrders);\n","import { FC } from 'react';\nimport ordersListStyles from './orders-list.module.css';\n// importing components from project\nimport OrdersCard from '../orders-card/orders-card';\nimport { IOrder } from '../../services/types';\n\ninterface IOrdersListProps {\n  orders: Array<IOrder>,\n  source: string\n}\n\nconst OrdersList: FC<IOrdersListProps> = ({ orders, source }) => {\n  return (\n    <>  \n      {\n        (orders.length > 0) && \n        <ul className={ordersListStyles.orders_list}>\n          {orders.map((order) => (\n            <OrdersCard\n              key={order._id}\n              source={source}\n              order={order}\n            />\n          ))}\n        </ul>\n      }\n      {/* \n        TODO: show this message only after orders are fully loaded from websocket and array is empty \n        <h3 className='text text_type_main-large text_color_inactive pb-6 ml-30'>   \n          Заказов нет\n        </h3>)\n        }\n      */}\n    </>\n  );\n};\n\nexport default OrdersList;\n","// importing typed hooks for Redux Toolkit\nimport { useAppSelector } from '../../services/hooks';\nimport feedInfoPanelStyles from './feed-info-panel.module.css';\nimport { FC, useCallback } from 'react';\nimport { IOrder } from '../../services/types';\n\nconst FeedInfoPanel: FC = () => {\n\n  const {\n    orders,\n    ordersTotal,\n    ordersTotalToday\n  } = useAppSelector(\n    state => state.feed\n  );\n\n  // showing max 20 last completed or pending orders in list\n  const maxDisplayedOrders: number = 20;\n\n  const renderCompletedOrders = useCallback(() => {\n    const completedOrders: Array<IOrder> = orders.filter((order) => (\n      order.status === 'done'\n    ));    \n    return (\n      completedOrders.slice(0, maxDisplayedOrders).map((order) => {\n        if(!!order.number) \n          return (\n            <li\n              className='text text_type_digits-default'\n              key={order._id}\n            >\n              {/* display order number in 6-digit format filled with zeros */}\n              {order.number.toString().padStart(6, '0')}\n            </li>\n          )\n        else\n          return null;\n        }\n      )\n    )\n  }, [orders]);\n\n  const renderPreparingOrders = useCallback(() => {\n    const pendingOrders = orders.filter((order) => (\n      order.status === 'pending'\n    ));    \n    return (\n      pendingOrders.slice(0, maxDisplayedOrders).map((order) => {\n        if(!!order.number) \n          return (\n            <li\n              className='text text_type_digits-default'\n              key={order._id}\n            >\n              {/* display order number in 6-digit format filled with zeros */}\n              {order.number.toString().padStart(6, '0')}\n            </li>\n          )\n        else\n          return null;\n        }\n      )\n    )\n  }, [orders]);\n\n  return(\n    <div className={feedInfoPanelStyles.panel_container}>\n      <div className={feedInfoPanelStyles.orders_list_container}>\n        <div className={feedInfoPanelStyles.orders_list_column}>\n          <p className='mb-6 text text_type_main-medium'>\n            Готовы:\n          </p>\n          <ul className={feedInfoPanelStyles.orders_list_completed}>\n            {renderCompletedOrders()}\n          </ul>\n        </div>\n        <div className={feedInfoPanelStyles.orders_list_column}>\n          <p className='mb-6 text text_type_main-medium'>\n            В работе:\n          </p>\n          <ul className={feedInfoPanelStyles.orders_list_preparing}>\n            {renderPreparingOrders()}\n          </ul>\n        </div>\n      </div>\n      <p className='mt-15 text text_type_main-medium'>\n        Выполнено за всё время:\n      </p>\n      <p className='text text_type_digits-large'>\n        {/* using space as a thousands separator */}\n        {ordersTotal.toLocaleString()}\n      </p>\n      <p className='mt-15 text text_type_main-medium'>\n        Выполнено за сегодня:\n      </p>\n      <p className='text text_type_digits-large'>\n        {ordersTotalToday.toLocaleString()}\n      </p>\n    </div>\n  );\n};\n\nexport default FeedInfoPanel;\n","import { FC, useEffect } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\nimport styles from './feed.module.css';\n// importing components from project\nimport OrdersList from '../components/orders-list/orders-list';\nimport FeedInfoPanel from '../components/feed-info-panel/feed-info-panel';\nimport Loader from '../components/loader/loader';\n// import slices and their functions\nimport { feedSlice, startFeed, stopFeed } from '../services/slices/feed';\n\nexport const FeedPage: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const {\n    itemsRequest,\n    itemsSuccess,\n    itemsFailed\n  } = useAppSelector(\n    state => state.items\n  );\n  const {\n    orders,\n    feedRequest,\n    feedSuccess,\n    feedFailed\n  } = useAppSelector(\n    state => state.feed\n  );\n\n  const {\n    wsConnected,\n    wsError\n  } = useAppSelector(\n    state => state.ws\n  );\n\n  // we need to have feed from websocket in store to render orders data\n  useEffect(() => {\n    // open new websocket when the page is opened\n    dispatch(startFeed());\n    return () => {\n      // close the websocket when the page is closed\n      dispatch(stopFeed());\n    };  \n  }, []);\n\n  useEffect(() => {\n    if (wsConnected && orders.length > 0)\n      dispatch(feedSlice.actions.success());\n    else if (wsError)\n      dispatch(feedSlice.actions.failed());\n  }, [wsConnected, wsError, orders]);\n\n  return (\n    <>\n      {\n        (itemsRequest || feedRequest) && \n        (!itemsFailed || !feedFailed) && \n        (!itemsSuccess || !feedSuccess) && (\n          <Loader />\n      )}\n      {\n        (itemsFailed || feedFailed) && \n        (!itemsRequest || !feedRequest) && \n        (!itemsSuccess || !feedSuccess) && (\n          <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\n            Ошибка загрузки\n          </h2>\n      )}\n      {\n        (itemsSuccess && feedSuccess) && \n        (!itemsFailed || !feedFailed) && \n        (!itemsRequest || !feedRequest) && (\n          <>\n            <h1 className={\n              styles.feed_title +\n              ' mt-10 mb-5 text text_type_main-large text_color_default'\n            }>\n                Лента заказов\n            </h1>\n            <div className={styles.feed_container}>\n              <div className={styles.feed_orders_container}>\n                <OrdersList\n                  source='feed'\n                  orders={orders}\n                />\n              </div>\n              <div className={styles.feed_info_container}>\n                 <FeedInfoPanel />\n              </div>\n            </div>\n          </>\n      )}\n    </>\n  );\n}\n\nexport default FeedPage;\n","// importing typed hooks for Redux Toolkit\nimport { useAppSelector } from '../../services/hooks';\nimport orderDetailedViewStyles from './order-detailed-view.module.css';\n// importing components from library\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { formatDateTime } from '../../services/utils'\n\nimport { FC, useCallback, useEffect, useState } from 'react';\nimport { IOrder, IIngredient } from '../../services/types';\n// import classNames from '../../../declarations/*.css';\n\ninterface IOrderDetailedView {\n  order: IOrder,\n  isOrderModal?: boolean\n}\n\ntype TOrderStatus = 'Создан' | 'Готовится' | 'Выполнен' | 'Отменён' | '';\n\nconst OrderDetailedView: FC<IOrderDetailedView> = ({ order, isOrderModal=false }) => {\n  const {\n    items\n  } = useAppSelector(\n    state => state.items\n  );\n\n  const [orderStatusName, setOrderStatusName] = useState<TOrderStatus>('');\n  // const [orderStatusClass, setOrderStatusClass] = useState<typeof classNames>({});\n  const [orderStatusClass, setOrderStatusClass] = useState<string>('');\n  \n  // defining the order status text and class based on status string from server\n  useEffect(() => {\n    switch (order.status) {\n      case 'created':\n        setOrderStatusName('Создан');\n        break;\n\n      case 'pending':\n        setOrderStatusName('Готовится');\n        break;\n\n      case 'done':\n        setOrderStatusName('Выполнен')\n        setOrderStatusClass(orderDetailedViewStyles.status_completed);\n        break;\n\n      // TODO: find out what status string server will send on error\n      case 'canceled':\n        setOrderStatusName('Отменён')\n        setOrderStatusClass(orderDetailedViewStyles.status_canceled);\n        break;\n\n      default:\n        break;\n    }\n  }, [order.status]);\n\n  // parsing data and time to specific format as in Figma\n  const getOrderDateTime = useCallback(():string => (\n    !!order.createdAt ? formatDateTime(order.createdAt) : ''\n  ), [order.createdAt]);\n\n  const orderedIngredients: Array<IIngredient> = !!order.ingredients ? (\n    order.ingredients.map(item_id => (\n      items.find(item => item?._id === item_id)\n    ) || {})\n  ) : []\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const orderedBun: IIngredient = orderedIngredients.find(\n    item => item.type === 'bun'\n  ) || {};\n\n  const orderedMiddleItems: Array<IIngredient> = orderedIngredients.filter(\n    item => item.type !== 'bun'\n  );\n    \n  const renderIngredientIcons = useCallback((): Array<IIngredient> => {\n    const itemsToRender: Array<IIngredient> = orderedMiddleItems;\n    // adding bun in the first place\n    itemsToRender.splice(0, 0, orderedBun);\n\n    type TCountedItem = IIngredient & { count?: number };\n \n    type TUniqueCountedItems = {\n      [_id: string]: TCountedItem\n    }\n\n    const countedItems: Array<TCountedItem> = itemsToRender?.map((item) => {\n      return { count: 1, ...item }\n    });\n\n    const uniqueCountedItems:TUniqueCountedItems = countedItems.reduce<TUniqueCountedItems>(\n      (a:any, b:TCountedItem) => {\n        if (!!b._id) {\n          a[b._id] = \n            {\n              ...b,\n              // counting buns twice\n              count: ( !!a[b._id] ? a[b._id].count : 0) + (b.type === 'bun' ? 2 : 1),\n            }\n          return a\n        }\n        else return null\n      }, {});\n\n    const renderedItems: Array<JSX.Element> = [];\n    for (let item_id in uniqueCountedItems) {\n      renderedItems.push(\n        <li\n          className={orderDetailedViewStyles.ingredient_wrapper}\n          key={uniqueCountedItems[item_id]._id}>\n          <span \n            className='ingredient_icon_wrapper'\n          >\n            <img \n              src={uniqueCountedItems[item_id].image_mobile}\n              alt={uniqueCountedItems[item_id].name}\n              title={uniqueCountedItems[item_id].name}\n              width='112px'\n              className='ingredient_icon'\n            />\n          </span>\n          <p className={\n            orderDetailedViewStyles.ingredient_name +\n            ' text text_type_main-default'\n          }>\n            {uniqueCountedItems[item_id].name}\n          </p>\n          <span className={orderDetailedViewStyles.ingredient_price}>\n            <p className='text text_type_digits-default'>\n              {`${uniqueCountedItems[item_id].count} x ${uniqueCountedItems[item_id].price}`}\n            </p>\n            <CurrencyIcon type='primary'/>\n          </span>\n        </li>\n      )\n    };\n    return renderedItems;\n  }, [orderedMiddleItems, orderedBun]);\n\n  const calculateOrderPrice = useCallback((): number => {\n    const orderIngredients: Array<IIngredient> = order.ingredients?.map(item_id => {\n      const orderedItem: IIngredient = items.find(item => item._id === item_id) || {};\n      return ({\n        price: orderedItem.price,\n        type: orderedItem.type\n      })\n    }) || [];\n    // select only 1st bun in a case when there are 2 buns in the order (there shouldn't be)\n    const bunPrice: number = orderIngredients.find(item => item.type === 'bun')?.price || 0;\n    return(bunPrice * 2 + orderIngredients.reduce((acc, p) => (\n      acc + (p.type !== 'bun' ? (p.price || 0) : 0)), 0)\n    );\n  }, [items, order.ingredients]);\n\n  return(\n    <div className={orderDetailedViewStyles.order_container}>\n      {!isOrderModal &&\n        <p className={\n          orderDetailedViewStyles.order_id +\n          ' text text_type_digits-default'\n        }>\n        {/* display order number in 6-digit format filled with zeros */}\n        {`#${order.number?.toString().padStart(6, '0')}`}\n      </p>\n      }\n      <p className={'mt-10 mb-3 text text_type_main-medium'}>\n        {order.name}\n      </p>\n      <p className={\n        `${orderStatusClass} mt-2 text text_type_main-default`\n      }>\n        {orderStatusName}\n      </p>\n      <p className={'mt-15 mb-6 text text_type_main-medium'}>\n        Состав:\n      </p>\n      <ul className={orderDetailedViewStyles.ingredients_container + ' pr-6'}>\n        {renderIngredientIcons()}\n      </ul>\n      <div className={orderDetailedViewStyles.order_info + ' mt-10'}>\n        <p className='text text_type_main-default text_color_inactive'>\n          {getOrderDateTime()}\n        </p>  \n        <div className={'flex_row ml-6'}>\n          <p className='text text_type_digits-default'>{calculateOrderPrice()}</p>\n          <CurrencyIcon type='primary'/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default OrderDetailedView;\n","import { FC, useEffect, useState } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\nimport { useParams, useLocation  } from 'react-router-dom';\n// importing components from project\nimport Loader from '../components/loader/loader';\nimport OrderDetailedView from '../components/order-detailed-view/order-detailed-view';\n// import slices and their functions\nimport { feedSlice, startFeed, stopFeed } from '../services/slices/feed';\nimport { startHistory, stopHistory } from '../services/slices/user';\nimport { IOrder } from '../services/types';\n\nexport const OrderPage: FC = () => {\n  const dispatch = useAppDispatch();\n  // for user profile page we should open different websocket with auth token\n  // useRouteMatch for some reason returning always null here\n  const location = useLocation();\n  const isFeedPage: boolean = location.pathname.split('/')[1] === 'feed';\n  \n  const {\n    itemsRequest,\n    itemsSuccess,\n    itemsFailed\n  } = useAppSelector(\n    state => state.items\n  );\n  const {\n    orders,\n    feedRequest,\n    feedSuccess,\n    feedFailed\n  } = useAppSelector(\n    state => state.feed\n  );\n\n  const {\n    wsConnected,\n    wsError\n  } = useAppSelector(\n    state => state.ws\n  );\n\n  const [currentOrder, setCurrentOrder] = useState<IOrder>({});\n\n  // we need to have feed from websocket in store to render orders data\n  useEffect(() => {\n    // open new websocket when the page is opened\n    if(isFeedPage)\n      dispatch(startFeed());\n    else\n      dispatch(startHistory());\n    return () => {\n      // close the websocket when the page is closed\n      if(isFeedPage)\n        dispatch(stopFeed());\n      else\n        dispatch(stopHistory());\n    };  \n  }, []);\n\n  const currentOrderId:string = useParams<{ id: string }>().id;\n\n  useEffect(() => {\n    if (!!orders && orders.length > 0 && wsConnected) {\n      setCurrentOrder(orders.find(order => order._id === currentOrderId) || {})\n      dispatch(feedSlice.actions.success());\n    }\n    else if (wsError)\n      dispatch(feedSlice.actions.failed());\n    else \n      dispatch(feedSlice.actions.request());\n  }, [wsConnected, orders, wsError]);\n\n  return(\n    <>\n      {\n        (itemsRequest || feedRequest) && \n        (!itemsFailed || !feedFailed) && \n        (!itemsSuccess || !feedSuccess) && (\n          <Loader />\n      )}\n      {\n        (itemsFailed || feedFailed) && \n        (!itemsRequest || !feedRequest) && \n        (!itemsSuccess || !feedSuccess) && (\n          <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\n            Ошибка загрузки\n          </h2>\n      )}\n      {\n        (itemsSuccess && feedSuccess ) &&\n        (currentOrder !== {}) &&\n        (!itemsFailed || !feedFailed) && \n        (!itemsRequest || !feedRequest) && (\n          <div className='fullscreen_message'>\n            <OrderDetailedView\n              order={currentOrder}\n            />\n          </div>\n        )}\n    </>\n  );\n}\n\nexport default OrderPage;\n","import { FC, useEffect, useCallback } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\n// importing components from project\nimport Modal from '../components/modal/modal';\nimport Loader from '../components/loader/loader';\nimport OrderDetailedView from '../components/order-detailed-view/order-detailed-view';\n// import slices and their functions\nimport { feedSlice } from '../services/slices/feed';\nimport { itemsSlice } from '../services/slices/items';\nimport { ILocation, IOrder } from '../services/types';\n\nexport const OrderModalPage: FC = () => {\n  const dispatch = useAppDispatch();\n  \n  const {\n    itemsRequest,\n    itemsSuccess,\n    itemsFailed\n  } = useAppSelector(\n    state => state.items\n  );\n  const {\n    orders,\n    feedRequest,\n    feedSuccess,\n    feedFailed\n  } = useAppSelector(\n    state => state.feed\n  );\n\n  const {\n    wsConnected,\n    wsError\n  } = useAppSelector(\n    state => state.ws\n  );\n\n  const { request } = itemsSlice.actions;\n\n  const history = useHistory();\n  const location = useLocation<ILocation>();\n\n  useEffect(() => {\n    if (wsConnected)\n      dispatch(feedSlice.actions.success());\n    else if (wsError)\n      dispatch(feedSlice.actions.failed());\n    else \n      dispatch(feedSlice.actions.request());\n  }, [wsConnected, wsError]);\n\n  const currentOrderId: string = useParams<{ id: string }>().id;\n  const currentOrder: IOrder = orders.find(order => order._id === currentOrderId) || {};\n\n  const replaceState = useCallback(() => {\n    // hiding the content on page before the reload starts\n    dispatch(request())\n    // remove the background element to show ingredient page instead of a modal\n    history.replace({ \n      ...history.location,\n      state: { background: undefined }\n  });\n  }, [history]);\n\n  // return to parent page if modal is closed\n  const closeModal = (): void => {\n    history.replace({\n      pathname: location.state.background.pathname\n    });\n  }\n\n  // handle state cleaning in case of page refresh\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", replaceState);\n    return () => {\n      window.removeEventListener(\"beforeunload\", replaceState);\n    };\n  }, []);\n\n  return(\n    <>\n      {\n        (itemsRequest || feedRequest) && \n        (!itemsFailed || !feedFailed) && \n        (!itemsSuccess || !feedSuccess) && (\n          <Loader />\n      )}\n      {\n        (itemsFailed || feedFailed) && \n        (!itemsRequest || !feedRequest) && \n        (!itemsSuccess || !feedSuccess) && (\n          <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\n            Ошибка загрузки\n          </h2>\n      )}\n      {\n        (itemsSuccess && feedSuccess) && \n        (!itemsFailed || !feedFailed) && \n        (!itemsRequest || !feedRequest) && (\n          <Modal\n            header={`#${currentOrder.number?.toString().padStart(6, '0')}`}\n            isOrderModal={true}\n            closeModal={closeModal} >\n            <OrderDetailedView\n              order={currentOrder}\n              isOrderModal={true}\n            />\n          </Modal> \n        )}\n    </>\n  );\n}\n\nexport default OrderModalPage;\n","import { FC } from 'react';\nimport sidebarLinkStyles from './sidebar-link.module.css';\n\ninterface ISidebarLink {\n  active: boolean,\n  onClick: () => void,\n  text: string\n}\n\nconst SidebarLink: FC<ISidebarLink> = (props) => {\n  return(\n    <li className={sidebarLinkStyles.sidebar_list_item}>\n      <button className={\n        `${sidebarLinkStyles.sidebar_link}\n        text text_type_main-default text_color_inactive\n        ${props.active ? sidebarLinkStyles.sidebar_link_active : ''}`\n        }\n        onClick={props.onClick} \n        title={props.text}\n      >\n        {props.text}\n      </button>\n    </li>\n  );\n}\n\nexport default SidebarLink;\n","// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\nimport sidebarStyles from './sidebar.module.css';\n// importing components from project\nimport SidebarLink from '../sidebar-link/sidebar-link';\n// import slices and their functions\nimport { logout, userSlice } from '../../services/slices/user';\n\nimport { useHistory } from 'react-router-dom';\nimport { FC, useState, useEffect } from 'react';\n\nconst Sidebar: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const { userRequest } = useAppSelector(state => state.user);\n  const { resetStatus } = userSlice.actions;\n  \n  // reset status and errors on page load\n  useEffect(() => {\n    dispatch(resetStatus());\n  }, [])\n  \n  const history = useHistory();\n\n  const [isProfilePage, setProfilePage] = useState<boolean>(false);\n  const [isHistoryPage, setHistoryPage] = useState<boolean>(false);\n\n  const currentUrl: string = history.location.pathname;\n    \n  useEffect(() => {\n    switch (currentUrl) {\n        case '/profile':\n          setProfilePage(true);\n          break;\n        case '/profile/orders':\n          setHistoryPage(true);\n          break;\n        default:\n          break;\n    }\n  }, [currentUrl]);\n\n  const onProfileClick = (): void => {\n    history.replace({ pathname: '/profile' });\n  };\n  const onHistoryClick = (): void => {\n    history.replace({ pathname: '/profile/orders' });\n  };\n\n  const onLogoutClick = (): void => {\n    // won't call API if user data is already in process\n    if (!userRequest) {\n      dispatch(logout());\n    }\n  };\n\n  return(\n    <aside className={sidebarStyles.sidebar_container}>\n      <ul className={sidebarStyles.sidebar_list}>\n        <SidebarLink\n          text={'Профиль'}\n          onClick={onProfileClick}\n          active={isProfilePage}\n        />\n        <SidebarLink\n          text={'История заказов'}\n          onClick={onHistoryClick}\n          active={isHistoryPage}\n        /> \n        <SidebarLink\n          text={'Выход'}\n          onClick={onLogoutClick}\n          active={false}\n        />\n      </ul>\n      <p className='text text_type_main-default text_color_inactive mt-20'>\n        В этом разделе вы можете изменить свои персональные данные\n      </p>\n    </aside>\n);\n}\n\nexport default Sidebar;\n","import { FC, useState, useRef, useEffect, ChangeEvent, FocusEvent } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\nimport styles from './profile.module.css';\n// importing components from project\nimport Form from '../components/form/form';\nimport Sidebar from '../components/sidebar/sidebar';\nimport Loader from '../components/loader/loader';\nimport { Input, EmailInput, Button } from '@ya.praktikum/react-developer-burger-ui-components';\n// import slices and their functions\nimport { getUser, setUser, userSlice } from '../services/slices/user';\n\nexport const ProfilePage: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const {\n    user,\n    userRequest,\n    userSuccess,\n    userFailed\n  } = useAppSelector(\n    state => state.user\n  );\n\n  const {\n    resetStatus\n  } = userSlice.actions\n\n  const [nameValue, setNameValue] = useState<string>('')\n  const [emailValue, setEmailValue] = useState<string>('')\n  const [passwordValue, setPasswordValue] = useState<string>('')\n\n  const resetError = (): void => {\n    dispatch(resetStatus());\n  }  \n\n  useEffect(() => {\n    // reset status and errors on page load\n    resetError();\n    \n    // we need to have user from API in store to render user data\n    // won't call API if user data is already in process\n    if (!userSuccess && !userRequest) {\n      dispatch(getUser());\n    }\n  }, [])\n\n  useEffect(() => {\n    setNameValue(user.name || '');\n    setEmailValue(user.email || '');\n    setPasswordValue(user.password || '');\n  }, [user]);\n\n   // TODO: create EditableInput component and move there all this checks and handlers \n  const [isNameInputDisabled, setNameInputDisabled] = useState<boolean>(true)\n  const [isNameInputEmpty, setNameInputEmpty] = useState<boolean>(false)\n  const [isPasswordInputDisabled, setPasswordInputDisabled] = useState<boolean>(true)\n  const [isPasswordInputEmpty, setPasswordInputEmpty] = useState<boolean>(false)\n  \n  const [hasFormChanged, setFormChanged] = useState<boolean>(false)\n\n  const nameInputRef = useRef<HTMLInputElement>(null)\n  const passwordInputRef = useRef<HTMLInputElement>(null)\n\n  const onNameChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // hide the error message if user is writing something in the name field\n    if (e.target.value.length > 0) {\n      setNameInputEmpty(false);\n    }\n    setNameValue(e.target.value);\n    setFormChanged(true);\n  };\n\n  const onPasswordChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // hide the error message if user is writing something in the password field\n    if (e.target.value.length > 0) {\n      setPasswordInputEmpty(false);\n    }\n    setPasswordValue(e.target.value);\n    setFormChanged(true);\n  };\n\n  const onEmailChange = (e: ChangeEvent<HTMLInputElement>):void => {\n    // hide the error message if user is writing something in the password field\n    setEmailValue(e.target.value);\n    setFormChanged(true);\n  };\n\n  const onNameIconClick = (): void => {\n    nameInputRef.current?.focus();\n    setNameInputDisabled(false);\n  }\n\n  const onPasswordIconClick = (): void => {\n    passwordInputRef.current?.focus();\n    setPasswordInputDisabled(false);\n  }\n\n  const onNameInputBlur = (e: FocusEvent<HTMLInputElement>): void => {\n    // show the error message if the name field is blank\n    if (e.target.value.length === 0) {\n      setNameInputEmpty(true);\n    }\n    setNameInputDisabled(true);\n  }\n\n  const onPasswordInputBlur = (e: FocusEvent<HTMLInputElement>): void => {\n    // show the error message if the password field is blank\n    if (e.target.value.length === 0) {\n      setPasswordInputEmpty(true);\n    }\n    setPasswordInputDisabled(true);\n  }\n\n  const onSubmitChanges = (): void => {\n    // won't call API if user data is already in process\n    if (!userRequest) {\n      dispatch(setUser({\n        name: nameValue,\n        email: emailValue,\n        password: passwordValue\n      }));\n    }\n    setFormChanged(false);\n  }\n\n  const onCancelChanges = (): void => {\n    setNameValue(user.name || '');\n    setEmailValue(user.email || '');\n    setPasswordValue(user.password || '');\n    setFormChanged(false);\n  }\n\n  return(\n    <>\n      {\n          userRequest && \n          !userFailed && \n          !userSuccess && (\n            <Loader />\n        )}\n      <div className={styles.profile_container + ' mt-30'}>\n        <Sidebar />\n        <div className={styles.form_container}>\n          {\n            userFailed && \n            !userRequest && \n            !userSuccess && (\n              <h2 className='ml-30 text text_type_main-large text_color_inactive'>\n                Ошибка загрузки\n              </h2>\n          )}\n          {\n            userSuccess && \n            !userFailed && \n            !userRequest && (\n              <Form>\n                <Input\n                  type={'text'}\n                  placeholder={'Имя'}\n                  onChange={onNameChange}\n                  value={nameValue}\n                  name={'name'}\n                  error={isNameInputEmpty}\n                  ref={nameInputRef}\n                  errorText={'Поле не может быть пустым'}\n                  size={'default'}\n                  icon={'EditIcon'}\n                  onIconClick={onNameIconClick}\n                  disabled={isNameInputDisabled}\n                  onBlur={onNameInputBlur}\n                />\n                <EmailInput\n                  onChange={onEmailChange}\n                  value={emailValue}\n                  name={'email'}\n                  size={'default'}\n                />            \n                <Input\n                  type={'password'}\n                  placeholder={'Пароль'}\n                  onChange={onPasswordChange}\n                  value={passwordValue}\n                  name={'password'}\n                  error={isPasswordInputEmpty}\n                  ref={passwordInputRef}\n                  errorText={'Поле не может быть пустым'}\n                  size={'default'}\n                  icon={'EditIcon'}\n                  onIconClick={onPasswordIconClick}\n                  disabled={isPasswordInputDisabled}\n                  onBlur={onPasswordInputBlur}\n                />\n                {hasFormChanged && \n                  <div className={styles.buttons_container}>\n                    <Button \n                      type=\"secondary\"\n                      size=\"medium\"\n                      onClick={onCancelChanges}\n                    >\n                      Отменить\n                    </Button>\n                    <Button \n                      type=\"primary\"\n                      size=\"medium\"\n                      onClick={onSubmitChanges}\n                    >\n                      Сохранить\n                    </Button>\n                  </div>\n                }\n              </Form>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ProfilePage;\n","import { FC, useEffect } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\nimport styles from './history.module.css';\n// importing components from project\nimport Sidebar from '../components/sidebar/sidebar';\nimport OrdersList from '../components/orders-list/orders-list';\nimport Loader from '../components/loader/loader';\n// import slices and their functions\nimport { feedSlice } from '../services/slices/feed';\nimport { getUser, userSlice, startHistory, stopHistory } from '../services/slices/user';\n\nexport const HistoryPage: FC = () => {\n  const dispatch = useAppDispatch();\n\n  const {\n    itemsRequest,\n    itemsSuccess,\n    itemsFailed\n  } = useAppSelector(\n    state => state.items\n  );\n  const {\n    userRequest,\n    userSuccess,\n    userFailed\n  } = useAppSelector(\n    state => state.user\n  );\n  const {\n    orders,\n    feedRequest,\n    feedSuccess,\n    feedFailed\n  } = useAppSelector(\n    state => state.feed\n  );\n  const {\n    resetStatus\n  } = userSlice.actions;\n\n  const {\n    wsConnected,\n    wsError\n  } = useAppSelector(\n    state => state.ws\n  );\n\n  useEffect(() => {\n    // reset errors on page load\n    dispatch(resetStatus());\n\n    // open new websocket when the page is opened\n    dispatch(startHistory());\n\n    // we need to have user from API in store to find user orders\n    // won't call API if user data is already in process\n    if (!userSuccess && !userRequest) {\n      dispatch(getUser());\n    }\n    return () => {\n      // close the websocket when the page is closed\n      dispatch(stopHistory());\n    };  \n  }, []);\n\n  useEffect(() => {\n    if (wsConnected)\n      dispatch(feedSlice.actions.success());\n    else if (wsError)\n      dispatch(feedSlice.actions.failed());\n  }, [wsConnected, wsError]);\n\n  return(\n    <>\n        {\n          (itemsRequest || userRequest || feedRequest) && \n          (!itemsFailed || !userFailed || !feedFailed) && \n          (!itemsSuccess || !userSuccess || !feedSuccess) && (\n            <Loader />\n        )}\n        <div className={styles.history_container + ' mt-30'}>\n        <Sidebar />\n        <div className={styles.history_orders_container}>\n          {\n            (itemsFailed || userFailed || feedFailed) && \n            (!itemsRequest || !userRequest || !feedRequest) && \n            (!itemsSuccess || !userSuccess || !feedSuccess) && (\n              <h2 className='ml-30 text text_type_main-large text_color_inactive'>\n                Ошибка загрузки\n              </h2>\n          )}\n          {\n            (itemsSuccess && userSuccess && feedSuccess) && \n            (!itemsFailed || !userFailed || !feedFailed) && \n            (!itemsRequest || !userRequest || !feedRequest) && (\n              <OrdersList \n                source='history'\n                orders={orders}\n              />\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default HistoryPage;\n","import { FC } from 'react';\nimport ingredientDetailsStyles from './ingredient-details.module.css';\nimport { IIngredient } from '../../services/types';\n\nconst IngredientDetails: FC<{ item: IIngredient }> = ({ item }) => {\n    return(\n        <div className={ingredientDetailsStyles.ingredient_details_container}>\n             <img \n                src={item.image_large}\n                alt={item.name}\n                title={item.name}\n            />           \n            <h4 className='text text_type_main-medium mt-4 mb-8'>\n                {item.name}\n            </h4>\n            <ul className={ingredientDetailsStyles.ingredient_nutrition_list}>\n                <li className={ingredientDetailsStyles.ingredient_nutrition_list_item}>\n                    <p className=\"text text_type_main-default text_color_inactive\">\n                        Калории, ккал\n                    </p>\n                    <p className=\"text text_type_digits-default text_color_inactive\">\n                        {item.calories}\n                    </p>\n                </li>\n                <li className={ingredientDetailsStyles.ingredient_nutrition_list_item}>\n                    <p className=\"text text_type_main-default text_color_inactive\">\n                        Белки, г\n                    </p>\n                    <p className=\"text text_type_digits-default text_color_inactive\">\n                        {item.proteins}\n                    </p>\n                </li>\n                <li className={ingredientDetailsStyles.ingredient_nutrition_list_item}>\n                    <p className=\"text text_type_main-default text_color_inactive\">\n                        Жиры, г\n                    </p>\n                    <p className=\"text text_type_digits-default text_color_inactive\">\n                        {item.fat}\n                    </p>\n                </li>\n                <li className={ingredientDetailsStyles.ingredient_nutrition_list_item}>\n                    <p className=\"text text_type_main-default text_color_inactive\">\n                        Углеводы, г\n                    </p>\n                    <p className=\"text text_type_digits-default text_color_inactive\">\n                        {item.carbohydrates}\n                    </p>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nexport default IngredientDetails;\n","// importing typed hooks for Redux Toolkit\nimport { useAppSelector } from '../services/hooks';\nimport { useParams } from 'react-router-dom';\n// importing components from project\nimport IngredientDetails from '../components/ingredient-details/ingredient-details';\nimport Loader from '../components/loader/loader';\nimport { FC } from 'react';\n\nexport const IngredientPage: FC = () => {\n  const {\n    items,\n    itemsRequest,\n    itemsSuccess,\n    itemsFailed\n  } = useAppSelector(\n    state => state.items\n  );\n\n  const currentIngredientId:string = useParams<{ id: string }>().id;\n\n  return (\n    <>\n    {\n      itemsRequest && \n      !itemsFailed && \n      !itemsSuccess && (\n        <Loader />\n    )}\n    {\n      itemsFailed && \n      !itemsRequest && \n      !itemsSuccess && (\n        <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\n          Ошибка загрузки\n        </h2>\n    )}\n    {\n      itemsSuccess && \n      !itemsFailed && \n      !itemsRequest && (\n        <div className='fullscreen_message'>\n          <p className=\"text text_type_main-large\">\n            Детали ингредиента\n          </p>\n          <IngredientDetails\n            item={items.find((item) => item._id === currentIngredientId) || {}}\n          />\n        </div>\n      )}\n  </>\n  );\n}\n\nexport default IngredientPage;\n","import { FC, useEffect, useCallback } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\nimport { useParams, useHistory } from 'react-router-dom';\n// importing components from project\nimport Modal from '../components/modal/modal';\nimport IngredientDetails from '../components/ingredient-details/ingredient-details';\nimport Loader from '../components/loader/loader';\n// import slices and their functions\nimport { itemsSlice } from '../services/slices/items';\nimport { IIngredient } from '../services/types';\n\nexport const IngredientModalPage: FC = () => {\n  const dispatch = useAppDispatch();\n  \n  const {\n    items,\n    itemsRequest,\n    itemsSuccess,\n    itemsFailed\n  } = useAppSelector(\n    state => state.items\n  );\n\n  const { request } = itemsSlice.actions;\n\n  const history = useHistory();\n\n  const currentItemId: string = useParams<{ id: string }>().id;\n  const currentItem: IIngredient = items.find((item) => item._id === currentItemId) || {};\n\n  const replaceState = useCallback(() => {\n    // hiding the content on page before the reload starts\n    dispatch(request())\n    // remove the background element to show ingredient page instead of a modal\n    history.replace({ \n      ...history.location,\n      state: { background: undefined }\n  });\n  }, [history]);\n\n  // return to HomePage if modal is closed\n  const closeModal = (): void => {\n    history.replace({\n      pathname: `/`\n    });\n  }\n\n  // handle state cleaning in case of page refresh\n  useEffect(() => {\n    window.addEventListener(\"beforeunload\", replaceState);\n    return () => {\n      window.removeEventListener(\"beforeunload\", replaceState);\n    };\n  }, []);\n  \n  return (\n    <>\n      {\n        itemsRequest && \n        !itemsFailed && \n        !itemsSuccess && (\n          <Loader />\n      )}\n      {\n        itemsFailed && \n        !itemsRequest && \n        !itemsSuccess && (\n          <h2 className='fullscreen_message text text_type_main-large text_color_inactive'>\n            Ошибка загрузки\n          </h2>\n      )}\n      {\n        itemsSuccess && \n        !itemsFailed && \n        !itemsRequest && (\n          <Modal \n            header='Детали ингредиента'\n            closeModal={closeModal}\n          >\n            <IngredientDetails\n              item={currentItem} \n            />\n          </Modal> \n      )}\n  </>\n  );\n}\n\nexport default IngredientModalPage;\n","import { FC } from 'react';\nimport styles from './not-found.module.css';\n\nexport const NotFound404: FC = () => {\n  return(\n    <div className={styles.fullscreen_message}>\n      <p className='text text_type_digits-large text_color_inactive'>\n        404\n      </p>\n      <h1 className='text text_type_main-large text_color_inactive'>\n        Страница не найдена\n      </h1>\n    </div>\n  );\n}\n\nexport default NotFound404;\n","import { Redirect, Route, RouteProps } from 'react-router-dom';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\nimport { FC, useEffect } from \"react\";\n// import slices and their functions\nimport { userSlice } from '../services/slices/user';\n\nexport const ProtectedRoute: FC<RouteProps> = ({ children, ...rest }) => {\n  const dispatch = useAppDispatch();\n\n  const {\n    isAuthorized\n  } = useAppSelector(\n    state => state.user\n  );\n\n  const { checkAuthorization } = userSlice.actions;\n\n  useEffect(() => {\n    // check cookies with tokens\n    dispatch(checkAuthorization());\n  }, []);\n\n  // protect routes from unauthorized users\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthorized ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n","import { FC } from 'react';\nimport { Redirect, Route, RouteProps, useLocation } from 'react-router-dom';\nimport { ILocation } from '../services/types';\n\nexport const ProtectedResetRoute: FC<RouteProps> = ({ children, ...rest }) => {\n  const location = useLocation<ILocation>();\n\n  // guests can get to reset password only when they came from ForgotPassword page\n  const { from } = location.state || { from: { pathname: '/' } }\n\n    return (\n      <Route\n        {...rest}\n        render={() =>\n          from === '/forgot-password' ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: '/forgot-password'\n              }}\n            />\n          )\n        }\n      />\n    )\n}\n","import { Redirect, Route, RouteProps, useLocation } from 'react-router-dom';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../services/hooks';\nimport { FC, useEffect } from 'react';\n// import slices and their functions\nimport { userSlice } from '../services/slices/user';\nimport { ILocation } from '../services/types';\n\nexport const ProtectedGuestRoute: FC<RouteProps> = ({ children, ...rest }) => {\n  const dispatch = useAppDispatch();\n\n  const {\n    isAuthorized\n  } = useAppSelector(\n    state => state.user\n  );\n\n  const { checkAuthorization } = userSlice.actions;\n\n  useEffect(() => {\n    // check cookies with tokens\n    dispatch(checkAuthorization());\n  }, []);\n\n  const location = useLocation<ILocation>();\n  \n  // protect routes from authorized users\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        isAuthorized ? (\n          <Redirect\n            // return to the page where user been before request\n            to={(!!location.state && location.state.from) || {pathname: \"/profile\"}}\n          />\n        ) : (\n          children\n        )\n      }\n    />\n  )\n}\n","import { FC } from 'react';\nimport menuItemStyles from './menu-item.module.css';\n\ninterface IMenuItem {\n    active: boolean,\n    onClick: () => void,\n    text: string,\n    icon: JSX.Element\n}\n\nconst MenuItem: FC<IMenuItem> = (props) => {\n    return(\n            <button className={\n                `${menuItemStyles.menu_list_item}\n                pl-5 pr-5 pt-4 pb-4 mt-4 mb-4\n                ${props.active ? menuItemStyles.menu_list_item_active : ''}`\n                }\n                onClick={props.onClick} \n                title={props.text}\n            >\n                <span className={menuItemStyles.menu_list_item_icon + ' mr-2'}>\n                    {props.icon}\n                </span>\n                <span className={menuItemStyles.menu_list_item_text +\n                    ' text text_type_main-default text_color_inactive'}\n                >\n                    {props.text}\n                </span>\n            </button>\n    );\n}\n\nexport default MenuItem;\n","import appHeaderStyles from './app-header.module.css';\n// importing components from project\nimport MenuItem from '../menu-item/menu-item';\n// importing components from library\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\n\nimport { useHistory } from 'react-router-dom';\nimport { FC, useState, useEffect } from 'react';\n\nconst AppHeader: FC = () => {\n    const history = useHistory();\n\n    const [isHomePage, setHomePage] = useState<boolean>(false);\n    const [isFeedPage, setFeedPage] = useState<boolean>(false);\n    const [isProfilePage, setProfilePage] = useState<boolean>(false);\n\n    const currentUrl: string = history.location.pathname;\n\n    useEffect(() => {\n        switch (currentUrl) {\n            case '/':\n                setHomePage(true);\n                setFeedPage(false);\n                setProfilePage(false);\n                break;\n            case '/feed':\n                setFeedPage(true);\n                setHomePage(false);\n                setProfilePage(false);\n                break;\n            case '/profile':\n            case '/profile/orders':\n                setProfilePage(true);\n                setHomePage(false);\n                setFeedPage(false);\n                break;\n            default:\n                break;\n        }\n    }, [currentUrl]);\n\n    const onConstructorClick = () => {\n        history.replace({ pathname: '/' });\n    };\n    const onFeedClick = () => {\n        history.replace({ pathname: '/feed' });\n    };\n    const onProfileClick = () => {\n        history.replace({ pathname: '/profile' });\n    };\n    const onLogoClick = () => {\n        history.replace({ pathname: '/' });\n    };\n\n    return(\n        <header>\n            <nav className={appHeaderStyles.menu_container}>\n                {/* TODO: make MenuList component for wrapping MenuItem components and Logo */}\n                <ul className={appHeaderStyles.menu_list}>\n                    <li className={appHeaderStyles.menu_list_left}>\n                        <ul className={appHeaderStyles.menu_list_left_items}>\n                            <li>\n                                <MenuItem\n                                    icon={\n                                        <BurgerIcon type={isHomePage ? \"primary\" : \"secondary\"} />\n                                    }\n                                    text=\"Конструктор\"\n                                    onClick={onConstructorClick}\n                                    active={isHomePage}\n                                />\n                            </li>\n                            <li>\n\n                                <MenuItem\n                                    icon={\n                                        <ListIcon type={isFeedPage ? \"primary\" : \"secondary\"} />\n                                    }\n                                    text=\"Лента заказов\"\n                                    onClick={onFeedClick}\n                                    active={isFeedPage}\n                                />\n                            </li>\n                        </ul>\n                    </li>\n                    <li\n                        className={appHeaderStyles.menu_list_center}\n                        onClick={onLogoClick}\n                    >\n                        <Logo />\n                    </li>\n                    <li className={appHeaderStyles.menu_list_right}>\n                        <span>\n                            <MenuItem\n                                icon={\n                                    <ProfileIcon type={isProfilePage ? \"primary\" : \"secondary\"} />\n                                }\n                                text=\"Личный кабинет\"\n                                onClick={onProfileClick}\n                                active={isProfilePage}\n                            />\n                        </span>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default AppHeader;\n","import React, { useEffect } from 'react';\n// importing typed hooks for Redux Toolkit\nimport { useAppSelector, useAppDispatch } from '../../services/hooks';\nimport { Switch, Route, useLocation } from 'react-router-dom';\nimport { ILocation } from '../../services/types'\nimport { getItems } from '../../services/slices/items';\nimport {\n  HomePage,\n  LoginPage,\n  RegisterPage,\n  ForgotPasswordPage,\n  ResetPasswordPage,\n  FeedPage,\n  OrderPage,\n  OrderModalPage,\n  ProfilePage,\n  HistoryPage,\n  IngredientPage,\n  IngredientModalPage,\n  NotFound404\n} from '../../pages';\nimport { ProtectedRoute } from '../protected-route';\nimport { ProtectedResetRoute } from '../protected-reset-route';\nimport { ProtectedGuestRoute } from '../protected-guest-route';\nimport AppHeader from '../app-header/app-header';\n\nconst App: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const location = useLocation<ILocation>();\n  const background = location.state && location.state.background;\n\n  const {\n    itemsSuccess,\n  } = useAppSelector(\n    state => state.items\n  );\n\n  // we need to have items from API in store to render ingredients on pages\n  useEffect(() => {\n    // we won't call API if items are already in store\n    if (!itemsSuccess) {\n      dispatch(getItems());\n    }\n  }, [dispatch, itemsSuccess]);\n\n  return (\n    <>\n      <AppHeader />\n      <Switch location={background || location}>\n        <Route path=\"/\" exact={true}>\n          <HomePage />\n        </Route>\n        <ProtectedGuestRoute path=\"/login\" exact={true}>\n          <LoginPage />\n        </ProtectedGuestRoute>\n        <ProtectedGuestRoute path=\"/register\" exact={true}>\n          <RegisterPage />\n        </ProtectedGuestRoute>\n        <ProtectedGuestRoute path=\"/forgot-password\" exact={true}>\n          <ForgotPasswordPage />\n        </ProtectedGuestRoute>\n        <ProtectedResetRoute path=\"/reset-password\" exact={true}>\n          <ResetPasswordPage />\n        </ProtectedResetRoute>\n        <Route path=\"/feed\" exact={true}>\n          <FeedPage />\n        </Route>\n        <Route path=\"/feed/:id\" exact={true}>\n          <OrderPage />\n        </Route>\n        <ProtectedRoute path=\"/profile\" exact={true}>\n          <ProfilePage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/profile/orders\" exact={true}>\n          <HistoryPage />\n        </ProtectedRoute>\n        <ProtectedRoute path=\"/profile/orders/:id\" exact={true}>\n          <OrderPage />\n        </ProtectedRoute>\n        <Route path=\"/ingredients/:id\" exact={true}>\n          <IngredientPage />\n        </Route>\n        <Route>\n          <NotFound404 />\n        </Route>\n      </Switch>\n\n      {/* Show the modals when a background page is set */\n        background && background.pathname === '/' &&\n        <Route path=\"/ingredients/:id\" exact={true}>\n          <IngredientModalPage />\n        </Route>\n      }\n      {\n        background && background.pathname === '/profile/orders' &&\n        <ProtectedRoute path=\"/profile/orders/:id\" exact={true}>\n          <OrderModalPage />\n        </ProtectedRoute>\n      }\n      {\n        background && background.pathname === '/feed' &&\n        <Route path=\"/feed/:id\" exact={true}>\n          <OrderModalPage />\n        </Route>\n      }\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from '@reduxjs/toolkit'\nimport { itemsSlice } from \"./items\";\nimport { burgerConstructorSlice } from \"./burger-constructor\";\nimport { orderSlice } from \"./order\";\nimport { userSlice } from \"./user\";\nimport { feedSlice } from \"./feed\";\nimport { wsSlice } from \"./websocket\";\n\nconst rootReducer = combineReducers(\n  {\n    items: itemsSlice.reducer,\n    order: orderSlice.reducer,    \n    burgerConstructor: burgerConstructorSlice.reducer,\n    user: userSlice.reducer,\n    feed: feedSlice.reducer,\n    ws: wsSlice.reducer\n  }\n)\n\nexport default rootReducer\n","import { AnyAction, MiddlewareAPI } from 'redux'\nimport { wsSlice } from '../slices/websocket';\nimport { feedSlice } from '../slices/feed';\nimport { setCookie } from '../utils';\nimport { refreshToken } from '../slices/user';\nimport { USER_ORDERS_WS_URL } from '../constants';\n\nconst {\n  wsConnectionStart,\n  wsConnectionStop,\n  wsConnectionSuccess,\n  wsConnectionError,\n  wsConnectionClosed\n} = wsSlice.actions;\n\nexport const wsMiddleware = () => {\n  return (store: MiddlewareAPI) => {\n    let socket: WebSocket | null = null;\n\n    return (next: (a: AnyAction) => void) => (action: AnyAction) => {\n      const { dispatch } = store;\n      const { type, payload } = action;\n\n      if (type === wsConnectionStart.type) {\n        const wsUrl: string = payload.token ? (\n          `${payload.url}?token=${payload.token}`\n        ) : (\n          `${payload.url}`\n        );\n        socket = new WebSocket(wsUrl);\n      }\n      \n      if (type === wsConnectionStop.type) {\n        // user has moved to another page\n        // 1001 code fires an InvalidAccessError\n        socket && socket.close(1000, 'CLOSE_NORMAL');\n      }\n\n      if (socket) {\n        socket.onopen = event => {\n          dispatch(wsConnectionSuccess());\n        };\n\n        socket.onerror = event => {\n          dispatch(wsConnectionError());\n        };\n\n        socket.onmessage = event => {\n          const { data } = event;\n          const parsedData = JSON.parse(data);\n          const { success, ...restParsedData } = parsedData;\n\n          // if accessToken has gone stale we're need to refresh it first\n          if (restParsedData.message && restParsedData.message === 'Invalid or missing token') {\n            socket && socket.close(1000, 'CLOSE_NORMAL');\n            refreshToken()\n            .then((refresh_res) => {\n              if (!refresh_res.ok && refresh_res.status >= 500) {\n                throw Error(refresh_res.statusText);\n              }\n              return refresh_res.json();\n            })\n            .then((refresh_data) => {\n              if (refresh_data.success === true) {\n                setCookie('accessToken', refresh_data.accessToken, { path: '/' });\n                setCookie('refreshToken', refresh_data.refreshToken, { path: '/' });\n                const wsToken: string = refresh_data.accessToken.replace('Bearer ', '');\n                const wsUrl: string = `${USER_ORDERS_WS_URL}?token=${wsToken}`;\n                socket = new WebSocket(wsUrl);\n              }\n              else {\n                throw Error(refresh_data.message);\n              }\n            })\n            .catch((error) => {\n              dispatch(wsConnectionError());\n              console.log(error);\n            });\n\n          }\n          dispatch(feedSlice.actions.setOrdersData(restParsedData));\n        };\n\n        socket.onclose = event => {\n          dispatch(wsConnectionClosed());\n        };\n      }\n\n      next(action);\n    };\n  };\n};\n","import thunk from 'redux-thunk';\nimport { configureStore } from '@reduxjs/toolkit'\nimport rootReducer from './slices';\nimport { wsMiddleware } from './middleware';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware()\n      .prepend(\n        thunk,\n        wsMiddleware()\n      ),\n  devTools: process.env.NODE_ENV !== 'production',\n  }); \n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.module.css';\nimport App from './components/app/app';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { store } from './services/store';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* The basename property is used for correct routing in Github Pages */}\n      <BrowserRouter basename=\"/react-burger\">\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_card\":\"orders-card_order_card__JPuJs flex_column order_card_box_shadow mb-6\",\"order_info\":\"orders-card_order_info__14qvL flex_row\",\"ingredient_icons_container\":\"orders-card_ingredient_icons_container__3rh45\",\"ingredient_icon_wrapper\":\"orders-card_ingredient_icon_wrapper__3RGh3 ingredient_icon_wrapper\",\"more_ingredients_icon\":\"orders-card_more_ingredients_icon__ThBXa\",\"more_icon_text\":\"orders-card_more_icon_text__1z-ro\",\"more_icon_wrapper\":\"orders-card_more_icon_wrapper__35tDl\",\"status_completed\":\"orders-card_status_completed__3X3kq\",\"status_canceled\":\"orders-card_status_canceled__2wWwR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_container\":\"order-detailed-view_order_container__2yWWM flex_column\",\"order_id\":\"order-detailed-view_order_id__noquR\",\"order_info\":\"order-detailed-view_order_info__3-3Mi flex_row\",\"ingredient_wrapper\":\"order-detailed-view_ingredient_wrapper__1DuMU flex_row\",\"ingredients_container\":\"order-detailed-view_ingredients_container__2E_f1 flex_column scroll\",\"ingredient_name\":\"order-detailed-view_ingredient_name__1M3Wz\",\"ingredient_price\":\"order-detailed-view_ingredient_price__2-GK2\",\"status_completed\":\"order-detailed-view_status_completed__1qDYW\",\"status_canceled\":\"order-detailed-view_status_canceled__2O_i3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger_constructor_list\":\"burger-constructor_burger_constructor_list__2tHjV flex_column\",\"burger_constructor_draggable_list\":\"burger-constructor_burger_constructor_draggable_list__30oZv burger-constructor_burger_constructor_list__2tHjV flex_column scroll\",\"burger_constructor_order\":\"burger-constructor_burger_constructor_order__2HCiC flex_row\",\"warningText\":\"burger-constructor_warningText__2esOG\",\"emptyBun\":\"burger-constructor_emptyBun__3ULsd\",\"disabled\":\"burger-constructor_disabled__22-gR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel_container\":\"feed-info-panel_panel_container__useKe flex_column scroll\",\"orders_list_container\":\"feed-info-panel_orders_list_container__ejgd2 flex_row\",\"orders_list_column\":\"feed-info-panel_orders_list_column__2V_FF\",\"orders_list_completed\":\"feed-info-panel_orders_list_completed__hIwOM flex_column\",\"orders_list_preparing\":\"feed-info-panel_orders_list_preparing__iXH9w flex_column\",\"order_id\":\"feed-info-panel_order_id__qJHat\",\"order_info\":\"feed-info-panel_order_info__1jNZP flex_row\",\"ingredient_wrapper\":\"feed-info-panel_ingredient_wrapper__B9_tz flex_row\",\"ingredients_container\":\"feed-info-panel_ingredients_container__3fcSk flex_column scroll\",\"ingredient_name\":\"feed-info-panel_ingredient_name__2bXyX\",\"ingredient_price\":\"feed-info-panel_ingredient_price__38BcF\",\"status_completed\":\"feed-info-panel_status_completed__3ocU_\",\"status_canceled\":\"feed-info-panel_status_canceled__3ySjT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient_details_container\":\"ingredient-details_ingredient_details_container__3c1XZ flex_column\",\"ingredient_nutrition_list\":\"ingredient-details_ingredient_nutrition_list__1NOWq flex_row\",\"ingredient_nutrition_list_item\":\"ingredient-details_ingredient_nutrition_list_item__3TET_ flex_column\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_container\":\"app-header_menu_container__5o1fa flex_row card_box_shadow\",\"menu_list\":\"app-header_menu_list__PoRRQ flex_row\",\"menu_list_left\":\"app-header_menu_list_left__3vNSg\",\"menu_list_left_items\":\"app-header_menu_list_left_items__1zhYf flex_row\",\"menu_list_center\":\"app-header_menu_list_center__3-73k flex_row\",\"menu_list_right\":\"app-header_menu_list_right__1ZV9e flex_row\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropContainer\":\"draggable-constructor-element_dropContainer__1P2Bf\",\"dropContainerPushed\":\"draggable-constructor-element_dropContainerPushed__LHOXU\",\"drag_icon\":\"draggable-constructor-element_drag_icon__2NKSM\",\"draggable_list_item\":\"draggable-constructor-element_draggable_list_item__1K-AH flex_row\",\"dragged\":\"draggable-constructor-element_dragged__3yXyW\",\"pushedUp\":\"draggable-constructor-element_pushedUp__Q3q1p\",\"pushedDown\":\"draggable-constructor-element_pushedDown__1CSUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal_container\":\"modal_modal_container__2vFow card_box_shadow flex_column\",\"modal_header\":\"modal_modal_header__gVKs2 flex_row\",\"close_icon\":\"modal_close_icon__1ENxs\",\"fancy_icon\":\"modal_fancy_icon__24ZC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed_container\":\"feed_feed_container__1fywj flex_row\",\"feed_orders_container\":\"feed_feed_orders_container__98bPA\",\"feed_info_container\":\"feed_feed_info_container__3MW1u\",\"feed_title\":\"feed_feed_title__3Uold\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_list_item\":\"menu-item_menu_list_item__8z3Ob\",\"menu_list_item_icon\":\"menu-item_menu_list_item_icon__2wihD\",\"menu_list_item_active\":\"menu-item_menu_list_item_active__EUwos\",\"menu_list_item_text\":\"menu-item_menu_list_item_text__3WUVw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"home_container__21QWL flex_row\",\"container_left\":\"home_container_left__3XAF9\",\"container_right\":\"home_container_right__39Rur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order_details_container\":\"order-details_order_details_container__NTrmh flex_column\",\"order_id\":\"order-details_order_id__2YBV4\",\"loader_container\":\"order-details_loader_container__1jeSx flex_column\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_container\":\"profile_profile_container__1lDUw flex_row\",\"form_container\":\"profile_form_container__1Rw1F\",\"buttons_container\":\"profile_buttons_container__FWZAo flex_row\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar_list_item\":\"sidebar-link_sidebar_list_item__3huwe\",\"sidebar_link\":\"sidebar-link_sidebar_link__dC9up\",\"sidebar_link_active\":\"sidebar-link_sidebar_link_active__2-G3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab_selector\":\"burger-ingredients_tab_selector__1cix3 flex_row\",\"scroll_container\":\"burger-ingredients_scroll_container__3k8oQ scroll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient_card\":\"burger-ingredients-card_ingredient_card__3DW8s flex_column\",\"ingredient_image\":\"burger-ingredients-card_ingredient_image__1gPXp\",\"ingredient_name\":\"burger-ingredients-card_ingredient_name__1rNve\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__31U88 flex_row\",\"spinner\":\"loader_spinner__zXvWA\",\"spin\":\"loader_spin__3GevV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar_container\":\"sidebar_sidebar_container__3ny5C\",\"sidebar_list\":\"sidebar_sidebar_list__21_qC flex_column\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history_container\":\"history_history_container__2SrKS flex_row\",\"history_orders_container\":\"history_history_orders_container__1Ur-7\"};"],"sourceRoot":""}